/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include "../pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/AudioMixer_ENUMS.h"
#include "Headers/AudioMixer_PARAMS.h"
#include "Headers/AudioMixer_USynthComponent.h"
#include "Headers/AudioMixer_UAudioMixerBlueprintLibrary.h"
#include "Headers/AudioMixer_USynthSound.h"
#include "Headers/AudioMixer_USubmixEffectDynamicsProcessorPreset.h"
#include "Headers/AudioMixer_USubmixEffectSubmixEQPreset.h"
#include "Headers/AudioMixer_USubmixEffectReverbPreset.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioMixer
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x010B6E90
     *         Name   -> Function /Script/AudioMixer.SynthComponent.Stop
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USynthComponent::Stop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.Stop");
        
        USynthComponent_Stop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6D70
     *         Name   -> Function /Script/AudioMixer.SynthComponent.Start
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USynthComponent::Start()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.Start");
        
        USynthComponent_Start_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6CF0
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetVolumeMultiplier
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              VolumeMultiplier                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetVolumeMultiplier(float VolumeMultiplier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetVolumeMultiplier");
        
        USynthComponent_SetVolumeMultiplier_Params params {};
        params.VolumeMultiplier = VolumeMultiplier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6C20
     *         Name   -> Function /Script/AudioMixer.SynthComponent.SetSubmixSend
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundSubmix*                              Submix                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              SendLevel                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USynthComponent::SetSubmixSend(Engine::USoundSubmix* Submix, float SendLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.SetSubmixSend");
        
        USynthComponent_SetSubmixSend_Params params {};
        params.Submix = Submix;
        params.SendLevel = SendLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B64A0
     *         Name   -> Function /Script/AudioMixer.SynthComponent.IsPlaying
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USynthComponent::IsPlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SynthComponent.IsPlaying");
        
        USynthComponent_IsPlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6EB0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EAudioRecordingExportType                  ExportType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Name                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                Path                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToRecord                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundWave*                                ExistingSoundWaveToOverwrite                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundWave*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USoundWave* UAudioMixerBlueprintLibrary::STATIC_StopRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::EAudioRecordingExportType ExportType, const BasicTypes::FString& Name, const BasicTypes::FString& Path, Engine::USoundSubmix* SubmixToRecord, Engine::USoundWave* ExistingSoundWaveToOverwrite)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StopRecordingOutput");
        
        UAudioMixerBlueprintLibrary_StopRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ExportType = ExportType;
        params.Name = Name;
        params.Path = Path;
        params.SubmixToRecord = SubmixToRecord;
        params.ExistingSoundWaveToOverwrite = ExistingSoundWaveToOverwrite;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6D90
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ExpectedDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToRecord                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_StartRecordingOutput(CoreUObject::UObject* WorldContextObject, float ExpectedDuration, Engine::USoundSubmix* SubmixToRecord)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.StartRecordingOutput");
        
        UAudioMixerBlueprintLibrary_StartRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ExpectedDuration = ExpectedDuration;
        params.SubmixToRecord = SubmixToRecord;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B67D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetBypassSourceEffectChainEntry
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EntryIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bBypassed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_SetBypassSourceEffectChainEntry(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex, bool bBypassed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.SetBypassSourceEffectChainEntry");
        
        UAudioMixerBlueprintLibrary_SetBypassSourceEffectChainEntry_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.EntryIndex = EntryIndex;
        params.bBypassed = bBypassed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6720
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ResumeRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ResumeRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ResumeRecordingOutput");
        
        UAudioMixerBlueprintLibrary_ResumeRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToPause = SubmixToPause;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6630
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSourceEffectFromPresetChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            EntryIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveSourceEffectFromPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveSourceEffectFromPresetChain");
        
        UAudioMixerBlueprintLibrary_RemoveSourceEffectFromPresetChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.EntryIndex = EntryIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6580
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveMasterSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_RemoveMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.RemoveMasterSubmixEffect");
        
        UAudioMixerBlueprintLibrary_RemoveMasterSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B64D0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PauseRecordingOutput
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundSubmix*                              SubmixToPause                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_PauseRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.PauseRecordingOutput");
        
        UAudioMixerBlueprintLibrary_PauseRecordingOutput_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixToPause = SubmixToPause;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B63E0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetNumberOfEntriesInSourceEffectChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UAudioMixerBlueprintLibrary::STATIC_GetNumberOfEntriesInSourceEffectChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.GetNumberOfEntriesInSourceEffectChain");
        
        UAudioMixerBlueprintLibrary_GetNumberOfEntriesInSourceEffectChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6370
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearMasterSubmixEffects
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_ClearMasterSubmixEffects(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.ClearMasterSubmixEffects");
        
        UAudioMixerBlueprintLibrary_ClearMasterSubmixEffects_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6270
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSourceEffectToPresetChain
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSourcePresetChain*             PresetChain                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::FSourceEffectChainEntry                    Entry                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_AddSourceEffectToPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, const Engine::FSourceEffectChainEntry& Entry)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddSourceEffectToPresetChain");
        
        UAudioMixerBlueprintLibrary_AddSourceEffectToPresetChain_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.PresetChain = PresetChain;
        params.Entry = Entry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B61C0
     *         Name   -> Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddMasterSubmixEffect
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USoundEffectSubmixPreset*                  SubmixEffectPreset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UAudioMixerBlueprintLibrary::STATIC_AddMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.AudioMixerBlueprintLibrary.AddMasterSubmixEffect");
        
        UAudioMixerBlueprintLibrary_AddMasterSubmixEffect_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.SubmixEffectPreset = SubmixEffectPreset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6900
     *         Name   -> Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectDynamicsProcessorSettings InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectDynamicsProcessorPreset::SetSettings(const AudioMixer::FSubmixEffectDynamicsProcessorSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings");
        
        USubmixEffectDynamicsProcessorPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6A70
     *         Name   -> Function /Script/AudioMixer.SubmixEffectSubmixEQPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectSubmixEQSettings          InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectSubmixEQPreset::SetSettings(const AudioMixer::FSubmixEffectSubmixEQSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectSubmixEQPreset.SetSettings");
        
        USubmixEffectSubmixEQPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B6B20
     *         Name   -> Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UReverbEffect*                             InReverbEffect                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              WetLevel                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              DryLevel                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectReverbPreset::SetSettingsWithReverbEffect(Engine::UReverbEffect* InReverbEffect, float WetLevel, float DryLevel)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect");
        
        USubmixEffectReverbPreset_SetSettingsWithReverbEffect_Params params {};
        params.InReverbEffect = InReverbEffect;
        params.WetLevel = WetLevel;
        params.DryLevel = DryLevel;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010B69B0
     *         Name   -> Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettings
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         AudioMixer::FSubmixEffectReverbSettings            InSettings                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USubmixEffectReverbPreset::SetSettings(const AudioMixer::FSubmixEffectReverbSettings& InSettings)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/AudioMixer.SubmixEffectReverbPreset.SetSettings");
        
        USubmixEffectReverbPreset_SetSettings_Params params {};
        params.InSettings = InSettings;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
