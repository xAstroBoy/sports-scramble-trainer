/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/BP_KeyboardActor_PARAMS.h"
#include "Headers/BP_KeyboardActor_ABP_KeyboardActor_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_KeyboardActor
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceEnter
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceEnter(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceEnter");
        
        ABP_KeyboardActor_C_TraceEnter_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceLeave
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceLeave(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceLeave");
        
        ABP_KeyboardActor_C_TraceLeave_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceOver
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         Engine::UPrimitiveComponent*                       HitComponent                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceOver(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* HitComponent, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceOver");
        
        ABP_KeyboardActor_C_TraceOver_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        params.HitComponent = HitComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceOut
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         Engine::UPrimitiveComponent*                       LeavingComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceOut(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* LeavingComponent, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceOut");
        
        ABP_KeyboardActor_C_TraceOut_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        params.LeavingComponent = LeavingComponent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceMove
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent, Const)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceMove(Engine::FHitResult* Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceMove");
        
        ABP_KeyboardActor_C_TraceMove_Params params {};
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Hit != nullptr)
            *Hit = params.Hit;
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceDown
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceDown(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceDown");
        
        ABP_KeyboardActor_C_TraceDown_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceUp
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         Engine::FHitResult                                 Hit                                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
     *         BP_TraceInteractor::UBP_TraceInteractor_C*         interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::TraceUp(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.TraceUp");
        
        ABP_KeyboardActor_C_TraceUp_Params params {};
        params.Hit = Hit;
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ShouldInteractWithWidgets
     *         Flags  -> (Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               Return                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::ShouldInteractWithWidgets(bool* Return)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ShouldInteractWithWidgets");
        
        ABP_KeyboardActor_C_ShouldInteractWithWidgets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Return != nullptr)
            *Return = params.Return;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.Initialize
     *         Flags  -> (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::Initialize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.Initialize");
        
        ABP_KeyboardActor_C_Initialize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ValidWidgetInteractor
     *         Flags  -> (Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         UMG::UWidgetInteractionComponent*                  interactor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               IsValid                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::ValidWidgetInteractor(UMG::UWidgetInteractionComponent* interactor, bool* IsValid)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ValidWidgetInteractor");
        
        ABP_KeyboardActor_C_ValidWidgetInteractor_Params params {};
        params.interactor = interactor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (IsValid != nullptr)
            *IsValid = params.IsValid;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.UserConstructionScript
     *         Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::UserConstructionScript()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.UserConstructionScript");
        
        ABP_KeyboardActor_C_UserConstructionScript_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ReceiveBeginPlay
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::ReceiveBeginPlay()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ReceiveBeginPlay");
        
        ABP_KeyboardActor_C_ReceiveBeginPlay_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.KeyPressed_Event_1
     *         Flags  -> (BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (BlueprintVisible, BlueprintReadOnly, Parm)
     *         InputCore::FKey                                    Key                                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
     *         InputCore::FKey                                    Modifier                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::KeyPressed_Event_1(const BasicTypes::FText& Text, const InputCore::FKey& Key, const InputCore::FKey& Modifier)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.KeyPressed_Event_1");
        
        ABP_KeyboardActor_C_KeyPressed_Event_1_Params params {};
        params.Text = Text;
        params.Key = Key;
        params.Modifier = Modifier;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ExecuteUbergraph_BP_KeyboardActor
     *         Flags  -> (Final, HasDefaults)
     * Parameters:
     *         int32_t                                            EntryPoint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::ExecuteUbergraph_BP_KeyboardActor(int32_t EntryPoint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.ExecuteUbergraph_BP_KeyboardActor");
        
        ABP_KeyboardActor_C_ExecuteUbergraph_BP_KeyboardActor_Params params {};
        params.EntryPoint = EntryPoint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.StringChanged__DelegateSignature
     *         Flags  -> (Public, Delegate, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FString                                NewString                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void ABP_KeyboardActor_C::StringChanged__DelegateSignature(const BasicTypes::FString& NewString)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C.StringChanged__DelegateSignature");
        
        ABP_KeyboardActor_C_StringChanged__DelegateSignature_Params params {};
        params.NewString = NewString;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
