/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include "../pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/DatasmithContent_ENUMS.h"
#include "Headers/DatasmithContent_PARAMS.h"
#include "Headers/DatasmithContent_UDatasmithObjectTemplate.h"
#include "Headers/DatasmithContent_UDatasmithActorTemplate.h"
#include "Headers/DatasmithContent_ADatasmithAreaLightActor.h"
#include "Headers/DatasmithContent_UDatasmithAreaLightActorTemplate.h"
#include "Headers/DatasmithContent_UDatasmithAssetImportData.h"
#include "Headers/DatasmithContent_UDatasmithStaticMeshImportData.h"
#include "Headers/DatasmithContent_UDatasmithStaticMeshCADImportData.h"
#include "Headers/DatasmithContent_UDatasmithSceneImportData.h"
#include "Headers/DatasmithContent_UDatasmithMDLSceneImportData.h"
#include "Headers/DatasmithContent_UDatasmithDeltaGenAssetImportData.h"
#include "Headers/DatasmithContent_UDatasmithDeltaGenSceneImportData.h"
#include "Headers/DatasmithContent_UDatasmithVREDSceneImportData.h"
#include "Headers/DatasmithContent_UDatasmithContentBlueprintLibrary.h"
#include "Headers/DatasmithContent_UDatasmithImportOptions.h"
#include "Headers/DatasmithContent_UDatasmithLandscapeTemplate.h"
#include "Headers/DatasmithContent_UDatasmithLightComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithPointLightComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithScene.h"
#include "Headers/DatasmithContent_ADatasmithSceneActor.h"
#include "Headers/DatasmithContent_UDatasmithSceneComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithSkyLightComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithSpotLightComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithStaticMeshComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithStaticMeshTemplate.h"
#include "Headers/DatasmithContent_UDatasmithVREDAssetImportData.h"
#include "Headers/DatasmithContent_UDatasmithAssetUserData.h"
#include "Headers/DatasmithContent_UDatasmithCineCameraComponentTemplate.h"
#include "Headers/DatasmithContent_UDatasmithCADImportSceneData.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::DatasmithContent
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x0023BFE0
     *         Name   -> Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserDataValueForKey
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  Key                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UDatasmithContentBlueprintLibrary::STATIC_GetDatasmithUserDataValueForKey(CoreUObject::UObject* Object, const BasicTypes::FName& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserDataValueForKey");
        
        UDatasmithContentBlueprintLibrary_GetDatasmithUserDataValueForKey_Params params {};
        params.Object = Object;
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023BE30
     *         Name   -> Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserDataKeysAndValuesForValue
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                StringToMatch                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FName>              OutKeys                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<BasicTypes::FString>            OutValues                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDatasmithContentBlueprintLibrary::STATIC_GetDatasmithUserDataKeysAndValuesForValue(CoreUObject::UObject* Object, const BasicTypes::FString& StringToMatch, BasicTypes::TArray<BasicTypes::FName>* OutKeys, BasicTypes::TArray<BasicTypes::FString>* OutValues)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserDataKeysAndValuesForValue");
        
        UDatasmithContentBlueprintLibrary_GetDatasmithUserDataKeysAndValuesForValue_Params params {};
        params.Object = Object;
        params.StringToMatch = StringToMatch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutKeys != nullptr)
            *OutKeys = params.OutKeys;
        if (OutValues != nullptr)
            *OutValues = params.OutValues;
    }

    /**
     * Function:
     *         RVA    -> 0x0023BDB0
     *         Name   -> Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserData
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         DatasmithContent::UDatasmithAssetUserData*         ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    DatasmithContent::UDatasmithAssetUserData* UDatasmithContentBlueprintLibrary::STATIC_GetDatasmithUserData(CoreUObject::UObject* Object)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserData");
        
        UDatasmithContentBlueprintLibrary_GetDatasmithUserData_Params params {};
        params.Object = Object;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
