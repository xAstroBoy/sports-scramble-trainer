/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/EyeTracker_ENUMS.h"
#include "Headers/EyeTracker_PARAMS.h"
#include "Headers/EyeTracker_UEyeTrackerFunctionLibrary.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::EyeTracker
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x01089600
     *         Name   -> Function /Script/EyeTracker.EyeTrackerFunctionLibrary.SetEyeTrackedPlayer
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEyeTrackerFunctionLibrary::STATIC_SetEyeTrackedPlayer(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EyeTracker.EyeTrackerFunctionLibrary.SetEyeTrackedPlayer");
        
        UEyeTrackerFunctionLibrary_SetEyeTrackedPlayer_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010895D0
     *         Name   -> Function /Script/EyeTracker.EyeTrackerFunctionLibrary.IsStereoGazeDataAvailable
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEyeTrackerFunctionLibrary::STATIC_IsStereoGazeDataAvailable()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EyeTracker.EyeTrackerFunctionLibrary.IsStereoGazeDataAvailable");
        
        UEyeTrackerFunctionLibrary_IsStereoGazeDataAvailable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010895A0
     *         Name   -> Function /Script/EyeTracker.EyeTrackerFunctionLibrary.IsEyeTrackerConnected
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEyeTrackerFunctionLibrary::STATIC_IsEyeTrackerConnected()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EyeTracker.EyeTrackerFunctionLibrary.IsEyeTrackerConnected");
        
        UEyeTrackerFunctionLibrary_IsEyeTrackerConnected_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01089500
     *         Name   -> Function /Script/EyeTracker.EyeTrackerFunctionLibrary.GetStereoGazeData
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         EyeTracker::FEyeTrackerStereoGazeData              OutGazeData                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEyeTrackerFunctionLibrary::STATIC_GetStereoGazeData(EyeTracker::FEyeTrackerStereoGazeData* OutGazeData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EyeTracker.EyeTrackerFunctionLibrary.GetStereoGazeData");
        
        UEyeTrackerFunctionLibrary_GetStereoGazeData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutGazeData != nullptr)
            *OutGazeData = params.OutGazeData;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01089450
     *         Name   -> Function /Script/EyeTracker.EyeTrackerFunctionLibrary.GetGazeData
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         EyeTracker::FEyeTrackerGazeData                    OutGazeData                                                (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEyeTrackerFunctionLibrary::STATIC_GetGazeData(EyeTracker::FEyeTrackerGazeData* OutGazeData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/EyeTracker.EyeTrackerFunctionLibrary.GetGazeData");
        
        UEyeTrackerFunctionLibrary_GetGazeData_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (OutGazeData != nullptr)
            *OutGazeData = params.OutGazeData;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
