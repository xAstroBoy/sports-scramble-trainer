/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/FunctionLibrary_PARAMS.h"
#include "Headers/FunctionLibrary_UFunctionLibrary_C.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::FunctionLibrary
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.PlayThemeMusic
     *         Flags  -> (Static, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               PlayIntro                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         float                                              FadeTime                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_PlayThemeMusic(bool PlayIntro, float FadeTime, CoreUObject::UObject* __WorldContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.PlayThemeMusic");
        
        UFunctionLibrary_C_PlayThemeMusic_Params params {};
        params.PlayIntro = PlayIntro;
        params.FadeTime = FadeTime;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetPlayerNames
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         int32_t                                            MaxLength                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::FText                                  Player1                                                    (Parm, OutParm)
     *         BasicTypes::FText                                  Player2                                                    (Parm, OutParm)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetPlayerNames(CoreUObject::UObject* WorldContextObject, int32_t MaxLength, CoreUObject::UObject* __WorldContext, BasicTypes::FText* Player1, BasicTypes::FText* Player2)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetPlayerNames");
        
        UFunctionLibrary_C_GetPlayerNames_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.MaxLength = MaxLength;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Player1 != nullptr)
            *Player1 = params.Player1;
        if (Player2 != nullptr)
            *Player2 = params.Player2;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetBaseballInstrumentProperties
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::TArray<SportsScramble::EBaseballInstrumentType> InstrumentTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::TArray<SportsScramble::FBaseballInstrumentEntryProperties> Properties                                                 (Parm, OutParm, ZeroConstructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetBaseballInstrumentProperties(BasicTypes::TArray<SportsScramble::EBaseballInstrumentType> InstrumentTypes, CoreUObject::UObject* __WorldContext, BasicTypes::TArray<SportsScramble::FBaseballInstrumentEntryProperties>* Properties)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetBaseballInstrumentProperties");
        
        UFunctionLibrary_C_GetBaseballInstrumentProperties_Params params {};
        params.InstrumentTypes = InstrumentTypes;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Properties != nullptr)
            *Properties = params.Properties;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetBaseballBallProperties
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::TArray<SportsScramble::EBaseballBallType> BallTypes                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::TArray<SportsScramble::FBaseballBallScrambleProperties> Properties                                                 (Parm, OutParm, ZeroConstructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetBaseballBallProperties(BasicTypes::TArray<SportsScramble::EBaseballBallType> BallTypes, CoreUObject::UObject* __WorldContext, BasicTypes::TArray<SportsScramble::FBaseballBallScrambleProperties>* Properties)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetBaseballBallProperties");
        
        UFunctionLibrary_C_GetBaseballBallProperties_Params params {};
        params.BallTypes = BallTypes;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Properties != nullptr)
            *Properties = params.Properties;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.IsButtonTouchActor
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
     * Parameters:
     *         Engine::AActor*                                    Actor                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_IsButtonTouchActor(Engine::AActor* Actor, CoreUObject::UObject* __WorldContext, bool* ReturnValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.IsButtonTouchActor");
        
        UFunctionLibrary_C_IsButtonTouchActor_Params params {};
        params.Actor = Actor;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ReturnValue != nullptr)
            *ReturnValue = params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.RemoveAllFireAndForgetActors
     *         Flags  -> (Static, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         bool                                               Instant                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_RemoveAllFireAndForgetActors(bool Instant, CoreUObject::UObject* __WorldContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.RemoveAllFireAndForgetActors");
        
        UFunctionLibrary_C_RemoveAllFireAndForgetActors_Params params {};
        params.Instant = Instant;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetLocText
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::FName                                  LocTextName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::FText                                  Text                                                       (Parm, OutParm)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetLocText(const BasicTypes::FName& LocTextName, CoreUObject::UObject* __WorldContext, BasicTypes::FText* Text)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetLocText");
        
        UFunctionLibrary_C_GetLocText_Params params {};
        params.LocTextName = LocTextName;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Text != nullptr)
            *Text = params.Text;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.DestroyAllGrabbables
     *         Flags  -> (Static, Public, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         SportsScramble::AScramPlayer*                      Player                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_DestroyAllGrabbables(SportsScramble::AScramPlayer* Player, CoreUObject::UObject* __WorldContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.DestroyAllGrabbables");
        
        UFunctionLibrary_C_DestroyAllGrabbables_Params params {};
        params.Player = Player;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.CheckMatchFromClasses
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         CoreUObject::UObject*                              InstrumentClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              BallClass                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
     */
    bool UFunctionLibrary_C::STATIC_CheckMatchFromClasses(CoreUObject::UObject* InstrumentClass, CoreUObject::UObject* BallClass, CoreUObject::UObject* __WorldContext)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.CheckMatchFromClasses");
        
        UFunctionLibrary_C_CheckMatchFromClasses_Params params {};
        params.InstrumentClass = InstrumentClass;
        params.BallClass = BallClass;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetMatchesFromBallClasses
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::TArray<TN_Ball_Base::ATN_Ball_Base_C*> BallClasses                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
     *         bool                                               UseScramblerExclusions                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*> RacketClasses                                              (Parm, OutParm, ZeroConstructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetMatchesFromBallClasses(BasicTypes::TArray<TN_Ball_Base::ATN_Ball_Base_C*>* BallClasses, bool UseScramblerExclusions, CoreUObject::UObject* __WorldContext, BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*>* RacketClasses)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetMatchesFromBallClasses");
        
        UFunctionLibrary_C_GetMatchesFromBallClasses_Params params {};
        params.UseScramblerExclusions = UseScramblerExclusions;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (BallClasses != nullptr)
            *BallClasses = params.BallClasses;
        if (RacketClasses != nullptr)
            *RacketClasses = params.RacketClasses;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetMatchesFromRacketClasses
     *         Flags  -> (Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*> RacketClasses                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
     *         bool                                               UseScramblerExclusions                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::TArray<TN_Ball_Base::ATN_Ball_Base_C*> BallClasses                                                (Parm, OutParm, ZeroConstructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetMatchesFromRacketClasses(BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*>* RacketClasses, bool UseScramblerExclusions, CoreUObject::UObject* __WorldContext, BasicTypes::TArray<TN_Ball_Base::ATN_Ball_Base_C*>* BallClasses)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetMatchesFromRacketClasses");
        
        UFunctionLibrary_C_GetMatchesFromRacketClasses_Params params {};
        params.UseScramblerExclusions = UseScramblerExclusions;
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RacketClasses != nullptr)
            *RacketClasses = params.RacketClasses;
        if (BallClasses != nullptr)
            *BallClasses = params.BallClasses;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetActiveTennisBallClass
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         TN_Ball_Base::ATN_Ball_Base_C*                     BallClass                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetActiveTennisBallClass(CoreUObject::UObject* __WorldContext, TN_Ball_Base::ATN_Ball_Base_C** BallClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetActiveTennisBallClass");
        
        UFunctionLibrary_C_GetActiveTennisBallClass_Params params {};
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (BallClass != nullptr)
            *BallClass = params.BallClass;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetActiveTennisRacketClasses
     *         Flags  -> (Static, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
     * Parameters:
     *         CoreUObject::UObject*                              __WorldContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
     *         BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*> RacketClasses                                              (Parm, OutParm, ZeroConstructor)
     *         void                                               ReturnValue
     */
    void UFunctionLibrary_C::STATIC_GetActiveTennisRacketClasses(CoreUObject::UObject* __WorldContext, BasicTypes::TArray<TN_Instrument_Base::ATN_Instrument_Base_C*>* RacketClasses)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Game/Blueprints/FunctionLibrary.FunctionLibrary_C.GetActiveTennisRacketClasses");
        
        UFunctionLibrary_C_GetActiveTennisRacketClasses_Params params {};
        params.__WorldContext = __WorldContext;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (RacketClasses != nullptr)
            *RacketClasses = params.RacketClasses;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
