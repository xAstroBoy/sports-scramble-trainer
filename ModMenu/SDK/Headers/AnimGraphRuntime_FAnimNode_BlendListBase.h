#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FPoseLink.h"
#include "Engine_ENUMS.h"
#include "Engine_FAlphaBlend.h"
#include "Engine_FBlendSampleData.h"
#include "Engine_FAnimNode_Base.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UCurveFloat; };
namespace CG::Engine { class UBlendProfile; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimGraphRuntime
{
    /**
     * ScriptStruct /Script/AnimGraphRuntime.AnimNode_BlendListBase
     * Size -> 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
     */
    struct FAnimNode_BlendListBase : public Engine::FAnimNode_Base
    {
    public:
        BasicTypes::TArray<Engine::FPoseLink>                        BlendPose;                                               //  Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    BlendTime;                                               //  Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic
        Engine::EAlphaBlendOption                                    BlendType;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UCurveFloat*                                         CustomBlendCurve;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UBlendProfile*                                       BlendProfile;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FAlphaBlend>                      Blends;                                                  //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    BlendWeights;                                            //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<float>                                    RemainingBlendTimes;                                     //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        int32_t                                                      LastActiveChildIndex;                                    //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBlendSampleData>                 PerBoneSampleData;                                       //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bResetChildOnActivation;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
