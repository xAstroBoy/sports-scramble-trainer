#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPoseLink.h"
#include "Engine_ENUMS.h"
#include "Engine_FInputScaleBias.h"
#include "Engine_FInputAlphaBoolBlend.h"
#include "BasicTypes_FName.h"
#include "Engine_FInputScaleBiasClamp.h"
#include "AnimGraphRuntime_FAnimNode_BlendSpacePlayer.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AnimGraphRuntime
{
    /**
     * ScriptStruct /Script/AnimGraphRuntime.AnimNode_RotationOffsetBlendSpace
     * Size -> 0x00B8 (FullSize[0x01E0] - InheritedSize[0x0128])
     */
    struct FAnimNode_RotationOffsetBlendSpace : public AnimGraphRuntime::FAnimNode_BlendSpacePlayer
    {
    public:
        Engine::FPoseLink                                            BasePose;                                                //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        int32_t                                                      LODThreshold;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsLODEnabled;                                           //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::EAnimAlphaInputType                                  AlphaInputType;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        Alpha;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FInputScaleBias                                      AlphaScaleBias;                                          //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        float                                                        ActualAlpha;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAlphaBoolEnabled;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FInputAlphaBoolBlend                                 AlphaBoolBlend;                                          //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::FName                                            AlphaCurveName;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FInputScaleBiasClamp                                 AlphaScaleBiasClamp;                                     //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
