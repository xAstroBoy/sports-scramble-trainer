#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_UObject.h"
#include "AssetRegistry_FAssetData.h"
#include "CoreUObject_FSoftObjectPath.h"
#include "AssetRegistry_FARFilter.h"
#include "BasicTypes_TArray.h"
#include "AssetRegistry_FTagAndValue.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TScriptInterface.h"
#include "AssetRegistry_IAssetRegistry.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AssetRegistry
{
    /**
     * Class /Script/AssetRegistry.AssetRegistryHelpers
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UAssetRegistryHelpers : public CoreUObject::UObject
    {
    public:
        CoreUObject::FSoftObjectPath STATIC_ToSoftObjectPath(const AssetRegistry::FAssetData& InAssetData);
        AssetRegistry::FARFilter STATIC_SetFilterTagsAndValues(const AssetRegistry::FARFilter& InFilter, BasicTypes::TArray<AssetRegistry::FTagAndValue> InTagsAndValues);
        bool STATIC_IsValid(const AssetRegistry::FAssetData& InAssetData);
        bool STATIC_IsUAsset(const AssetRegistry::FAssetData& InAssetData);
        bool STATIC_IsRedirector(const AssetRegistry::FAssetData& InAssetData);
        bool STATIC_IsAssetLoaded(const AssetRegistry::FAssetData& InAssetData);
        bool STATIC_GetTagValue(const AssetRegistry::FAssetData& InAssetData, const BasicTypes::FName& InTagName, BasicTypes::FString* OutTagValue);
        BasicTypes::FString STATIC_GetFullName(const AssetRegistry::FAssetData& InAssetData);
        BasicTypes::FString STATIC_GetExportTextName(const AssetRegistry::FAssetData& InAssetData);
        CoreUObject::UObject* STATIC_GetClass(const AssetRegistry::FAssetData& InAssetData);
        BasicTypes::TScriptInterface<AssetRegistry::IAssetRegistry> STATIC_GetAssetRegistry();
        CoreUObject::UObject* STATIC_GetAsset(const AssetRegistry::FAssetData& InAssetData);
        AssetRegistry::FAssetData STATIC_CreateAssetData(CoreUObject::UObject* InAsset, bool bAllowBlueprintClass);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AssetRegistry.AssetRegistryHelpers");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
