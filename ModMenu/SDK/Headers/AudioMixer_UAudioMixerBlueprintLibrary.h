#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_FString.h"
#include "Engine_FSourceEffectChainEntry.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class USoundSubmix; };
namespace CG::Engine { class USoundWave; };
namespace CG::Engine { class USoundEffectSourcePresetChain; };
namespace CG::Engine { class USoundEffectSubmixPreset; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::AudioMixer
{
    /**
     * Class /Script/AudioMixer.AudioMixerBlueprintLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UAudioMixerBlueprintLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        Engine::USoundWave* STATIC_StopRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::EAudioRecordingExportType ExportType, const BasicTypes::FString& Name, const BasicTypes::FString& Path, Engine::USoundSubmix* SubmixToRecord, Engine::USoundWave* ExistingSoundWaveToOverwrite);
        void STATIC_StartRecordingOutput(CoreUObject::UObject* WorldContextObject, float ExpectedDuration, Engine::USoundSubmix* SubmixToRecord);
        void STATIC_SetBypassSourceEffectChainEntry(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex, bool bBypassed);
        void STATIC_ResumeRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause);
        void STATIC_RemoveSourceEffectFromPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, int32_t EntryIndex);
        void STATIC_RemoveMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset);
        void STATIC_PauseRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::USoundSubmix* SubmixToPause);
        int32_t STATIC_GetNumberOfEntriesInSourceEffectChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain);
        void STATIC_ClearMasterSubmixEffects(CoreUObject::UObject* WorldContextObject);
        void STATIC_AddSourceEffectToPresetChain(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSourcePresetChain* PresetChain, const Engine::FSourceEffectChainEntry& Entry);
        void STATIC_AddMasterSubmixEffect(CoreUObject::UObject* WorldContextObject, Engine::USoundEffectSubmixPreset* SubmixEffectPreset);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/AudioMixer.AudioMixerBlueprintLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
