#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "BasicTypes_TArray.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UChildActorComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::CoreUObject { class UClass; };
namespace CG::Batting_Target_01 { class ABatting_Target_01_C; };
namespace CG::SportsScramble { class AScramBall; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_BattingTarget
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Targets/Baseball/BB_BattingTarget.BB_BattingTarget_C
     * Size -> 0x00EB (FullSize[0x0413] - InheritedSize[0x0328])
     */
    class ABB_BattingTarget_C : public Engine::AActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UChildActorComponent*                                ChildActor_TrainingTarget_03;                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_TrainingTarget_02;                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_TrainingTarget_01;                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_Target_6;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_Target_5;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_Target_4;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_Target_3;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UChildActorComponent*                                ChildActor_Target_2;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     DefaultSceneRoot;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         ScoreBatter;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::TArray<Engine::AActor*>                          AllTargets;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        int32_t                                                      TargetScoreAmount;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Batting_Target_01::ABatting_Target_01_C*> DisabledTargets;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        Batting_Target_01::ABatting_Target_01_C*                     Target_01;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     Target_02;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     Target_03;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     Target_04;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     Target_05;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         AllowRespawn;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         AvoidDoubleHit;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Target_01_Unbroken;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Target_02_Unbroken;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Target_03_Unbroken;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Target_04_Unbroken;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Target_05_Unbroken;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TrainingTarget;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        int32_t                                                      TargetId;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::AScramBall*                                  OverlapBall;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        TargetRespawnDelay;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Batting_Target_01::ABatting_Target_01_C*                     TrainingTarget01;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     TrainingTarget02;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Batting_Target_01::ABatting_Target_01_C*                     TrainingTarget03;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TrainingTarget_01_Unbroken;                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TrainingTarget_02_Unbroken;                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TrainingTarget_03_Unbroken;                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void HideTargetScores();
        void HideAllTargets();
        void SetAllTargetsUnbroken();
        void PickNewRandomTarget();
        void Initialize();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void Target_01_Overlap(SportsScramble::AScramBall* Ball);
        void Target_02_Overlap(SportsScramble::AScramBall* Ball);
        void Target_03_Overlap(SportsScramble::AScramBall* Ball);
        void Target_04_Overlap(SportsScramble::AScramBall* Ball);
        void Target_05_Overlap(SportsScramble::AScramBall* Ball);
        void PickRandomTarget();
        void Training_SpawnTarget(Batting_Target_01::ABatting_Target_01_C* BattingTarget);
        void Training_DespawnTargets(BasicTypes::TArray<Batting_Target_01::ABatting_Target_01_C*> TargetsToDespawn);
        void Training_InitialTargetSetup();
        void Training_ToggleImpactSound(bool UseImpactSound);
        void Training_UnlimitiedBattingSetup();
        void RemoveBattingTargets();
        void BindToTargets();
        void BindToTrainingTargets();
        void TrainingTarget_01_Overlap(SportsScramble::AScramBall* Ball);
        void TrainingTarget_02_Overlap(SportsScramble::AScramBall* Ball);
        void TrainingTarget_03_Overlap(SportsScramble::AScramBall* Ball);
        void ExecuteUbergraph_BB_BattingTarget(int32_t EntryPoint);
        void ScoreBatter__DelegateSignature(SportsScramble::AScramBall* Ball, int32_t TargetId);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Targets/Baseball/BB_BattingTarget.BB_BattingTarget_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
