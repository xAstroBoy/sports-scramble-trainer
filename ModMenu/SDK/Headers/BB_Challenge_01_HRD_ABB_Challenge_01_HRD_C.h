#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BB_Challenge_Base_ABB_Challenge_Base_C.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::HRD_Challenge_Manager { class AHRD_Challenge_Manager_C; };
namespace CG::SportsScramble { class UScramSaveData; };
namespace CG::SportsScramble { class AScramInstrument; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Challenge_01_HRD
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_01_HRD.BB_Challenge_01_HRD_C
     * Size -> 0x0050 (FullSize[0x05E0] - InheritedSize[0x0590])
     */
    class ABB_Challenge_01_HRD_C : public BB_Challenge_Base::ABB_Challenge_Base_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Crowd;                                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        HRD_Challenge_Manager::AHRD_Challenge_Manager_C*             HRDManager;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BasicTypes::FName>                        PrimaryAudioList;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        bool                                                         DEBUG_MAIN_AUDIO;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         UseAlternateAnnouncerVO;                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        AlternateAudioList;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        SportsScramble::UScramSaveData*                              SaveData;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      HomeRunCount;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      HomeRunThreshold;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void InitializeChallenge();
        void SetupInfoText();
        void CheckProperAudioList(bool* UseAlternate);
        void RequestNewBat(SportsScramble::AScramInstrument** NewInstrumentClass, bool* Success);
        void RequestNewBall(SportsScramble::AScramBall** NewBallClass, bool* Success);
        void Cleanup();
        void UserConstructionScript();
        void AnnouncerPlayingSequence(const BasicTypes::FName& SequenceName);
        void AnnouncerPresenting();
        void AnnouncerPaused();
        void ReceiveBeginPlay();
        void BB_TriggerCountdown();
        void Start_Game();
        void End_Game();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void AnnouncerExitSequenceComplete();
        void PlayerScoredRun();
        void PlayerHitHomerun();
        void Shortcut();
        void ExecuteUbergraph_BB_Challenge_01_HRD(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_01_HRD.BB_Challenge_01_HRD_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
