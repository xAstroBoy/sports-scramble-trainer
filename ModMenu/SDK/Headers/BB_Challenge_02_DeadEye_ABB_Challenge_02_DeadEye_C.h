#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BB_Challenge_Base_ABB_Challenge_Base_C.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::BB_ThrowingGlove { class ABB_ThrowingGlove_C; };
namespace CG::BB_Mitt { class ABB_Mitt_C; };
namespace CG::BB_ChallengeTarget_Spawner { class ABB_ChallengeTarget_Spawner_C; };
namespace CG::BB_BallLauncher { class ABB_BallLauncher_C; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::BB_DeadEyeChallenge_Bonus { class ABB_DeadEyeChallenge_Bonus_C; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::SportsScramble { class AScramPrimitiveActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Challenge_02_DeadEye
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_02_DeadEye.BB_Challenge_02_DeadEye_C
     * Size -> 0x0088 (FullSize[0x0618] - InheritedSize[0x0590])
     */
    class ABB_Challenge_02_DeadEye_C : public BB_Challenge_Base::ABB_Challenge_Base_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     LaunchTarget;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Launcher;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BasicTypes::FName>                        PrimaryAudioList;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BB_ThrowingGlove::ABB_ThrowingGlove_C*                       ThowingGlove;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Mitt::ABB_Mitt_C*                                         CatchersMitt;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_ChallengeTarget_Spawner::ABB_ChallengeTarget_Spawner_C*   TargetSpawner;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_BallLauncher::ABB_BallLauncher_C*                         BallLauncher;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         IsGameRunning;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        LaunchDelay;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<SportsScramble::AScramBall*>              BallQeue;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        int32_t                                                      RegularTargetScore;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      GoldTargetBonus;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      BonusClearScore;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PatternIndex;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         SetIsChanging;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BB_DeadEyeChallenge_Bonus::ABB_DeadEyeChallenge_Bonus_C*     BonusBlueprint;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void InitializeChallenge();
        void Cleanup();
        void UpdateScoreAndBoard(int32_t AddScore);
        void LaunchABall();
        void SpawnAndSetManager();
        void SetUpInfoText();
        void UserConstructionScript();
        void InitiateBonusScore();
        void SpawnPitchingEquipment();
        void FindGloves(Engine::AActor* DominantHand, BB_Mitt::ABB_Mitt_C* Mitt);
        void TargetScored(bool bonus);
        void GroupCleared(bool BonusGroup);
        void BallLaunched(Engine::AActor* Ball);
        void OnLaunchedBallHit(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void BallPitched(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void OnLaunchedBallCaught(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void BallDestroyed(SportsScramble::AScramPrimitiveActor* DestroyedPrimitive);
        void OnGlobalBallHit(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void BonusScoreReceived();
        void SpawnSecondSetOfGold();
        void ReceiveBeginPlay();
        void StartGame();
        void TimeLoop();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void BB_TriggerCountdown();
        void EndGame();
        void AnnouncerExitSequenceComplete();
        void Shortcut();
        void ExecuteUbergraph_BB_Challenge_02_DeadEye(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_02_DeadEye.BB_Challenge_02_DeadEye_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
