#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BB_Challenge_Base_ABB_Challenge_Base_C.h"
#include "SportsScramble_FMinMaxFloat.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::BB_Minigame_PracticeSportManager { class ABB_Minigame_PracticeSportManager_C; };
namespace CG::BB_Strikezone { class ABB_Strikezone_C; };
namespace CG::Engine { class UPhysicalMaterial; };
namespace CG::BB_Challenge_06_3rdBase_Helper { class ABB_Challenge_06_3rdBase_Helper_C; };
namespace CG::BB_BallLauncher { class ABB_BallLauncher_C; };
namespace CG::BB_Ball_Base { class ABB_Ball_Base_C; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Challenge_06_3rdBase
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_06_3rdBase.BB_Challenge_06_3rdBase_C
     * Size -> 0x0064 (FullSize[0x05F4] - InheritedSize[0x0590])
     */
    class ABB_Challenge_06_3rdBase_C : public BB_Challenge_Base::ABB_Challenge_Base_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Crowd;                                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BB_Minigame_PracticeSportManager::ABB_Minigame_PracticeSportManager_C* BaseballManager;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Strikezone::ABB_Strikezone_C*                             strikeZone;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      MaxFieldedBalls;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UPhysicalMaterial*                                   OldFloorMaterial;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Challenge_06_3rdBase_Helper::ABB_Challenge_06_3rdBase_Helper_C* Helper;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_BallLauncher::ABB_BallLauncher_C*                         Launcher;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        TimeBetweenBalls;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         Firing;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BasicTypes::FName>                        PairedSequences;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        float                                                        BombChance;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        GoldenBallChance;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      BallsCaught;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void SetZoneTimeScales(const SportsScramble::FMinMaxFloat& PopFlyTimeScale, const SportsScramble::FMinMaxFloat& SweetSpotTimeScale, const SportsScramble::FMinMaxFloat& LineDriveTimeScale, const SportsScramble::FMinMaxFloat& GroundBallTimeScale);
        void GetNextBallClass(BB_Ball_Base::ABB_Ball_Base_C** NextBallClass);
        void SetupInfoText();
        void SetZoneChances(float PopFlyChance, float SweetSpotChance, float LineDriveChance, float GroundBallChance);
        void SetParameters(float TimeBetweenBalls, float BombChance, float GoldenBallChance);
        void Initialized3rdBase();
        void Cleanup();
        void UserConstructionScript();
        void AnnouncerPaused();
        void AnnouncerPresenting();
        void AnnouncerPlayingSequence(const BasicTypes::FName& SequenceName);
        void ReceiveBeginPlay();
        void NotifyChallengeContinue(Engine::AActor* DestroyedActor);
        void BallHit(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void BaseballEvent(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void FireLoop();
        void Start_Challenge();
        void AnnouncerExitSequenceComplete();
        void BB_TriggerCountdown();
        void GameEnd();
        void Shortcut();
        void ExecuteUbergraph_BB_Challenge_06_3rdBase(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Challenges/Baseball/BB_Challenge_06_3rdBase.BB_Challenge_06_3rdBase_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
