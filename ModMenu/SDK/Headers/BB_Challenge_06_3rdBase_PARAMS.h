#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FMinMaxFloat.h"
#include "BasicTypes_FName.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::BB_Ball_Base { class ABB_Ball_Base_C; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Challenge_06_3rdBase
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_SetZoneTimeScales_Params
    {
    public:
        SportsScramble::FMinMaxFloat                                 PopFlyTimeScale;                                         //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
        SportsScramble::FMinMaxFloat                                 SweetSpotTimeScale;                                      //  0x0008(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
        SportsScramble::FMinMaxFloat                                 LineDriveTimeScale;                                      //  0x0010(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
        SportsScramble::FMinMaxFloat                                 GroundBallTimeScale;                                     //  0x0018(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_GetNextBallClass_Params
    {
    public:
        BB_Ball_Base::ABB_Ball_Base_C*                               NextBallClass;                                           //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_SetupInfoText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_SetZoneChances_Params
    {
    public:
        float                                                        PopFlyChance;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        SweetSpotChance;                                         //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        LineDriveChance;                                         //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        GroundBallChance;                                        //  0x000C(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_SetParameters_Params
    {
    public:
        float                                                        TimeBetweenBalls;                                        //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        BombChance;                                              //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        GoldenBallChance;                                        //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_Initialized3rdBase_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_Cleanup_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_AnnouncerPaused_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_AnnouncerPresenting_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_AnnouncerPlayingSequence_Params
    {
    public:
        BasicTypes::FName                                            SequenceName;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_NotifyChallengeContinue_Params
    {
    public:
        Engine::AActor*                                              DestroyedActor;                                          //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_BallHit_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_ReceiveEndPlay_Params
    {
    public:
        Engine::EEndPlayReason                                       EndPlayReason;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_BaseballEvent_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_FireLoop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_Start_Challenge_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_AnnouncerExitSequenceComplete_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_BB_TriggerCountdown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_GameEnd_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_Shortcut_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Challenge_06_3rdBase_C_ExecuteUbergraph_BB_Challenge_06_3rdBase_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
