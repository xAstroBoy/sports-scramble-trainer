#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::BB_Mitt { class ABB_Mitt_C; };
namespace CG::BB_Strikezone { class ABB_Strikezone_C; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::BB_Equipment_Set { class ABB_Equipment_Set_C; };
namespace CG::BB_GameSelector { class ABB_GameSelector_C; };
namespace CG::BB_Minigame_PracticeSportManager { class ABB_Minigame_PracticeSportManager_C; };
namespace CG::BB_BallLauncher { class ABB_BallLauncher_C; };
namespace CG::SportsScramble { class AScramPlayerHand; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Minigame_Pitching_Fielding
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Minigames/Baseball/BB_Minigame_Pitching_Fielding.BB_Minigame_Pitching_Fielding_C
     * Size -> 0x0078 (FullSize[0x03A0] - InheritedSize[0x0328])
     */
    class ABB_Minigame_Pitching_Fielding_C : public Engine::AActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     DefaultSceneRoot;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<Engine::AActor*>                          GameElements;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BB_Strikezone::ABB_Strikezone_C*                             strikeZone;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Equipment_Set::ABB_Equipment_Set_C*                       EquipmentSet;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_GameSelector::ABB_GameSelector_C*                         GameSelector;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Minigame_PracticeSportManager::ABB_Minigame_PracticeSportManager_C* SportManager;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_BallLauncher::ABB_BallLauncher_C*                         BallLauncher_01;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         LauncherCanLaunch;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::AScramPlayerHand*                            PreferredHand;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_BallLauncher::ABB_BallLauncher_C*                         BallLauncher_02;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        LauncherHorizontalVariance;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        LauncherVerticalVariance;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              CurrentBallInPlay;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void Shutdown(bool* ShutdownBegun);
        void AddActorToGameElementList(Engine::AActor* Actor, bool* Callback);
        void SpawnActors();
        void InitializeMode();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void DelayDestroy();
        void TeleportComplete();
        void NoTeleport();
        void LaunchBallAtPlayer();
        void EquipmentGrabbed(Engine::AActor* DominantHand, BB_Mitt::ABB_Mitt_C* Mitt);
        void BallLaunched(Engine::AActor* Ball);
        void BallCaught(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void OpenGate();
        void BallDestroyed(Engine::AActor* DestroyedActor);
        void ExecuteUbergraph_BB_Minigame_Pitching_Fielding(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Minigames/Baseball/BB_Minigame_Pitching_Fielding.BB_Minigame_Pitching_Fielding_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
