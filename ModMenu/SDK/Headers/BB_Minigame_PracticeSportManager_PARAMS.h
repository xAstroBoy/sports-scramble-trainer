#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_ENUMS.h"
#include "CoreUObject_FVector.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::SportsScramble { class ABaseballInstrument; };
namespace CG::Engine { class AActor; };
namespace CG::BB_Mitt { class ABB_Mitt_C; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::SportsScramble { class ABaseballBall; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Minigame_PracticeSportManager
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnCatcherWithVFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnFielders_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnInstrumentSelector_Params
    {
    public:
        bool                                                         InstrumentDamageEnabled;                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_InstrumentSelected_Params
    {
    public:
        SportsScramble::ABaseballInstrument*                         SelectedInstrument;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_InstrumentBroken_Params
    {
    public:
        SportsScramble::ABaseballInstrument*                         Instrument;                                              //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnPitcher_Params
    {
    public:
        Engine::AActor*                                              PitcherActor;                                            //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_EndGameCleanUp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnLocalHelper_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_CleanUpGameElements_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_TeleportPlayer_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnEquipmentAndAI_Params
    {
    public:
        bool                                                         PlayerBatting;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0xF];                                   //  0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_Minigame_SpawnStrikezone_Params
    {
    public:
        bool                                                         ShrinkOnSpawn;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         CatcherPresent;                                          //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0003[0xE];                                   //  0x0002(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SpawnBatter_Params
    {
    public:
        Engine::AActor*                                              BattingActor;                                            //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_BaseballEvent_Params
    {
    public:
        SportsScramble::EBaseballEvent                               BaseballEvent;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0005[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x0004(0x000C)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_NoTeleport_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HandleBackOrResetButton_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_GameSelectorReset_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_ReceiveEndPlay_Params
    {
    public:
        Engine::EEndPlayReason                                       EndPlayReason;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_FinishedTeleport_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SetDominantHand_Params
    {
    public:
        Engine::AActor*                                              DominantHand;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        BB_Mitt::ABB_Mitt_C*                                         Mitt;                                                    //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_OnInstrumentSelected_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_OnInstrumentBroken_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_RemoveCatcher_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_ExecuteUbergraph_BB_Minigame_PracticeSportManager_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0006[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_RunnersReady__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_RunnerHome__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_InvalidHit__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_ValidHit__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitHomerun__DelegateSignature_Params
    {
    public:
        bool                                                         BasesLoaded;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitTriple__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitDouble__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitSingle__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitFoul__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_HitCaught__DelegateSignature_Params
    {
    public:
        CoreUObject::FVector                                         BallLocation;                                            //  0x0000(0x000C)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_CatcherThrow__DelegateSignature_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_PitchedStrike__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_PitchedBall__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_SwingAndMiss__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_PitchHit__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_PitcherPitched__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABB_Minigame_PracticeSportManager_C_PitcherReady__DelegateSignature_Params
    {
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
