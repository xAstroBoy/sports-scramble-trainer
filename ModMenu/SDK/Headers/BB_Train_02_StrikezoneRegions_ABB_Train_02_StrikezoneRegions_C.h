#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "SportsScramble_FBaseballPitcherPreferences.h"
#include "SportsScramble_ENUMS.h"
#include "Engine_FTimerHandle.h"
#include "BB_Train_Base_ABB_Train_Base_C.h"
#include "Engine_ENUMS.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USoundBase; };
namespace CG::Engine { class AActor; };
namespace CG::BB_Mitt { class ABB_Mitt_C; };
namespace CG::BB_Ball_Base { class ABB_Ball_Base_C; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UObject; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BB_Train_02_StrikezoneRegions
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Training/Baseball/BB_Train_02_StrikezoneRegions.BB_Train_02_StrikezoneRegions_C
     * Size -> 0x00CA (FullSize[0x06FA] - InheritedSize[0x0630])
     */
    class ABB_Train_02_StrikezoneRegions_C : public BB_Train_Base::ABB_Train_Base_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Audio_Dialog_05;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog06;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_NiceYouGotIt;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog11;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog10;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_HeresABall;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog09;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog08;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Dialog07;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_ComponentTryAgain;                                 //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_OkYouGotIt;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Good;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Nice;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          Audio_Dialog02;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          Audio_Dialog03;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          Audio_Dialog04;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          Audio_Dialog05;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::FBaseballPitcherPreferences                  OriginalPitchingPreferences;                             //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor
        bool                                                         Tutorial_FirstTargetHit;                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Retrying;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        PauseBetweenVO;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        UmpireCallDelay;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ListenForAnalogStick;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        LeftStickLRValue;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        RightStickLRValue;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::EScramHandedness                             BB_Handedness;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TrainingStarted;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FTimerHandle                                         RememberGrabBallVOTimer;                                 //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        float                                                        LeftStickUDValue;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        RightStickUDValue;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::FTimerHandle                                         MovedMittVOTimer;                                        //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        bool                                                         PlayerHasBall;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         RestoreScrambleBallSetting;                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void StopPlayingAudioComponents();
        void SetupInfoText();
        void BB_TRN_Regions_Initialize();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void ReadyForTraining();
        void Tutorial_Step_01();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void BB_EquipmentGrabbed(Engine::AActor* DominantHand, BB_Mitt::ABB_Mitt_C* Mitt);
        void Tutorial_Step_02();
        void PlayerNeedsToTryAgain();
        void CalculateScore();
        void HitFloorCollision(BB_Ball_Base::ABB_Ball_Base_C* Ball, const CoreUObject::FVector& HitLocation);
        void CountDownCompleted();
        void TrainingStart();
        void NotifyTrainingContinue(Engine::AActor* DestroyedActor);
        void AnnouncerExitSequenceComplete();
        void InpAxisEvt_StickDrivenGloveLeftRight_L_K2Node_InputAxisEvent_1(float AxisValue);
        void InpAxisEvt_StickDrivenGloveLeftRight_R_K2Node_InputAxisEvent_2(float AxisValue);
        void Tutorial_Step_03();
        void PitcherCaughtSomething(SportsScramble::UScramEventBasePayload* Payload);
        void TrainingTargetHit(SportsScramble::EBaseballScrambleTargetLocations Location);
        void BaseballEvent(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void HandleInvalidPitch();
        void StartTimerMoveMitt(float Time);
        void SliceInstructions();
        void ListenForBallGrab();
        void PlayerGrabbedBall(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void StopListeningForBallGrab();
        void StartTimerBallGrabbed(float Time);
        void ReminderVO();
        void ListenForBBEvent();
        void InpAxisEvt_StickDrivenGloveUpDown_L_K2Node_InputAxisEvent_3(float AxisValue);
        void InpAxisEvt_StickDrivenGloveUpDown_R_K2Node_InputAxisEvent_4(float AxisValue);
        void ExecuteUbergraph_BB_Train_02_StrikezoneRegions(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Training/Baseball/BB_Train_02_StrikezoneRegions.BB_Train_02_StrikezoneRegions_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
