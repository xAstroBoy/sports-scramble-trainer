#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_IInterface.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::BP_TraceInteractor { class UBP_TraceInteractor_C; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BPI_TraceInteractionInterface
{
    /**
     * BlueprintGeneratedClass /Game/VR_Keyboard/Blueprints/Interfaces/BPI_TraceInteractionInterface.BPI_TraceInteractionInterface_C
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class IBPI_TraceInteractionInterface_C : public CoreUObject::IInterface
    {
    public:
        void ShouldInteractWithWidgets(bool* Return);
        void TraceUp(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceDown(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceMove(Engine::FHitResult* Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceOut(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* LeavingComponent, bool* Return);
        void TraceOver(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* HitComponent, bool* Return);
        void TraceLeave(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceEnter(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/VR_Keyboard/Blueprints/Interfaces/BPI_TraceInteractionInterface.BPI_TraceInteractionInterface_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
