#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FText.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_AScramKeyboard.h"
#include "Engine_FHitResult.h"
#include "InputCore_FKey.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UWidgetInteractionComponent; };
namespace CG::UMG { class UWidgetComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::BP_TraceInteractor { class UBP_TraceInteractor_C; };
namespace CG::Engine { class UHapticFeedbackEffect_Base; };
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BP_KeyboardActor
{
    /**
     * BlueprintGeneratedClass /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C
     * Size -> 0x0090 (FullSize[0x03E8] - InheritedSize[0x0358])
     */
    class ABP_KeyboardActor_C : public SportsScramble::AScramKeyboard
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        UMG::UWidgetInteractionComponent*                            WidgetInteraction;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        UMG::UWidgetComponent*                                       Widget;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     DefaultSceneRoot;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BasicTypes::FString                                          OutputString;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
        BasicTypes::FText                                            InitialString;                                           //  Edit, BlueprintVisible, ExposeOnSpawn
        int32_t                                                      MaxCharacters;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BP_TraceInteractor::UBP_TraceInteractor_C*                   CurrHandInteractor;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::UHapticFeedbackEffect_Base*                          TapHaptic;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        HapticScale;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UStaticMesh*                                         InteractMesh;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         InitialScale;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ButtonPressed;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         StringChanged;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable

    public:
        void TraceEnter(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceLeave(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceOver(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* HitComponent, bool* Return);
        void TraceOut(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, Engine::UPrimitiveComponent* LeavingComponent, bool* Return);
        void TraceMove(Engine::FHitResult* Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceDown(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void TraceUp(const Engine::FHitResult& Hit, BP_TraceInteractor::UBP_TraceInteractor_C* interactor, bool* Return);
        void ShouldInteractWithWidgets(bool* Return);
        void Initialize();
        void ValidWidgetInteractor(UMG::UWidgetInteractionComponent* interactor, bool* IsValid);
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void KeyPressed_Event_1(const BasicTypes::FText& Text, const InputCore::FKey& Key, const InputCore::FKey& Modifier);
        void ExecuteUbergraph_BP_KeyboardActor(int32_t EntryPoint);
        void StringChanged__DelegateSignature(const BasicTypes::FString& NewString);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/VR_Keyboard/Blueprints/BP_KeyboardActor.BP_KeyboardActor_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
