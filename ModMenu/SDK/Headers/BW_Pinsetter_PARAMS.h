#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_ENUMS.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BW_Pinsetter
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_SetPinPhysicsEnabled_Params
    {
    public:
        bool                                                         Enabled;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_GetRollScore_Params
    {
    public:
        int32_t                                                      PinsKnockedDown;                                         //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_Cleanup_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_SpawnAllPins_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_Timeline_PinReset__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_Timeline_PinReset__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_ReceiveEndPlay_Params
    {
    public:
        Engine::EEndPlayReason                                       EndPlayReason;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_ResetPins_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_RaisePinsetter_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_LaneChangeComplete_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_ClearPins_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_ExecuteUbergraph_BW_Pinsetter_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_PindeckHidden__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABW_Pinsetter_C_PinResetComplete__DelegateSignature_Params
    {
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
