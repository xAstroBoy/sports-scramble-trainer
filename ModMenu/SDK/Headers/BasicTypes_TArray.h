#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BasicTypes
{
    /**
     * 
     * Size -> 0x0000
     */
    template<typename T>
    class TArray
    {
    private:
        T*                                                           _data;
        int32_t                                                      _count;
        int32_t                                                      _max;

        friend class FString;

    public:
        TArray()
        {
            _data = nullptr;
            _count = 0;
            _max = 0;
        }
        T* Data() const
        {
            return _data;
        }
        const int32_t& Count() const
        {
            return _count;
        }
        const int32_t& Max() const
        {
            return _max;
        }
        const bool& IsValidIndex(int32_t index) const
        {
            return index >= 0 && index < _count;
        }
        T& operator[](const int32_t& index)
        {
            return _data[index];
        }
        const T& operator[](const int32_t& index) const
        {
            return _data[index];
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
