#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "DebugButtonInfo_FDebugButtonInfo.h"
#include "BW_Quality_ENUMS.h"
#include "BW_BallData_FBW_BallData.h"
#include "BW_LaneData_FBW_LaneData.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "BasicTypes_FName.h"
#include "UMG_FWidgetTransform.h"
#include "SportsScramble_ABowlingAlley.h"
#include "SportsScramble_ENUMS.h"
#include "SpecialBallType_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UParticleSystemComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::UMG { class UWidgetComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::BowlingLaneManager { class ABowlingLaneManager_C; };
namespace CG::BW_Pinsetter { class ABW_Pinsetter_C; };
namespace CG::BW_Ball_Base { class ABW_Ball_Base_C; };
namespace CG::BowlingLane_Base { class ABowlingLane_Base_C; };
namespace CG::BW_BallReturn { class ABW_BallReturn_C; };
namespace CG::BW_CenterScoreboard { class ABW_CenterScoreboard_C; };
namespace CG::BW_Score { class UBW_Score_C; };
namespace CG::DebugButtonGroup { class ADebugButtonGroup_C; };
namespace CG::BallSelection { class ABallSelection_C; };
namespace CG::Engine { class AActor; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::ManagerBowling_LocalHelper { class AManagerBowling_LocalHelper_C; };
namespace CG::Engine { class USoundBase; };
namespace CG::BW_ResultsTracks { class ABW_ResultsTracks_C; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::SportsScramble { class ABowlingBall; };
namespace CG::SportsScramble { class ABowlingBallReturn; };
namespace CG::SportsScramble { class ABowlingLane; };
namespace CG::SportsScramble { class AScramPrimitiveActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BowlingAlley_BP
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/BowlingAlley_BP.BowlingAlley_BP_C
     * Size -> 0x0368 (FullSize[0x0718] - InheritedSize[0x03B0])
     */
    class ABowlingAlley_BP_C : public SportsScramble::ABowlingAlley
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UParticleSystemComponent*                            ParticleSystemRed;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UParticleSystemComponent*                            ParticleSystemBlue;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     PlayerStartLocation;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh3;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Loc_BallReturn;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Loc_BallTriggerTest;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Loc_PinSetter;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh2;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh1;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Loc_LaneManager;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        UMG::UWidgetComponent*                                       ScoreWidgetComponent;                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_SmallTrainScore_Alpha_1243F4C14948D929E21E0DBD902C37C3; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_SmallTrainScore__Direction_1243F4C14948D929E21E0DBD902C37C3; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_SmallTrainScore;                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_LargeTrainScore_Alpha_C57BDAE342C06583EF6E9386EE9BA000; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_LargeTrainScore__Direction_C57BDAE342C06583EF6E9386EE9BA000; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_LargeTrainScore;                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_ShowSpare_Alpha_68F939F744DA0D5D7A63B4921125DB38; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_ShowSpare__Direction_68F939F744DA0D5D7A63B4921125DB38; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_ShowSpare;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_ShowStrike_Alpha_7D40996E4CF57637B6E07598001C63FA; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_ShowStrike__Direction_7D40996E4CF57637B6E07598001C63FA; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_ShowStrike;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      ID;                                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingLaneManager::ABowlingLaneManager_C*                   LaneManager;                                             //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_Pinsetter::ABW_Pinsetter_C*                               pinsetter;                                               //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      score;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      FramePinCount;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      FrameRollCount;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BW_Ball_Base::ABW_Ball_Base_C*                               BallClass;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingLane_Base::ABowlingLane_Base_C*                       LaneClass;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_BallReturn::ABW_BallReturn_C*                             BallReturn;                                              //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_CenterScoreboard::ABW_CenterScoreboard_C*                 CenterScoreboard;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_Score::UBW_Score_C*                                       ScoreWidget;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         DisplayingStrike;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         DisplayingSpare;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0006[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        DebugButtonGroup::ADebugButtonGroup_C*                       DebugMenu;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<DebugButtonInfo::FDebugButtonInfo>        Buttons;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
        BasicTypes::TArray<BW_Quality::EBW_Quality>                  CuedLaneChanges;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BallSelection::ABallSelection_C*                             DebugBallSelect;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         LaneEnabled;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<DebugButtonInfo::FDebugButtonInfo>        SpawningButtons;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
        BasicTypes::TArray<Engine::AActor*>                          SubActors;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BasicTypes::TArray<BW_BallData::FBW_BallData>                QueuedBalls;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        bool                                                         ScrambleBallQueueActive;                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0008[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::AActor*>                          ActiveScrambleBalls;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BasicTypes::TArray<Engine::AActor*>                          ActiveDefaultBalls;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BasicTypes::TArray<SportsScramble::AScramBall*>              TallyBalls;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        int32_t                                                      InitialMatchBallCount;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      InitialMatchBallSpawnCount;                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      FillCount;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0009[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ManagerBowling_LocalHelper::AManagerBowling_LocalHelper_C*   LocalHelper;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      MaxBallCount;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayResetPins;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforePinsCalculated;                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforeStandardBallRespawn;                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforeBallRespawn;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBetweenMultipleBallSpawns;                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelaySpawnerBlink;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0010[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<BW_BallData::FBW_BallData>                ScrambleBallList;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BasicTypes::TArray<BW_BallData::FBW_BallData>                DisabledScrambleBallList;                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        Engine::USoundBase*                                          LaneChangeVO;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          NormalLaneVO;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingLane_Base::ABowlingLane_Base_C*                       DefaultLaneClass;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_ResultsTracks::ABW_ResultsTracks_C*                       TrackActor;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::UMaterialInterface*                                  MaterialFlash;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayMaterialFlash;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0011[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BowlingLane_Base::ABowlingLane_Base_C*                       PreviousLane;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BW_LaneData::FBW_LaneData>                LaneCycleList;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        int32_t                                                      CycleIndex;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PinsKnockedDown;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      StrikeCount;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0012[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          BonusScoreSound;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforeSpecialBallSpawn;                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforeFrameCountReset;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<SportsScramble::ABowlingBall*>            InstigatorBalls;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        bool                                                         DisableLaneChanges;                                      //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         AllowSpecialBalls;                                       //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         WaitForTally;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         GameEnding;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0013[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         BowlingEvent;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         TrainingMode;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         DisableScoring;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0014[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         CurrentLaneScore;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         DisableBallSpawn;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0015[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          CrowdApplause;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          CrowdDisappoint;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         UseTrainingScore;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0016[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      TrainingTargetScore;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         SpecialScoring;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         CheckScoreCondition;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0017[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         LaneReady;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         UpdateCarPosition;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0018[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         ProcessPinsDown;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         Traditional;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TraditionalTurn;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0019[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            OverrideLaneName;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         LaneCycleInProgress;                                     //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0020[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        UMG::FWidgetTransform                                        LargeScoreTextInitialTransform;                          //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor
        UMG::FWidgetTransform                                        SmallScoreTextInitialTransform;                          //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor
        float                                                        LargeScoreTextOffset;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        SmallScoreTextOffset;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      LastAudienceScore;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        SportsScramble::ABowlingBallReturn* GetBallReturn();
        void GetOverrideLaneName(const BasicTypes::FName& LaneName, BasicTypes::FName* Name);
        void SetQueuedBalls(BasicTypes::TArray<BW_Ball_Base::ABW_Ball_Base_C*>* QueuedBalls);
        void QueueRandomBalls(int32_t Num, BasicTypes::TArray<BW_Ball_Base::ABW_Ball_Base_C*>* Balls);
        void GetLaneManagerFromAlley(BowlingLaneManager::ABowlingLaneManager_C** BowlingLaneManager);
        void GetCenterScoreboardFromAlley(BW_CenterScoreboard::ABW_CenterScoreboard_C** CenterScoreboard);
        void DebugDecrementLane();
        int32_t GetScore();
        void SendBowlingEvent(SportsScramble::EBowlingEvent BowlingEvent, SportsScramble::ABowlingBall* Ball);
        void SetLaneList(BasicTypes::TArray<BasicTypes::FName>* LaneList, bool ResetToAll);
        void UpdateFrameBallCounter();
        void SpawnSpecialBall(SpecialBallType::ESpecialBallType NewParam);
        void IsLocallyControlled(bool* LocallyControlled);
        void ProcessAudienceSound();
        void CycleThroughLanes();
        bool IsLaneReady();
        void ResetScore();
        void DebugIncrementLane();
        void NewLaneCheck(bool* LaneChangeIncoming);
        void GetRandomBall(BW_Ball_Base::ABW_Ball_Base_C** BallClass, Engine::USoundBase** AnnoucnerVO);
        void ProcessScore(int32_t PinsDown, SportsScramble::ABowlingBall* BowlingBall);
        void UpdateScoreBoard(int32_t AddedPoints);
        SportsScramble::ABowlingLane* GetActiveLane();
        void GetRandomLane(BW_Quality::EBW_Quality LaneQuality, BowlingLane_Base::ABowlingLane_Base_C** LaneClass, Engine::USoundBase** AnnouncerVO);
        void Cleanup();
        void Initialize();
        void UserConstructionScript();
        void Timeline_ShowStrike__FinishedFunc();
        void Timeline_ShowStrike__UpdateFunc();
        void Timeline_ShowSpare__FinishedFunc();
        void Timeline_ShowSpare__UpdateFunc();
        void Timeline_LargeTrainScore__FinishedFunc();
        void Timeline_LargeTrainScore__UpdateFunc();
        void Timeline_SmallTrainScore__FinishedFunc();
        void Timeline_SmallTrainScore__UpdateFunc();
        void BindDebugBall();
        void CreateDebugButtons();
        void DebugButtonsSelected(int32_t ButtonSelected);
        void DebugBallChanged(SportsScramble::AScramBall* NewBallClass);
        void NetCreateDebugButtons();
        void NetDisplayStrike();
        void NetDisplaySpare();
        void RedrawScoreBoard(int32_t NewScore);
        void NetRedrawTrainingScoreboard(int32_t NewScore);
        void NetTrainingScoreFontSize(int32_t NewFontSize);
        void ClearTrainingScoreboard();
        void ServerRedrawTrainingScoreboard(int32_t NewScore);
        void ServerUpdateScoreBoard(int32_t AddedPoints);
        void NetUpdateScoreBoard(int32_t AddedPoints);
        void ServerDisplayStrike();
        void ServerDisplaySpare();
        void PrepRevealTrainingScoreboard();
        void RevealTrainingScoreboard();
        void ReceiveBeginPlay();
        void BallRollComplete(SportsScramble::ABowlingBall* Ball, bool Scoring, bool Out, bool restricted);
        void OnBallOut(SportsScramble::ABowlingBall* Ball, bool pit, bool restricted);
        void LaneSwap(BowlingLane_Base::ABowlingLane_Base_C* NewLaneClass, Engine::USoundBase* AnnouncerVO);
        void WaitForPinResetComplete();
        void LaneSwapComplete();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void PindeckHidden();
        void StandardBallCreated(BW_Ball_Base::ABW_Ball_Base_C* NewBall);
        void EnableAlley(bool EnableDebug, bool DisableLaneChanges, bool Traditional);
        void DisableAlley(bool ResetLane);
        void AdditionalAddedScore(Engine::AActor* Instigator, int32_t AddedScore);
        void FinishLaneReset();
        void SpawnSpecificBalls();
        void ScrambleBallCreated(BW_Ball_Base::ABW_Ball_Base_C* NewBall);
        void SpawnStandardBalls();
        void BallFinishedLane(SportsScramble::AScramBall* Ball);
        void ClearBall(SportsScramble::ABowlingBall* Ball);
        void NetPlayerAnnouncerVO(float Delay, Engine::USoundBase* AnnouncerVO);
        void ResetAnnouncerVO();
        void StandardBallDestroyed(SportsScramble::AScramPrimitiveActor* DestroyedPrimitive);
        void ScrambleBallDestroyed(SportsScramble::AScramPrimitiveActor* DestroyedPrimitive);
        void InstigatorBallDestroyed(SportsScramble::AScramPrimitiveActor* DestroyedPrimitive);
        void AddInstigatorBall(SportsScramble::ABowlingBall* InstigatorBall);
        void NotifyGameEnding();
        void SpawnRandomBall();
        void BeginTraditionalFrame(bool Solo);
        void EndTraditionalFrame(bool Solo, bool LastFrame);
        void ResetLane();
        void ServerPlayer1BallThrown();
        void ServerPlayer2BallThrown();
        void ServerCycleThroughLanes();
        void ServerResetPins();
        void ServerPlayerBallCountReset();
        void ServerSpawnSpecialBall(SpecialBallType::ESpecialBallType NewParam);
        void ServerProcessPinsDown(int32_t Pins);
        void SlideBallReturn(bool slideForward);
        void Multi_ResetFrameCounts();
        void Server_SpawnSpecificBall(BW_Ball_Base::ABW_Ball_Base_C* BallClass);
        void PlayerAnnouncerVO(float Delay, Engine::USoundBase* AnnouncerVO);
        void AddInstigatorBallCode(SportsScramble::ABowlingBall* Ball);
        void NetSetLaneList(BasicTypes::TArray<BasicTypes::FName>* LaneList, bool ResetToAll);
        void MoveBallReturn(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void ExecuteUbergraph_BowlingAlley_BP(int32_t EntryPoint);
        void ProcessPinsDown__DelegateSignature(int32_t ID, int32_t Pins);
        void LaneReady__DelegateSignature();
        void SpecialScoring__DelegateSignature(int32_t LaneID, int32_t SpecialPoints);
        void CurrentLaneScore__DelegateSignature(int32_t LaneID, int32_t CurrentScore);
        void BowlingEvent__DelegateSignature(int32_t PlayerId, SportsScramble::EBowlingEvent BowlingEvent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/BowlingAlley_BP.BowlingAlley_BP_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
