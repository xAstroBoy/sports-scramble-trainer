#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::BowlingLane_SkeeBall
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ShowHideMeshAndChildren_Params
    {
    public:
        bool                                                         NewHidden;                                               //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ShowHideSkeeBallHoles_Params
    {
    public:
        bool                                                         Show;                                                    //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ShutdownLane_Params
    {
    public:
        bool                                                         Callback;                                                //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_SetupLane_Params
    {
    public:
        bool                                                         Callback;                                                //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_MakeScorePattern_Params
    {
    public:
        BasicTypes::TArray<int32_t>                                  GoodLocation;                                            //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
        BasicTypes::TArray<int32_t>                                  ScorePattern;                                            //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_TryGetRandomPattern_Params
    {
    public:
        int32_t                                                      NumToSelect;                                             //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<int32_t>                                  SelecedSlots;                                            //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ScoreboardAnimation__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ScoreboardAnimation__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BaseScaleUpDown__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BaseScaleUpDown__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_EntireLaneUpDown__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_EntireLaneUpDown__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsUpDown__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsUpDown__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_RotateWall__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_RotateWall__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftBaseOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftBaseOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightBaseOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightBaseOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftMidOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftMidOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightMidOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightMidOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftTipOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftTipOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightTipOpenClose__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightTipOpenClose__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallScaleOutIn__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallScaleOutIn__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallFloatUpDown__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallFloatUpDown__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BndEvt__BowlingSpinKicker_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature_Params
    {
    public:
        Engine::UPrimitiveComponent*                                 OverlappedComponent;                                     //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        Engine::AActor*                                              OtherActor;                                              //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        Engine::UPrimitiveComponent*                                 OtherComp;                                               //  0x0010(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      OtherBodyIndex;                                          //  0x0018(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         bFromSweep;                                              //  0x001C(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0x3];                                   //  0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::FHitResult                                           SweepResult;                                             //  0x0020(0x0088)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ChangeHolesToPattern_Params
    {
    public:
        BasicTypes::TArray<int32_t>                                  Good_Holes;                                              //  0x0000(0x0010)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ClearPatternandResolve_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ConfigureSkeeball_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ReplicateLaneScore_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BindReplicateScore_Params
    {
    public:
        int32_t                                                      LaneID;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      CurrentScore;                                            //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ReplicateScoreboardTimer_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_RaiseLaneScoreboard_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_LowerLaneScoreboard_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BaseScaleUp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BaseScaleDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_EntireLaneUp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_BlindsUp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_EntireLaneDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_RotateWallFacingPlayer_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_RotateWallForShutdown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftBaseOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftBaseClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightBaseOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightBaseClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftMidOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftMidClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightMidOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightMidClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftTipOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingLeftTipClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightTipOpen_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WingRightTipClose_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_StartShutdown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallScaleOut_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallScaleIn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallFloatUp_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_WallFloatDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_Local_AddScore_Params
    {
    public:
        Engine::AActor*                                              Instigator;                                              //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      AddedScore;                                              //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_SkeeBall_C_ExecuteUbergraph_BowlingLane_SkeeBall_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
