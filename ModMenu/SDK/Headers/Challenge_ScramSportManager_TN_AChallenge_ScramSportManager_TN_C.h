#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "CoreUObject_FVector.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_AScramSportManagerTennis.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FText.h"
#include "SportsScramble_ENUMS.h"
#include "Engine_ENUMS.h"
#include "GameResult_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::Engine { class USoundBase; };
namespace CG::ServeLocationIndicator { class AServeLocationIndicator_C; };
namespace CG::ServeLauncher { class AServeLauncher_C; };
namespace CG::DebugHandButton { class ADebugHandButton_C; };
namespace CG::StandLocationIndicator { class AStandLocationIndicator_C; };
namespace CG::Challenge_ManagerTennis_LocalHelper { class AChallenge_ManagerTennis_LocalHelper_C; };
namespace CG::Engine { class AActor; };
namespace CG::TennisPlayByPlay_Blueprint { class ATennisPlayByPlay_Blueprint_C; };
namespace CG::SportsScramble { class AScramTennisAI; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Challenge_ScramSportManager_TN
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Challenges/Tennis/Challenge_ScramSportManager_TN.Challenge_ScramSportManager_TN_C
     * Size -> 0x0180 (FullSize[0x05D0] - InheritedSize[0x0450])
     */
    class AChallenge_ScramSportManager_TN_C : public SportsScramble::AScramSportManagerTennis
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UStaticMeshComponent*                                Umpire_Vox;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioCrowd;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioOrgan;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        bool                                                         MatchStarted;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         GameOver;                                                //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         MatchOver;                                               //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Ace;                                                     //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         DoubleFault;                                             //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Out;                                                     //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        NetTextDisplayTime;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         Player1Serve;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         DebugBallsSetting;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         ServeOffset;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          SFX_Fault;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          SFX_Out;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      ScorePlayer1;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      ScorePlayer2;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         Player1Winner;                                           //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          SFX_Point;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         MatchComplete;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        ServeLocationIndicator::AServeLocationIndicator_C*           ServeLocationIndicator;                                  //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash
        float                                                        OrganFadeOuttime;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ServeLauncher::AServeLauncher_C*                             ServeLauncher;                                           //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      GameCount;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ShowDebugText;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        DebugHandButton::ADebugHandButton_C*                         DebugButton;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        InfoDisplayStingerIntroTime;                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0006[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        StandLocationIndicator::AStandLocationIndicator_C*           ReceiveLocationIndicator;                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Challenge_ManagerTennis_LocalHelper::AChallenge_ManagerTennis_LocalHelper_C* LocalHelper;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         GameComplete;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         ServeReady;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         LocalIsPlayer1;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         PointComplete;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         BallInPlay;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         PreServeStart;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        int32_t                                                      p1won;                                                   //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0008[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         LetServeResult;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        Engine::AActor*                                              Player1Reference;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              Player2Reference;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         OC5Demo;                                                 //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         OC5DemoServeChange;                                      //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         MusicStarted;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         IsSpectator;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0009[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        TennisPlayByPlay_Blueprint::ATennisPlayByPlay_Blueprint_C*   PlayByPlayActor;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         FaultServeResult;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         TraditionalScoring;                                      //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ShowAdvantage;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0010[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AActor*                                              PauseBubbleActor;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::AScramTennisAI*                              AIOpponent;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void TN_SportMgr_UnbindEvents();
        void SpawnChallengeLocalHelper(bool UseScoreboard);
        void BindExistingServeLocationIndicator();
        void OnRep_ServeLocationIndicator();
        void BindNewServeLocationIndicator();
        void ShowDebugInfo(const BasicTypes::FString& String);
        void CreateServeLocation(bool Player1Serve);
        void AllowAIServe();
        void CreateReceiveLocation(bool Player1Serve);
        void GetGameStatus(BasicTypes::FText* StatusText);
        void GetPointType(BasicTypes::FText* PointType);
        void ResetResultBools();
        void Cleanup();
        void Initialize();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void TennisEvent(int32_t Player, SportsScramble::ETennisEvent TennisEvent);
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void PointMade(int32_t P1Score, int32_t P2Score);
        void LET();
        void WaitForOpponentServe();
        void InPlay();
        void Fault();
        void PrePareServe();
        void BallGrabbed(SportsScramble::AScramBall* Ball);
        void BallSpawned(SportsScramble::AScramBall* Ball);
        void SendDebugString(const BasicTypes::FString& S);
        void CreateDebugButton();
        void ToggleDebug(int32_t ButtonId);
        void PlayDoubleFaultSFX();
        void MC_DisplayPointResults(const BasicTypes::FText& PointType, int32_t P1Score, int32_t P2Score, bool Player1Winner, bool TextOnly);
        void MC_MatchComplete(bool OC5Demo, int32_t P1GamesWon, int32_t P2GamesWon);
        void MC_GameComplete(int32_t GameCount, int32_t P1GamesWon, int32_t P2GamesWon, bool Player1Serve);
        void MC_ShowPreServeInfo(const BasicTypes::FText& GameStatusText, bool Player1Serve);
        void MC_CreateStandLocations(bool Player1Serve);
        void ExecuteUbergraph_Challenge_ScramSportManager_TN(int32_t EntryPoint);
        void FaultServeResult__DelegateSignature();
        void LetServeResult__DelegateSignature();
        void PreServeStart__DelegateSignature(int32_t Game, int32_t Point, bool Player1Serve);
        void BallInPlay__DelegateSignature();
        void PointComplete__DelegateSignature();
        void ServeReady__DelegateSignature();
        void GameComplete__DelegateSignature();
        void MatchComplete__DelegateSignature(GameResult::EGameResult Result);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Challenges/Tennis/Challenge_ScramSportManager_TN.Challenge_ScramSportManager_TN_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
