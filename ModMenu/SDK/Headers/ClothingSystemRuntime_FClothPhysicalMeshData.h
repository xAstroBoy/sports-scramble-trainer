#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_FVector.h"
#include "ClothingSystemRuntime_FClothVertBoneData.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ClothingSystemRuntime
{
    /**
     * ScriptStruct /Script/ClothingSystemRuntime.ClothPhysicalMeshData
     * Size -> 0x00A8
     */
    struct FClothPhysicalMeshData
    {
    public:
        BasicTypes::TArray<CoreUObject::FVector>                     Vertices;                                                //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<CoreUObject::FVector>                     Normals;                                                 //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<uint32_t>                                 Indices;                                                 //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    MaxDistances;                                            //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    BackstopDistances;                                       //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    BackstopRadiuses;                                        //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    AnimDriveMultipliers;                                    //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<float>                                    InverseMasses;                                           //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<ClothingSystemRuntime::FClothVertBoneData> BoneData;                                                //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        int32_t                                                      MaxBoneWeights;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      NumFixedVerts;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<uint32_t>                                 SelfCollisionIndices;                                    //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
