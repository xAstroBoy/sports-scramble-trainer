#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "Engine_AActor.h"
#include "GameResult_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::ScramTennisAI_Blueprint { class AScramTennisAI_Blueprint_C; };
namespace CG::SS_Logo { class ASS_Logo_C; };
namespace CG::Announcer_BP { class AAnnouncer_BP_C; };
namespace CG::ConfettiCannon { class AConfettiCannon_C; };
namespace CG::ScramSportManagerTennis_Blueprint { class AScramSportManagerTennis_Blueprint_C; };
namespace CG::StandLocationIndicator { class AStandLocationIndicator_C; };
namespace CG::ScramSpectatorPawn_BP { class AScramSpectatorPawn_BP_C; };
namespace CG::ScramPlayer_BP { class AScramPlayer_BP_C; };
namespace CG::ScramGameMode_BP { class AScramGameMode_BP_C; };
namespace CG::DemoStart { class ADemoStart_C; };
namespace CG::Announcer_AnimBP { class UAnnouncer_AnimBP_C; };
namespace CG::Engine { class AController; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::DemoMatch
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Demo/DemoMatch.DemoMatch_C
     * Size -> 0x0149 (FullSize[0x0471] - InheritedSize[0x0328])
     */
    class ADemoMatch_C : public Engine::AActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Audio_LogoShrink;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Music;                                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_Spectator1_Alpha_FB2B0DE049DD6D12CB7C94AD866B51BC; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_Spectator1__Direction_FB2B0DE049DD6D12CB7C94AD866B51BC; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_Spectator1;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramTennisAI_Blueprint::AScramTennisAI_Blueprint_C*         AIActor;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SS_Logo::ASS_Logo_C*                                         Logo;                                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Announcer_BP::AAnnouncer_BP_C*                               Announcer;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ConfettiCannon::AConfettiCannon_C*                           ConfettiCannon;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBeforeCannonFire;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayAfterCannonFire;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramSportManagerTennis_Blueprint::AScramSportManagerTennis_Blueprint_C* SportManager;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         IsSpectator;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0xF];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      Player1Transform;                                        //  Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor
        CoreUObject::FTransform                                      Player2Transform;                                        //  Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor
        StandLocationIndicator::AStandLocationIndicator_C*           StandLocator;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramSpectatorPawn_BP::AScramSpectatorPawn_BP_C*             SpectatorPawn;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramPlayer_BP::AScramPlayer_BP_C*                           Player;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BasicTypes::FName>                        SpecCameraList;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        int32_t                                                      SpecCameraIndex;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         Error;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ScramGameMode_BP::AScramGameMode_BP_C*                       GameMode;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         GameOver;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DefaultSpecFieldOfView;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ProperShutdown;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         Player1Serve;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0004[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        DemoStart::ADemoStart_C*                                     DemoStart;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         SinglePlayerComplete;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         LocalWonGame;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Announcer_AnimBP::UAnnouncer_AnimBP_C*                       AnnouncerAnimBP;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         MpClientDisco;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn

    public:
        void StopActivity(bool* KeepShell);
        void UpdateScoreboards();
        void DestroyOldMenu(bool* WaitForMenu);
        void Cleanup();
        void GetLogoActors();
        void ErrorDisplay();
        void EndStaging();
        void SpectatorInit();
        void SpawnEndGameAnnouncer();
        void MultiplayerInit();
        void Initialize();
        void UserConstructionScript();
        void Timeline_Spectator1__FinishedFunc();
        void Timeline_Spectator1__UpdateFunc();
        void OnFailure_FE43AE584DB619A31AB3558375912B0E();
        void OnSuccess_FE43AE584DB619A31AB3558375912B0E();
        void OnFailure_CB7A18C444F2E804805EC3A03751D7F6();
        void OnSuccess_CB7A18C444F2E804805EC3A03751D7F6();
        void OnFailure_FE43AE584DB619A31AB3558343638AB8();
        void OnSuccess_FE43AE584DB619A31AB3558343638AB8();
        void OnFailure_CB7A18C444F2E804805EC3A001A37640();
        void OnSuccess_CB7A18C444F2E804805EC3A001A37640();
        void OnFailure_CB7A18C444F2E804805EC3A0AA407FC1();
        void OnSuccess_CB7A18C444F2E804805EC3A0AA407FC1();
        void OnFailure_FE43AE584DB619A31AB35583E8808339();
        void OnSuccess_FE43AE584DB619A31AB35583E8808339();
        void Spec_CycleCameras();
        void SpectatorExit();
        void PrepSpectatorForExit();
        void NewServe(int32_t Game, int32_t Point, bool Player1Serve);
        void ReceiveBeginPlay();
        void BeginReveal();
        void TransitionComplete();
        void AnnouncerLine13();
        void AnnouncerLine1();
        void AnnouncerExit();
        void RevealOpponent();
        void ClosingAnnouncerComplete();
        void DoReveal();
        void DoneRevealingOpponent();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void EndingAnnouncer(bool HostWon);
        void ResetDemo();
        void RevealAnimationCompleted();
        void EndAnnouncerReady();
        void HostReadyTeleport();
        void FadeComplete();
        void NameAnnounce();
        void ClientDisconnected(Engine::AController* ExitingPlayer, bool IsSpectator);
        void SinglePlayerStart();
        void RevealComplete();
        void Reset(GameResult::EGameResult Result);
        void QuitMatch();
        void MatchMakingDestroyed(Engine::AActor* DestroyedActor);
        void ErrorMessageComplete(int32_t ID);
        void ErrorMessageFaded();
        void ShowDiscoMessage();
        void AnnouncerLine2();
        void AnnouncerLine3();
        void StartShutdown();
        void StartMatch(Engine::AActor* DestroyedActor);
        void PrepForTransition(Engine::AActor* DestroyedActor);
        void ExecuteUbergraph_DemoMatch(int32_t EntryPoint);
        void SinglePlayerComplete__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Demo/DemoMatch.DemoMatch_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
