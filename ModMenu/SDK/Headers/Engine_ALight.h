#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_AActor.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class ULightComponent; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.Light
     * Size -> 0x0010 (FullSize[0x0338] - InheritedSize[0x0328])
     */
    class ALight : public Engine::AActor
    {
    public:
        Engine::ULightComponent*                                     LightComponent;                                          //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         bEnabled : 1;                                            //  BIT_FIELD Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (PADDING)

    public:
        void ToggleEnabled();
        void SetLightFunctionScale(const CoreUObject::FVector& NewLightFunctionScale);
        void SetLightFunctionMaterial(Engine::UMaterialInterface* NewLightFunctionMaterial);
        void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);
        void SetLightColor(const CoreUObject::FLinearColor& NewLightColor);
        void SetEnabled(bool bSetEnabled);
        void SetCastShadows(bool bNewValue);
        void SetBrightness(float NewBrightness);
        void SetAffectTranslucentLighting(bool bNewValue);
        void OnRep_bEnabled();
        bool IsEnabled();
        CoreUObject::FLinearColor GetLightColor();
        float GetBrightness();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.Light");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
