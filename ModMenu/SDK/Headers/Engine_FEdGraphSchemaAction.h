#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FText.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FString.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.EdGraphSchemaAction
     * Size -> 0x0100
     */
    struct FEdGraphSchemaAction
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FText                                            MenuDescription;                                         //  NativeAccessSpecifierPrivate
        BasicTypes::FText                                            TooltipDescription;                                      //  NativeAccessSpecifierPrivate
        BasicTypes::FText                                            Category;                                                //  NativeAccessSpecifierPrivate
        BasicTypes::FText                                            Keywords;                                                //  NativeAccessSpecifierPrivate
        int32_t                                                      Grouping;                                                //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      SectionID;                                               //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      MenuDescriptionArray;                                    //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      FullSearchTitlesArray;                                   //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      FullSearchKeywordsArray;                                 //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      FullSearchCategoryArray;                                 //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      LocalizedMenuDescriptionArray;                           //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      LocalizedFullSearchTitlesArray;                          //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      LocalizedFullSearchKeywordsArray;                        //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FString>                      LocalizedFullSearchCategoryArray;                        //  ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::FString                                          SearchText;                                              //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
