#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FVector_NetQuantizeNormal.h"
#include "Engine_FHitResult.h"
#include "Engine_FDamageEvent.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.PointDamageEvent
     * Size -> 0x0098 (FullSize[0x00A8] - InheritedSize[0x0010])
     */
    struct FPointDamageEvent : public Engine::FDamageEvent
    {
    public:
        float                                                        Damage;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::FVector_NetQuantizeNormal                            ShotDirection;                                           //  NoDestructor, NativeAccessSpecifierPublic
        Engine::FHitResult                                           HitInfo;                                                 //  IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
