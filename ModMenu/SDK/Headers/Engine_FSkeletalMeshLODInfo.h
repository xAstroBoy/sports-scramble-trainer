#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPerPlatformFloat.h"
#include "BasicTypes_TArray.h"
#include "Engine_FSkeletalMeshOptimizationSettings.h"
#include "Engine_FBoneReference.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAnimSequence; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * ScriptStruct /Script/Engine.SkeletalMeshLODInfo
     * Size -> 0x0068
     */
    struct FSkeletalMeshLODInfo
    {
    public:
        Engine::FPerPlatformFloat                                    ScreenSize;                                              //  Edit, NoDestructor, NativeAccessSpecifierPublic
        float                                                        LODHysteresis;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<int32_t>                                  LODMaterialMap;                                          //  ZeroConstructor, NativeAccessSpecifierPublic
        Engine::FSkeletalMeshOptimizationSettings                    ReductionSettings;                                       //  Edit, NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FBoneReference>                   BonesToRemove;                                           //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        Engine::UAnimSequence*                                       BakePose;                                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          SourceImportFilename;                                    //  Edit, ZeroConstructor, EditConst, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasBeenSimplified : 1;                                  //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bHasPerLODVertexColors : 1;                              //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowCPUAccess : 1;                                     //  BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bSupportUniformlyDistributedSampling : 1;                //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
