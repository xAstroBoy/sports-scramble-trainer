#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FActorComponentTickFunction.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "Engine_ENUMS.h"
#include "Engine_FSimpleMemberReference.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAssetUserData; };
namespace CG::Engine { class UActorComponent; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.ActorComponent
     * Size -> 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
     */
    class UActorComponent : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FActorComponentTickFunction                          PrimaryComponentTick;                                    //  Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        ComponentTags;                                           //  Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UAssetUserData*>                  AssetUserData;                                           //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected
        bool                                                         UnknownData_0001 : 3;                                    //  BIT_FIELD (PADDING)
        bool                                                         bReplicates : 1;                                         //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bNetAddressable : 1;                                     //  BIT_FIELD NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         UnknownData_0002 : 3;                                    //  BIT_FIELD (PADDING)
        bool                                                         UnknownData_0003 : 7;                                    //  BIT_FIELD (PADDING)
        bool                                                         bAutoActivate : 1;                                       //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsEditorOnly : 1;                                       //  BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0005 : 2;                                    //  BIT_FIELD (PADDING)
        bool                                                         bCanEverAffectNavigation : 1;                            //  BIT_FIELD Edit, Config, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bEditableWhenInherited : 1;                              //  BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsActive : 1;                                           //  BIT_FIELD Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         UnknownData_0004 : 1;                                    //  BIT_FIELD (PADDING)
        uint8_t                                                      UnknownData_0006[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::EComponentCreationMethod                             CreationMethod;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0007[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FSimpleMemberReference>           UCSModifiedProperties;                                   //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::UScriptMulticastDelegate                         OnComponentActivated;                                    //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnComponentDeactivated;                                  //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0008[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void ToggleActive();
        void SetTickGroup(Engine::ETickingGroup NewTickGroup);
        void SetTickableWhenPaused(bool bTickableWhenPaused);
        void SetIsReplicated(bool ShouldReplicate);
        void SetComponentTickInterval(float TickInterval);
        void SetComponentTickEnabled(bool bEnabled);
        void SetAutoActivate(bool bNewAutoActivate);
        void SetActive(bool bNewActive, bool bReset);
        void RemoveTickPrerequisiteComponent(Engine::UActorComponent* PrerequisiteComponent);
        void RemoveTickPrerequisiteActor(Engine::AActor* PrerequisiteActor);
        void ReceiveTick(float DeltaSeconds);
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void ReceiveBeginPlay();
        void OnRep_IsActive();
        void K2_DestroyComponent(CoreUObject::UObject* Object);
        bool IsComponentTickEnabled();
        bool IsBeingDestroyed();
        bool IsActive();
        Engine::AActor* GetOwner();
        float GetComponentTickInterval();
        void Deactivate();
        bool ComponentHasTag(const BasicTypes::FName& Tag);
        void AddTickPrerequisiteComponent(Engine::UActorComponent* PrerequisiteComponent);
        void AddTickPrerequisiteActor(Engine::AActor* PrerequisiteActor);
        void Activate(bool bReset);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.ActorComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
