#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TSoftObjectPtr.h"
#include "Engine_UWorld.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class ALevelStreamingVolume; };
namespace CG::Engine { class ULevel; };
namespace CG::Engine { class ALevelScriptActor; };
namespace CG::Engine { class ULevelStreaming; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.LevelStreaming
     * Size -> 0x0118 (FullSize[0x0140] - InheritedSize[0x0028])
     */
    class ULevelStreaming : public CoreUObject::UObject
    {
    public:
        BasicTypes::TSoftObjectPtr<Engine::UWorld>                   WorldAsset;                                              //  ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  FIX WRONG SIZE OF PREVIOUS PROPERTY
        BasicTypes::FName                                            PackageNameToLoad;                                       //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<BasicTypes::FName>                        LODPackageNames;                                         //  ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      LevelTransform;                                          //  Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        int32_t                                                      LevelLODIndex;                                           //  BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         bShouldBlockOnUnload : 1;                                //  BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bIsStatic : 1;                                           //  BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bLocked : 1;                                             //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bShouldBlockOnLoad : 1;                                  //  BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bShouldBeVisible : 1;                                    //  BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         UnknownData_0003 : 2;                                    //  BIT_FIELD (PADDING)
        bool                                                         bShouldBeLoaded : 1;                                     //  BIT_FIELD BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         bDisableDistanceStreaming : 1;                           //  BIT_FIELD BlueprintVisible, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDrawOnLevelStatusMap : 1;                               //  BIT_FIELD Edit, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    LevelColor;                                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::ALevelStreamingVolume*>           EditorStreamingVolumes;                                  //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        float                                                        MinTimeBetweenVolumeUnloadRequests;                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         OnLevelLoaded;                                           //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnLevelUnloaded;                                         //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnLevelShown;                                            //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnLevelHidden;                                           //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        Engine::ULevel*                                              LoadedLevel;                                             //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::ULevel*                                              PendingUnloadLevel;                                      //  ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        bool ShouldBeLoaded();
        void SetShouldBeVisible(bool bInShouldBeVisible);
        void SetShouldBeLoaded(bool bInShouldBeLoaded);
        void SetLevelLODIndex(int32_t LODIndex);
        bool IsStreamingStatePending();
        bool IsLevelVisible();
        bool IsLevelLoaded();
        BasicTypes::FName GetWorldAssetPackageFName();
        Engine::ALevelScriptActor* GetLevelScriptActor();
        Engine::ULevelStreaming* CreateInstance(const BasicTypes::FString& UniqueInstanceName);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.LevelStreaming");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
