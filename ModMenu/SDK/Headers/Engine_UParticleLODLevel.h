#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UParticleModuleRequired; };
namespace CG::Engine { class UParticleModule; };
namespace CG::Engine { class UParticleModuleTypeDataBase; };
namespace CG::Engine { class UParticleModuleSpawn; };
namespace CG::Engine { class UParticleModuleEventGenerator; };
namespace CG::Engine { class UParticleModuleSpawnBase; };
namespace CG::Engine { class UParticleModuleOrbit; };
namespace CG::Engine { class UParticleModuleEventReceiverBase; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.ParticleLODLevel
     * Size -> 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
     */
    class UParticleLODLevel : public CoreUObject::UObject
    {
    public:
        int32_t                                                      Level;                                                   //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bEnabled : 1;                                            //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UParticleModuleRequired*                             RequiredModule;                                          //  ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModule*>                 Modules;                                                 //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
        Engine::UParticleModuleTypeDataBase*                         TypeDataModule;                                          //  ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UParticleModuleSpawn*                                SpawnModule;                                             //  ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UParticleModuleEventGenerator*                       EventGenerator;                                          //  ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModuleSpawnBase*>        SpawningModules;                                         //  ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModule*>                 SpawnModules;                                            //  ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModule*>                 UpdateModules;                                           //  ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModuleOrbit*>            OrbitModules;                                            //  ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UParticleModuleEventReceiverBase*> EventReceiverModules;                                    //  ZeroConstructor, Transient, DuplicateTransient, NativeAccessSpecifierPublic
        bool                                                         ConvertedModules : 1;                                    //  BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      PeakActiveParticles;                                     //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.ParticleLODLevel");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
