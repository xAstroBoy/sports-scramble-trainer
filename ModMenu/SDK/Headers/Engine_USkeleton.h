#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_FBoneNode.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FGuid.h"
#include "Engine_FVirtualBone.h"
#include "Engine_FSmartNameContainer.h"
#include "Engine_FAnimSlotGroup.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USkeletalMeshSocket; };
namespace CG::Engine { class UBlendProfile; };
namespace CG::Engine { class UAssetUserData; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.Skeleton
     * Size -> 0x0338 (FullSize[0x0360] - InheritedSize[0x0028])
     */
    class USkeleton : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::FBoneNode>                        BoneTree;                                                //  Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<CoreUObject::FTransform>                  RefLocalPoses;                                           //  ZeroConstructor, Deprecated, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x118];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FGuid                                           VirtualBoneGuid;                                         //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::FVirtualBone>                     VirtualBones;                                            //  ZeroConstructor, Protected, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::USkeletalMeshSocket*>             Sockets;                                                 //  ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x50];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FSmartNameContainer                                  SmartNames;                                              //  Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0003[0x28];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UBlendProfile*>                   BlendProfiles;                                           //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::FAnimSlotGroup>                   SlotGroups;                                              //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0xC8];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::UAssetUserData*>                  AssetUserData;                                           //  Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.Skeleton");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
