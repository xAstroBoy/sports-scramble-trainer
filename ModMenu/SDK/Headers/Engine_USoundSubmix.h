#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "CoreUObject_UObject.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_UScriptDelegate.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USoundSubmix; };
namespace CG::Engine { class USoundEffectSubmixPreset; };
namespace CG::Engine { class UAmbisonicsSubmixSettingsBase; };
namespace CG::Engine { class USoundWave; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Engine
{
    /**
     * Class /Script/Engine.SoundSubmix
     * Size -> 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
     */
    class USoundSubmix : public CoreUObject::UObject
    {
    public:
        BasicTypes::TArray<Engine::USoundSubmix*>                    ChildSubmixes;                                           //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        Engine::USoundSubmix*                                        ParentSubmix;                                            //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::ESubmixChannelFormat                                 ChannelFormat;                                           //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::USoundEffectSubmixPreset*>        SubmixEffectChain;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        Engine::UAmbisonicsSubmixSettingsBase*                       AmbisonicsPluginSettings;                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      EnvelopeFollowerAttackTime;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        int32_t                                                      EnvelopeFollowerReleaseTime;                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnSubmixRecordedFileDone;                                //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void StopRecordingOutput(CoreUObject::UObject* WorldContextObject, Engine::EAudioRecordingExportType ExportType, const BasicTypes::FString& Name, const BasicTypes::FString& Path, Engine::USoundWave* ExistingSoundWaveToOverwrite);
        void StopEnvelopeFollowing(CoreUObject::UObject* WorldContextObject);
        void StartRecordingOutput(CoreUObject::UObject* WorldContextObject, float ExpectedDuration);
        void StartEnvelopeFollowing(CoreUObject::UObject* WorldContextObject);
        void AddEnvelopeFollowerDelegate(CoreUObject::UObject* WorldContextObject, const BasicTypes::UScriptDelegate& OnSubmixEnvelopeBP);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/Engine.SoundSubmix");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
