#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FString.h"
#include "Engine_AActor.h"
#include "BasicTypes_UScriptDelegate.h"
#include "InputCore_FKey.h"
#include "HubMenuChoices_ENUMS.h"
#include "MainMenuChoices_ENUMS.h"
#include "SelectionDetailsMenuType_ENUMS.h"
#include "GameModeTypes_ENUMS.h"
#include "SportsScramble_FScramGameInvite.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UParticleSystemComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::ScramPlayer_BP { class AScramPlayer_BP_C; };
namespace CG::MainMenu { class AMainMenu_C; };
namespace CG::DebugMainMenu { class ADebugMainMenu_C; };
namespace CG::DebugHandButton { class ADebugHandButton_C; };
namespace CG::SelectionDetailsMenu { class ASelectionDetailsMenu_C; };
namespace CG::GameHandlerBase { class AGameHandlerBase_C; };
namespace CG::StandLocationIndicator { class AStandLocationIndicator_C; };
namespace CG::SS_Logo { class ASS_Logo_C; };
namespace CG::Announcer_BP { class AAnnouncer_BP_C; };
namespace CG::Announcer_AnimBP { class UAnnouncer_AnimBP_C; };
namespace CG::HubMenu { class AHubMenu_C; };
namespace CG::MainMenuStand { class AMainMenuStand_C; };
namespace CG::Header { class AHeader_C; };
namespace CG::Menu_Message { class AMenu_Message_C; };
namespace CG::Button_Standard { class AButton_Standard_C; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::FrontEndManager
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/UI/FrontEndManager.FrontEndManager_C
     * Size -> 0x0181 (FullSize[0x04A9] - InheritedSize[0x0328])
     */
    class AFrontEndManager_C : public Engine::AActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     MenuRoot;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     MenuScaleRoot;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     StaticBottomButtonRoot;                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UParticleSystemComponent*                            LoopingConfetti_Leftovers;                               //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_06;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_05;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_04;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_03;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_02;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ConfettiCannon_01;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioMenu;                                               //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioLogoDisappear;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioIntro;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_ErrorMessageScale_Alpha_A59E351D4C3828FDC44A39ABEEF795D9; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_ErrorMessageScale__Direction_A59E351D4C3828FDC44A39ABEEF795D9; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_ErrorMessageScale;                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_RotateAnnouncer_Alpha_4B4F0E704FF2B70B4EF3E98B5E3E60C8; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_RotateAnnouncer__Direction_4B4F0E704FF2B70B4EF3E98B5E3E60C8; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_RotateAnnouncer;                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      _int_;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         IsSpectator;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TutorialJustCompleted;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ScramPlayer_BP::AScramPlayer_BP_C*                           Player;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TripleTapEnabled;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      ButtonPresses;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        MainMenu::AMainMenu_C*                                       MainMenu;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        DebugMainMenu::ADebugMainMenu_C*                             DebugMainMenu;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        DebugHandButton::ADebugHandButton_C*                         TempMenu;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SelectionDetailsMenu::ASelectionDetailsMenu_C*               DetailsMenu;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::EScramSport                                  Sport;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         LoadTrainingLevel;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0004[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            LevelOverride;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::EScramSport                                  SelectedSport;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         Selected1P;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        GameHandlerBase::AGameHandlerBase_C*                         ActiveGameHandler;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        StandLocationIndicator::AStandLocationIndicator_C*           StandLocator;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SS_Logo::ASS_Logo_C*                                         Logo;                                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Announcer_BP::AAnnouncer_BP_C*                               Announcer;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         DisableLogoSpawn;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0006[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        DebugHandButton::ADebugHandButton_C*                         TrophyResetButton;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Announcer_AnimBP::UAnnouncer_AnimBP_C*                       AnnouncerAnimBP;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ReplayNux;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         PlayerInitLocCorrect;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         PlayerInitLocWrong;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         DoSetup;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0007[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        HubMenu::AHubMenu_C*                                         HubMenu;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::FString                                          VoicePermissionString;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
        MainMenuStand::AMainMenuStand_C*                             MenuStand;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        MenuOffset;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        AnnouncerAngle;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         AlreadyLoopingConfetti;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         AllowOptionMenu;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0008[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Header::AHeader_C*                                           Header;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Menu_Message::AMenu_Message_C*                               ErrorMenu;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Button_Standard::AButton_Standard_C*                         ErrorButton;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         IntroMessageDisplayed;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void PlayThemeMusic(bool PlayIntro, float FadeTime);
        void SpawnMenuStand();
        void TeleportPlayAreaToArena(const BasicTypes::FName& RowName, bool UseTransitionDuration, float TransitionDuration);
        void RemoveLogo();
        void SpawnLogo(bool LogoOnly);
        void SpawnGame(GameHandlerBase::AGameHandlerBase_C** GameplayHandler);
        void SpawnTempMenu(const BasicTypes::UScriptDelegate& Event);
        void DemoStart();
        void CheckDebugMode(bool* DebugActive);
        void CheckDemoMode(bool* DemoActive);
        void Initialize();
        void UserConstructionScript();
        void Timeline_RotateAnnouncer__FinishedFunc();
        void Timeline_RotateAnnouncer__UpdateFunc();
        void Timeline_ErrorMessageScale__FinishedFunc();
        void Timeline_ErrorMessageScale__UpdateFunc();
        void OnFailure_FE43AE584DB619A31AB35583454BD2A5();
        void OnSuccess_FE43AE584DB619A31AB35583454BD2A5();
        void OnFailure_CB7A18C444F2E804805EC3A0078B2E5D();
        void OnSuccess_CB7A18C444F2E804805EC3A0078B2E5D();
        void OnFailure_CB7A18C444F2E804805EC3A01E43AE2F();
        void OnSuccess_CB7A18C444F2E804805EC3A01E43AE2F();
        void InpActEvt_DebugButton_K2Node_InputActionEvent_2(const InputCore::FKey& Key);
        void OnFailure_FE43AE584DB619A31AB355835C8352D7();
        void OnSuccess_FE43AE584DB619A31AB355835C8352D7();
        void InpActEvt_Pause_K2Node_InputActionEvent_1(const InputCore::FKey& Key);
        void OnFailure_9E6C8D1F493095BCB7D1C4B4615CCC02();
        void OnSuccess_9E6C8D1F493095BCB7D1C4B4615CCC02();
        void BeginIntro();
        void StartAnnouncerAudio();
        void PrepareReveal();
        void AnnouncerReveal();
        void AnnouncerTransform();
        void TransformComplete();
        void AnnouncerExitComplete();
        void ShortIntroBegin();
        void NuxIntroBegin();
        void Hub01AnimComplete();
        void Hub02AnimComplete();
        void Hub03AnimComplete();
        void Hub04AnimComplete();
        void ReturnAnnouncerToSpawn(bool UseHubExit);
        void ShortIntroClipComplete();
        void RevealBeacon(HubMenuChoices::EHubMenuChoices BeaconType);
        void RotateAnnouncer(HubMenuChoices::EHubMenuChoices Choice, float Angle);
        void TeleportToVenue(SportsScramble::EScramSport Sport, bool TrainingLevel, const BasicTypes::FName& LevelOverride);
        void LoadGameplayLevel();
        void RemoveTravelTunnel(const BasicTypes::FName& NewGeoLevel);
        void CustomLevelLoaded(const BasicTypes::FName& NewPrimaryLevel);
        void StartDemo();
        void ReadyToStartGame();
        void GameHandlerTeleport(SportsScramble::EScramSport Sport, bool TrainingLevel, const BasicTypes::FName& LevelOverride);
        void ResetGameplayLevel(const BasicTypes::FName& SpawnLocOverride);
        void ReceiveBeginPlay();
        void AllowSwap();
        void CreateMainMenu();
        void ShowLogoScreen();
        void ToggleDebugMenu();
        void DisallowSwap();
        void CreateDebugMenu();
        void MainMenuSelectionMade(MainMenuChoices::EMainMenuChoices Choice);
        void SpawnHubMenu(bool NUX);
        void HubMenuSelection(HubMenuChoices::EHubMenuChoices Selection);
        void CreateDetailsMenu(SelectionDetailsMenuType::ESelectionDetailsMenuType MenuType, SportsScramble::EScramSport Sport, GameModeTypes::EGameModeTypes ResultsType);
        void GameSelectionMade(SportsScramble::EScramSport Sport, bool SinglePlayer);
        void ReturnToHub();
        void ReadyToReturnToHub();
        void PlayerHasReturnedToHub(const BasicTypes::FName& NewPrimaryLevel);
        void ReloadHub();
        void HiddenHubLoaded(const BasicTypes::FName& NewPrimaryLevel);
        void LevelChanged(const BasicTypes::FName& Level);
        void SpawnResultsScreen();
        void ReceiveTick(float DeltaSeconds);
        void TrophyRoomLoaded(const BasicTypes::FName& NewPrimaryLevel);
        void GoToTrophyRoom();
        void TrophyRoomPositionConfirmed();
        void ReadyToLoadTrophyRoom();
        void ExitTrophies(int32_t ButtonId);
        void DebugResetTrophies(int32_t ButtonId);
        void SetupDone(Engine::AActor* DestroyedActor);
        void QuitGame();
        void ShowQuitConfirmation();
        void ReadyToShowConfirmation();
        void QuitChoiceMade(int32_t ID);
        void PlayerReadyForIntro();
        void PlayerFadedOut();
        void OptionMenuPostionConfirmed();
        void ReadyToSpawnOptionsMenu();
        void ShowOptionsMenu();
        void OptionsMenuDestroyed(Engine::AActor* DestroyedActor);
        void StandButtonPressed(int32_t ID);
        void StandSelectionMade(int32_t ID);
        void CloseMenuStnad(HubMenuChoices::EHubMenuChoices Choice, float Angle);
        void SpawnIntroOnlyConfettiCannonVFX();
        void LevelsUnloaded();
        void HubSelectionStarted(HubMenuChoices::EHubMenuChoices Choice, float Angle);
        void StartLoopingConfetti();
        void StopLoopingConfetti();
        void ShellInviteFromRelaunchFailed();
        void OnShellInviteAccepted(const SportsScramble::FScramGameInvite& GameInvite);
        void ClientUnrealJoinFailed(SportsScramble::EScramPendingGameFailure failureType);
        void ErrorMessageComplete(Engine::AActor* DestroyedActor);
        void ScaleUpErrorMessage();
        void ScaleDownErrorMessage();
        void DisplayErrorMessage();
        void SpawnErrorMenu();
        void ErrorButtonPressed(int32_t ButtonId);
        void DisplayIntroMessage();
        void EndIntroMessage(int32_t ButtonId);
        void ContinueSetup();
        void ContinueIntro();
        void ExecuteUbergraph_FrontEndManager(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/UI/FrontEndManager.FrontEndManager_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
