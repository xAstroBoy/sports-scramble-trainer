#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "ResultsData_FResultsData.h"
#include "BasicTypes_TArray.h"
#include "OnlineGameHandlerClientStates_ENUMS.h"
#include "SportsScramble_AScramHandshakeActor.h"
#include "BasicTypes_UScriptDelegate.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_FText.h"
#include "GameResult_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::Header { class AHeader_C; };
namespace CG::Button_Standard { class AButton_Standard_C; };
namespace CG::Engine { class AActor; };
namespace CG::Menu_MpReady { class AMenu_MpReady_C; };
namespace CG::Menu_Results { class AMenu_Results_C; };
namespace CG::Menu_TrophyAwarded { class AMenu_TrophyAwarded_C; };
namespace CG::Button_AvatarEdit { class AButton_AvatarEdit_C; };
namespace CG::SportsScramble { class AScramPlayer; };
namespace CG::Menu_MpSportIcon { class AMenu_MpSportIcon_C; };
namespace CG::SportsScramble { class AScramPlayerController; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GameHandlerOnline
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/GameHandlers/GameHandlerOnline.GameHandlerOnline_C
     * Size -> 0x019D (FullSize[0x04E5] - InheritedSize[0x0348])
     */
    class AGameHandlerOnline_C : public SportsScramble::AScramHandshakeActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     FarRightButtonPos;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     StaticBottomMidButtonPos;                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     StaticMenuRoot;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     AvatarButtonRPos;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     AvROffset;                                               //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     AvatarButtonLPos;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     AvLOffset;                                               //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BottomRightButtonPos;                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BottomLeftButtonPos;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BottomMidButtonPos;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FarLeftButtonPos;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     LeftButtonPos;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     MenuRoot;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     MenuScaleRoot;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     RightButtonPos;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     OffsetRoot;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Music;                                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_MenuScale_Alpha_863974084A4C064B038E93A7E471E26C; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_MenuScale__Direction_863974084A4C064B038E93A7E471E26C; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_MenuScale;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Header::AHeader_C*                                           Header;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::EScramSport                                  Sport;                                                   //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        bool                                                         PlayWithFriend;                                          //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         MenuOpened;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         OldMenuClear;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        Button_Standard::AButton_Standard_C*                         LeftButton;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Button_Standard::AButton_Standard_C*                         RightButton;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Button_Standard::AButton_Standard_C*                         NextButton;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Button_Standard::AButton_Standard_C*                         HomeButton;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              ActiveSubmenu;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         RemotePlayerReady;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Menu_MpReady::AMenu_MpReady_C*                               ReadyMenu;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ReadyMenuFullyOpen;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         MatchOver;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Menu_Results::AMenu_Results_C*                               ResultsMenu;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ResultsData::FResultsData                                    Results;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Menu_TrophyAwarded::AMenu_TrophyAwarded_C*                   TrophyMenu;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         RemotePlayerWantsRematch;                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         WaitingOnRemoteRematch;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         BB_HostIsHomeTeam;                                       //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         AvatarMenuOpened;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         WaitingToChooseSport;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Button_AvatarEdit::AButton_AvatarEdit_C*> AvatarButtons;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        bool                                                         NetworkFailureDetected;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         NetworkFailureMenuCanActivate;                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0006[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AActor*                                              ActiveStaticMenu;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              GameManager;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        OnlineGameHandlerClientStates::EOnlineGameHandlerClientStates ExpectedClientState;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0007[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         ReturnExpectedClientState;                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         HostForfeit;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         HasSeenInitialMessage;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         RestoringGame;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         MatchStarting;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0008[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Button_Standard::AButton_Standard_C*                         BackButton;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ReconnectDelayActive;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ClientCanTravel;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ServerCanTravel;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ClientCanBeginMatch;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ServerCanBeginMatch;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void RemoveErrorMenu();
        void ClosePauseMenu();
        void FailsafeDoubleMenu();
        void RepairLocalClientState(OnlineGameHandlerClientStates::EOnlineGameHandlerClientStates NewClientState);
        void UnbindPause();
        void BindPause();
        void CheckRemotePlayerClientState(const BasicTypes::UScriptDelegate& RemotePlayerClientState);
        void ResetStatusBools();
        void SpawnExitButton(bool StaticPosition, const BasicTypes::UScriptDelegate& ExitEvent);
        void ShowMenus();
        void HideMenus();
        void RemoveAvatarButtons();
        void SpawnAvatarButtons();
        void SpawnConfirmationMenu(const BasicTypes::FName& LocText, const BasicTypes::FText& OverrideText, const BasicTypes::UScriptDelegate& Selection, bool Static);
        void SpawnTextTwoMenu(const BasicTypes::FName& LocText0, const BasicTypes::FName& LocText1, const BasicTypes::UScriptDelegate& SelectionFinished);
        void PlayerReady(SportsScramble::AScramPlayer* Player, bool* Ready);
        void SpawnSportOptionsMenu();
        void SpawnChooseSportMenu(const BasicTypes::UScriptDelegate& ChoiceEvent);
        void SetFindMatchGameOptions();
        void SpawnBowlingGloves(SportsScramble::AScramPlayer* Player);
        void SpawnMessageMenu(const BasicTypes::FText& Text, bool Static);
        void SpawnAwardMenu(const BasicTypes::UScriptDelegate& AwardReadyEvent);
        void AwardsEarned(bool* AwardWaiting);
        void SpawnResultsMenu(const BasicTypes::UScriptDelegate& ResultsCompleteEvent, const ResultsData::FResultsData& ResultsData);
        void PrepSport();
        void RevealRemoteAvatar();
        void SpawnGameManager();
        void SpawnSportIconMenu(Menu_MpSportIcon::AMenu_MpSportIcon_C** Menu);
        void SpawnMpReadyMenu();
        void SpawnAvatarChoiceMenu();
        void NextMenu(const BasicTypes::UScriptDelegate& Event);
        void RemoveNavigationButtons();
        void DisableActiveMenuInput();
        void SpawnNavigationButtons(bool Ok, const BasicTypes::UScriptDelegate& OkEvent, bool WideSpacing, bool Next, const BasicTypes::UScriptDelegate& NextEvent, bool Trophy, bool Home, bool FocusNext);
        void EnableActiveMenuInput();
        void SpawnHeader(const BasicTypes::UScriptDelegate& InitialMenuEvent, bool StartOpen);
        void Initialize();
        void UserConstructionScript();
        void Timeline_MenuScale__FinishedFunc();
        void Timeline_MenuScale__UpdateFunc();
        void OnFailure_CB7A18C444F2E804805EC3A08673C765();
        void OnSuccess_CB7A18C444F2E804805EC3A08673C765();
        void OnFailure_FE43AE584DB619A31AB35583C4B33B9D();
        void OnSuccess_FE43AE584DB619A31AB35583C4B33B9D();
        void ReceiveBeginPlay();
        void InitialMenu();
        void ScaleUpMenu();
        void ScaleDownMenu();
        void ButtonPressed(int32_t ID);
        void HomeButtonPressed(int32_t ButtonId);
        void AvatarChoiceMenuOpened();
        void AvatarSelected(int32_t ButtonId);
        void SpawnReadyMenu();
        void ReadyMenuOpened();
        void AllPlayersReady();
        void CloseReadyMenu();
        void SpawnIconMenu();
        void TennisMatchComplete(GameResult::EGameResult Result);
        void ShowResults();
        void GameOver();
        void SpawnCapsule();
        void CapsuleOn();
        void SetResults(GameResult::EGameResult ResultsGameResult);
        void TrophyComplete(bool AllAwardsComplete);
        void TrophyReadyToSpawn(int32_t ButtonId);
        void CreateTrophyMenu();
        void TrophyLoop();
        void CreateNextFromResultsButton();
        void ResultsDoneSelected(int32_t ButtonId);
        void RemotePlayerReplayRequested(int32_t ID);
        void RestartMatch();
        void WaitingForRematch();
        void WaitingForRematchDisplayed();
        void DoNothing(int32_t ButtonId);
        void BowlingMatchComplete(GameResult::EGameResult MatchResult, int32_t Player1GamesWon, int32_t Player2GamesWon);
        void BaseballMatchComplete(bool LocalPlayerVictory, int32_t AwayScore, int32_t HomeScore);
        void HeaderHandoffComplete(Engine::AActor* DestroyedActor);
        void SpawnAvatarMenu();
        void SportOptionsSelected(SportsScramble::EScramSport Sport, bool BBHostIsHomeTeam);
        void SportChosen(SportsScramble::EScramSport Sport);
        void SpawnGameOptionsMenu();
        void SportOptionsMenuDisplayed();
        void SportOptionsChosen(int32_t ButtonId);
        void OnGeoLevelChanged(const BasicTypes::FName& NewGeoLevel);
        void PlayerInitComplete(SportsScramble::AScramPlayer* Player);
        void OnMatchStart();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void FadeComplete();
        void ShutDown();
        void OnInitialPlayerInitComplete(SportsScramble::AScramPlayer* Player);
        void OnRemoteAvatarSelected(SportsScramble::AScramPlayer* Player);
        void ResultsDisplayComplete(bool WideNextButton);
        void PlayMatchBeginAudio();
        void HeartbeatConnected(SportsScramble::AScramPlayerController* PlayerController);
        void HeartbeatDisconnected(SportsScramble::AScramPlayerController* PlayerController);
        void HeartbeatTravelCapsuleClosed();
        void HeartbeatReconnected(SportsScramble::AScramPlayerController* PlayerController);
        void SpawnMenuInstruments();
        void Net_AllPlayersReconnected();
        void OnDisconnect_Local();
        void OnDisconnect_Remote();
        void OnDisconnect_Remote_Menu0();
        void OnDisconnect_Remote_Menu1();
        void OnGameOverMenu();
        void SpawnRematchOrResetMenu();
        void RematchWithFriendSelectionMade(int32_t ID);
        void RematchWithFriendOpened();
        void ReplayChooseSport();
        void MulticastReselectSport();
        void SpawnRematchMenu();
        void RematchChoiceMenu(int32_t ID);
        void DisconnectPauseEvent();
        void MatchBeginning();
        void OnNetworkFailure();
        void TrySpawnNetworkFailureMenu();
        void SpawnNetworkFailureMenu();
        void NetworkFailureTravelCapsuleClosed();
        void GamePaused();
        void GameUnpaused();
        void OnRemoteAvatarUnselected();
        void ExitConfirmResult(int32_t ID);
        void WaitinForHostMessageReady();
        void QuitSelectedPauseMenu();
        void OverrideHostReady(bool Ready);
        void OverrideClientReady(bool Ready);
        void RemotePlayerReadyAgain();
        void QuitViaPause();
        void ResetFromPauseMenu();
        void SendClientExpectedState(OnlineGameHandlerClientStates::EOnlineGameHandlerClientStates ExpectedClientState);
        void SendHostExpectedState(OnlineGameHandlerClientStates::EOnlineGameHandlerClientStates ExpectedClientState);
        void RequestHostExpectedState();
        void RequestClientExpected();
        void SportOptionsSelectedClientOnly(SportsScramble::EScramSport Sport, bool BBHostIsHomeTeam);
        void RequestSportOptionsSelected();
        void ForfeitResults();
        void SpawnChooseSport();
        void InitialMessageDisplayed();
        void ShowConnctionMessage();
        void NetworkFailureExit(int32_t ButtonId);
        void SpawnNetworkFailure();
        void PlayForfeitMusic();
        void MatchBeginTravelCapsuleOpened();
        void ServerReady();
        void Multi_Initialize();
        void BackToChooseSport(int32_t ButtonId);
        void StartTravel();
        void SetClientCanTravel();
        void BeginMatch();
        void SetClientCanBeginMatch();
        void Multi_BeginMatchOpenCapsule();
        void ExecuteUbergraph_GameHandlerOnline(int32_t EntryPoint);
        void ReturnExpectedClientState__DelegateSignature(OnlineGameHandlerClientStates::EOnlineGameHandlerClientStates RemotePlayerExpectedClientState);
        void OldMenuClear__DelegateSignature();
        void MenuOpened__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/GameHandlers/GameHandlerOnline.GameHandlerOnline_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
