#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "BasicTypes_FName.h"
#include "ResultsData_FResultsData.h"
#include "SportsScramble_FScramPlayerPreferences.h"
#include "GameHandlerBase_AGameHandlerBase_C.h"
#include "PnpGameType_ENUMS.h"
#include "BasicTypes_UScriptDelegate.h"
#include "UI_LeftArrowButtons_ENUMS.h"
#include "UI_RightArrowButtons_ENUMS.h"
#include "BasicTypes_FText.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::Engine { class AActor; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::Button_Standard { class AButton_Standard_C; };
namespace CG::Header { class AHeader_C; };
namespace CG::Menu_EnterName { class AMenu_EnterName_C; };
namespace CG::ScramPlayer_BP { class AScramPlayer_BP_C; };
namespace CG::Menu_PnpPreferences { class AMenu_PnpPreferences_C; };
namespace CG::Menu_ScoreList { class AMenu_ScoreList_C; };
namespace CG::Menu_ResultsScore { class AMenu_ResultsScore_C; };
namespace CG::Menu_PnpReadyPlayer { class AMenu_PnpReadyPlayer_C; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GameHandlerPnp
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/GameHandlers/GameHandlerPnp.GameHandlerPnp_C
     * Size -> 0x012A (FullSize[0x047A] - InheritedSize[0x0350])
     */
    class AGameHandlerPnp_C : public GameHandlerBase::AGameHandlerBase_C
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     RightButtonPosFar;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     RightButtonPos;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     LeftButtonPos;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     LeftButtonPosFar;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     MenuRoot;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     MenuScaleRoot;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     OffsetRoot;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_ScaleMenu_Alpha_3307B7DC42ED1B78460DA6A4CC91B51C; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_ScaleMenu__Direction_3307B7DC42ED1B78460DA6A4CC91B51C; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_ScaleMenu;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::EScramSport                                  Sport;                                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<Engine::AActor*>                          Scoreboards;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              MiniGame;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<Engine::AActor*>                          GameElements;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BasicTypes::UScriptMulticastDelegate                         MenuOpened;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         NewMenuReady;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        Button_Standard::AButton_Standard_C*                         LeftButton;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Button_Standard::AButton_Standard_C*                         RightButton;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::AActor*                                              ActiveMenu;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TournamentMode;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Header::AHeader_C*                                           Header;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ShowResults;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      Round;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::FName                                            ActiveGame;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      CurrentPlayer;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ResultsData::FResultsData                                    MiniGameResults;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Menu_EnterName::AMenu_EnterName_C*                           NameMenu;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramPlayer_BP::AScramPlayer_BP_C*                           Player;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::FScramPlayerPreferences                      OldPreferences;                                          //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Menu_PnpPreferences::AMenu_PnpPreferences_C*                 PreferencesMenu;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      CurrentLeader;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0005[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Menu_ScoreList::AMenu_ScoreList_C*                           ScoreList;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         GameEnding;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         NameEmpty;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void CreateScoreListMenu();
        void CreatePnpPreferencesMenu(PnpGameType::EPnpGameType SetupType, const BasicTypes::UScriptDelegate& Event, Menu_PnpPreferences::AMenu_PnpPreferences_C** Menu);
        void PreferenceSetupNeeded(PnpGameType::EPnpGameType* SetupNeeded);
        void Cleanup();
        void SwapInstrumentHand();
        void UpdatePlayerSettings();
        void ClearScores();
        void CreateResultsScoreMenu(const BasicTypes::UScriptDelegate& Event, Menu_ResultsScore::AMenu_ResultsScore_C** Menu);
        void SpawnMiniGame(const BasicTypes::FName& Game);
        void CreateEnterNameMenu(Menu_EnterName::AMenu_EnterName_C** Menu);
        void NextMenu(const BasicTypes::UScriptDelegate& Event);
        void CreateReadyPlayerMenu(bool PassToPlayer, const BasicTypes::UScriptDelegate& Event, Menu_PnpReadyPlayer::AMenu_PnpReadyPlayer_C** Menu);
        void PrepareNextRound(bool* NewRoundIncoming, bool* GameOver, int32_t* NextPlayer);
        void UpdatePlayerPosition(const BasicTypes::FName& RowName);
        void CheckProperLevel(const BasicTypes::FName& Game, bool* LoadNeeded);
        void InitializePnp();
        void SpawnHeader(bool Results);
        void TypicalNavButtons(UI_LeftArrowButtons::EUI_LeftArrowButtons LeftButton, UI_RightArrowButtons::EUI_RightArrowButtons RightButton, bool WideSpacing, const BasicTypes::UScriptDelegate& LeftEvent, const BasicTypes::UScriptDelegate& RightEvent);
        void CreateNavButtons(bool Left, bool Right, bool WideSpacing, const BasicTypes::FText& LeftButtonText, const BasicTypes::FText& RightButtonText, const BasicTypes::UScriptDelegate& LeftEvent, const BasicTypes::UScriptDelegate& RightEvent);
        void DestroyOldMenu();
        void DisableActiveMenuInput();
        void EnableActiveMenuInput();
        void SetupBaseball();
        void SetupBowling();
        void Shutdown();
        void SetupTennis();
        void UserConstructionScript();
        void Timeline_ScaleMenu__FinishedFunc();
        void Timeline_ScaleMenu__UpdateFunc();
        void SpawnFirstMenu();
        void ScaleDownMenu();
        void HeaderDestroyed(Engine::AActor* DestroyedActor);
        void ScaleUpMenu();
        void ButtonPressed(int32_t ID);
        void RecenterPlayer();
        void MenuInitComplete();
        void TravelCapsuleReady();
        void NewRoundBegin();
        void EnterPlayerName();
        void ChangeLevel(const BasicTypes::FName& Game);
        void LevelREady(const BasicTypes::FName& NewGeoLevel);
        void GetNextPlayerReady();
        void NextPlayerReady(int32_t ID);
        void EnterNameMenuReady();
        void CloseMenu(int32_t ID);
        void StartMiniGame();
        void MiniGameDestroyed(Engine::AActor* DestroyedActor);
        void MiniGameComplete(const ResultsData::FResultsData& Results);
        void BeginResults();
        void EnterNameComplete(int32_t ButtonId);
        void GetReady();
        void ShowScoreDisplayNavButtons();
        void ShowScoreList();
        void PnpComplete();
        void ReceiveBeginPlay();
        void ScoreDisplayCompleted(int32_t ButtonId);
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void SetPreferences();
        void ReenableNavButtons(int32_t ID);
        void PnpPreferencesOpen();
        void PnpPreferencesSet(int32_t ButtonId);
        void ThrowingHandOpen();
        void ThrowingHandDone(int32_t ButtonId);
        void CheckThrowing();
        void CheckBatting();
        void BattingOpen();
        void BattingComplete(int32_t ButtonId);
        void HandSwapNeeded();
        void ScoreListReady();
        void ScoreListComplete(int32_t ButtonId);
        void StringUpdated(bool Empty);
        void ExecuteUbergraph_GameHandlerPnp(int32_t EntryPoint);
        void NewMenuReady__DelegateSignature();
        void MenuOpened__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/GameHandlers/GameHandlerPnp.GameHandlerPnp_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
