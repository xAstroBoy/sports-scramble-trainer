#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "GameplayTags_FGameplayTag.h"
#include "BasicTypes_FString.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::GameplayTags
{
    /**
     * ScriptStruct /Script/GameplayTags.GameplayTagQuery
     * Size -> 0x0048
     */
    struct FGameplayTagQuery
    {
    public:
        int32_t                                                      TokenStreamVersion;                                      //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<GameplayTags::FGameplayTag>               TagDictionary;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<uint8_t>                                  QueryTokenStream;                                        //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          UserDescription;                                         //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::FString                                          AutoDescription;                                         //  ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
