#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "CoreUObject_FTransform.h"
#include "DebugButtonInfo_FDebugButtonInfo.h"
#include "CoreUObject_FVector.h"
#include "SportsScramble_FScramTrajectoryRegion.h"
#include "CoreUObject_FBox.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_FMinMaxAngle.h"
#include "SportsScramble_AScramSportManagerBaseball.h"
#include "BB_ScoreboardVideos_ENUMS.h"
#include "BasicTypes_UScriptDelegate.h"
#include "SportsScramble_ENUMS.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class AActor; };
namespace CG::BB_Strikezone { class ABB_Strikezone_C; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::BB_Equipment_Set { class ABB_Equipment_Set_C; };
namespace CG::DebugButtonGroup { class ADebugButtonGroup_C; };
namespace CG::Engine { class UMaterialInstance; };
namespace CG::BaseballAIFielder_Blueprint { class ABaseballAIFielder_Blueprint_C; };
namespace CG::BaseballAICatcher_Blueprint { class ABaseballAICatcher_Blueprint_C; };
namespace CG::ManagerBaseball_LocalHelper { class AManagerBaseball_LocalHelper_C; };
namespace CG::StandLocationIndicator { class AStandLocationIndicator_C; };
namespace CG::Engine { class USoundBase; };
namespace CG::PauseBubble { class APauseBubble_C; };
namespace CG::BB_PitchingPropManager { class ABB_PitchingPropManager_C; };
namespace CG::BB_PlayByPlay { class ABB_PlayByPlay_C; };
namespace CG::BB_BatterToPitcherInfluencer_BP { class ABB_BatterToPitcherInfluencer_BP_C; };
namespace CG::BB_LogoPopup { class ABB_LogoPopup_C; };
namespace CG::BB_BallLauncher { class ABB_BallLauncher_C; };
namespace CG::BB_Challenge_01_HRD { class ABB_Challenge_01_HRD_C; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::SportsScramble { class AScramInstrument; };
namespace CG::SportsScramble { class AScramBaseballRunnerAI; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::HRD_Challenge_Manager
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Sports/Baseball/HRD_Challenge_Manager.HRD_Challenge_Manager_C
     * Size -> 0x0391 (FullSize[0x0A51] - InheritedSize[0x06C0])
     */
    class AHRD_Challenge_Manager_C : public SportsScramble::AScramSportManagerBaseball
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::USceneComponent*                                     LaunchTarget;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLocRF;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLocSS;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLocCF;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLocC;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLocLF;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FielderLoc1B;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioOrgan;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     OutfieldLocusLoc;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     RunnerHomeLoc;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     ThirdBaseLoc;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     SecondBaseLoc;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     FirstBaseLoc;                                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     RunnerSpawnLoc;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     InfieldEdgeMarker;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     DoubleTripleMarker;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     OutfieldFenceEdge;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     OutfieldFenceCenter;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BatterLoc;                                               //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     PitcherLoc;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<Engine::AActor*>                          GameElements;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BB_Strikezone::ABB_Strikezone_C*                             strikeZone;                                              //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_Equipment_Set::ABB_Equipment_Set_C*                       EquipmentSet;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      MaxOuts;                                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Outs;                                                    //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FTransform                                      PitchingLocation;                                        //  Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor
        BasicTypes::TArray<DebugButtonInfo::FDebugButtonInfo>        StartPosButtons;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
        DebugButtonGroup::ADebugButtonGroup_C*                       StartChoiceMenu;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PlayerTotalScore;                                        //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      HomerunTotal;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      CurrentInning;                                           //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      MaxInnings;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PointsForSingle;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PointsForDouble;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PointsForTriple;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      PointsForHomeRun;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TopOfTheInning;                                          //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      PitcherPointsStrike;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::UMaterialInstance*                                   AwayTeamMaterial;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::UMaterialInstance*                                   HomeTeamMaterial;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BaseballAIFielder_Blueprint::ABaseballAIFielder_Blueprint_C*> FielderList;                                             //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        BaseballAICatcher_Blueprint::ABaseballAICatcher_Blueprint_C* CatcherActor;                                            //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ManagerBaseball_LocalHelper::AManagerBaseball_LocalHelper_C* LocalHelper;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        SwitchSidesMessageDuration;                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         StrikeRegistered;                                        //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         BallLocation;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         WaitForScoreboardVideo;                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         WaitForRunners;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        OrganFadeOuttime;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        StandLocationIndicator::AStandLocationIndicator_C*           BattersBoxIndicator;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        SportsScramble::FScramTrajectoryRegion                       PlayerBatterStrikezone;                                  //  Edit, BlueprintVisible, NoDestructor
        SportsScramble::FScramTrajectoryRegion                       AIBatterStrikezone;                                      //  Edit, BlueprintVisible, NoDestructor
        bool                                                         AIPlayerEnabled;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        bool                                                         FirstPitchOfInning;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0004[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      PitchTargetScoreAmount;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      OutfieldTargetScoreAmt;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         DebugBallsSetting;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         BattingTeePosition;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0006[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          SFX_BatBreak;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         BatBroken;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         PlayerInPosition;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0007[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<DebugButtonInfo::FDebugButtonInfo>        ScrambleMenu;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference
        DebugButtonGroup::ADebugButtonGroup_C*                       ScrambleMenuChoice;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         BallInPlay;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0008[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PauseBubble::APauseBubble_C*                                 PauseBubbleActor;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FBox                                            PitchingMinArea;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        CoreUObject::FBox                                            PitchingMaxArea;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        BB_PitchingPropManager::ABB_PitchingPropManager_C*           PitchingPropManager;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BB_PlayByPlay::ABB_PlayByPlay_C*                             PlayByPlay;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Strikes;                                                 //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      StrikeoutCount;                                          //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ShouldResetCount;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0009[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BB_BatterToPitcherInfluencer_BP::ABB_BatterToPitcherInfluencer_BP_C* BatterToPitcherInfluencer;                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         GameCompleted;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        SportsScramble::FMinMaxAngle                                 OutfielderCFMovementRange;                               //  Edit, BlueprintVisible, NoDestructor
        SportsScramble::FMinMaxAngle                                 OurfielderRFMovementRange;                               //  Edit, BlueprintVisible, NoDestructor
        SportsScramble::FMinMaxAngle                                 OutfielderLFMovementRange;                               //  Edit, BlueprintVisible, NoDestructor
        BB_LogoPopup::ABB_LogoPopup_C*                               LogoPopup;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         BasesLoaded;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0010[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BB_BallLauncher::ABB_BallLauncher_C*                         BallLauncher;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        LaunchDelay;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0011[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         TeleportComplete;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         GameRunning;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0012[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BB_Challenge_01_HRD::ABB_Challenge_01_HRD_C*                 ChallengeMaster;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         PlayerScoredRun;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         PlayerHitHomerun;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         RunnersReady;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         ChallengeEnded;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void FinalizeChallengeScore(int32_t* RunnersYetToScore);
        void TryLaunchBall();
        void UpdateLauncherSpeed(float* MinSpeed, float* MaxSpeed);
        void UpdateScoreboardNames();
        void SpawnLogoPopup();
        void PlayScoreboardVideo(BB_ScoreboardVideos::EBB_ScoreboardVideos Animation);
        void SetGameSettings();
        void HideIndicators();
        void GetBattingMaterial(Engine::UMaterialInstance** Material);
        void GetFieldingMaterial(Engine::UMaterialInstance** Material);
        void RunnerScores();
        void GetWinningPlayer(int32_t* WinnerInt);
        void EndGameCleanUp();
        void SpawnLocalHelper();
        void ToggleTeamColors();
        void SpawnTeamActors(bool FieldersOnly);
        void SetupScoreboards(int32_t BallsCount, int32_t StrikesCount);
        void CleanUpGameElements();
        void PitcherScoring(int32_t score);
        void BatterScoring(int32_t ScoreAmount);
        void TeleportPlayer(const BasicTypes::UScriptDelegate& TransitionReady, const BasicTypes::UScriptDelegate& TransitionComplete, bool UseTransitionDuration);
        void Initialize();
        void SpawnAndSetEquipment(SportsScramble::AScramBall* BallClass, SportsScramble::AScramInstrument* InstrumentClass);
        void SpawnAiPitcher(Engine::AActor** PitcherActor);
        void UserConstructionScript();
        void BaseballEvent(SportsScramble::EBaseballEvent BaseballEvent, const CoreUObject::FVector& Location);
        void ReceiveBeginPlay();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void LocalHelperMessageComplete();
        void OnRunnerSpawned(SportsScramble::AScramBaseballRunnerAI* runner);
        void CheckForPlayerBattingPosition();
        void PlayerBatterReady();
        void BeginGame();
        void UpdateGameScore(int32_t NewP1TotalScore, int32_t NewP2TotalScore);
        void Single();
        void Double();
        void Triple();
        void HomeRun(bool BasesLoaded);
        void RegisterCatch();
        void RegisterFoul();
        void UpdateRunners(bool NewRunnerOnFirst, bool NewRunnerOnSecond, bool NewRunnerOnThird);
        void ShowPauseInfo(bool IsPaused, bool WasPausedByMe);
        void ShowPauseBubble(bool IsPaused);
        void OnGameResume(bool WasPausedByMe);
        void OnGamePause(bool WasPausedByMe);
        void SpawnInitialActors();
        void NetSetupScoreboards(int32_t BallsCount, int32_t StrikesCount);
        void NetDisplayPopup();
        void EndGame(float ScoreDelay);
        void GameRunLoop();
        void ExecuteUbergraph_HRD_Challenge_Manager(int32_t EntryPoint);
        void RunnersReady__DelegateSignature();
        void PlayerHitHomerun__DelegateSignature();
        void PlayerScoredRun__DelegateSignature();
        void TeleportComplete__DelegateSignature();
        void GameCompleted__DelegateSignature(int32_t PlayerScore, int32_t HomeRunCount);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Sports/Baseball/HRD_Challenge_Manager.HRD_Challenge_Manager_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
