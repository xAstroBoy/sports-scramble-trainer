#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "Engine_UBlueprintAsyncActionBase.h"
#include "BasicTypes_FName.h"
#include "CoreUObject_FTransform.h"
#include "HeadMountedDisplay_FXRDeviceId.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::Engine { class AActor; };
namespace CG::HeadMountedDisplay { class UAsyncTask_LoadXRDeviceVisComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::HeadMountedDisplay
{
    /**
     * Class /Script/HeadMountedDisplay.AsyncTask_LoadXRDeviceVisComponent
     * Size -> 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
     */
    class UAsyncTask_LoadXRDeviceVisComponent : public Engine::UBlueprintAsyncActionBase
    {
    public:
        BasicTypes::UScriptMulticastDelegate                         OnModelLoaded;                                           //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnLoadFailure;                                           //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UPrimitiveComponent*                                 SpawnedComponent;                                        //  ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

    public:
        HeadMountedDisplay::UAsyncTask_LoadXRDeviceVisComponent* STATIC_AddNamedDeviceVisualizationComponentAsync(Engine::AActor* Target, const BasicTypes::FName& SystemName, const BasicTypes::FName& DeviceName, bool bManualAttachment, const CoreUObject::FTransform& RelativeTransform, HeadMountedDisplay::FXRDeviceId* XRDeviceId, Engine::UPrimitiveComponent** NewComponent);
        HeadMountedDisplay::UAsyncTask_LoadXRDeviceVisComponent* STATIC_AddDeviceVisualizationComponentAsync(Engine::AActor* Target, const HeadMountedDisplay::FXRDeviceId& XRDeviceId, bool bManualAttachment, const CoreUObject::FTransform& RelativeTransform, Engine::UPrimitiveComponent** NewComponent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/HeadMountedDisplay.AsyncTask_LoadXRDeviceVisComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
