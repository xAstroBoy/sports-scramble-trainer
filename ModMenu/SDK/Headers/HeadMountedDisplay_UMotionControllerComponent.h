#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "InputCore_ENUMS.h"
#include "BasicTypes_FName.h"
#include "HeadMountedDisplay_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "Engine_UPrimitiveComponent.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::HeadMountedDisplay
{
    /**
     * Class /Script/HeadMountedDisplay.MotionControllerComponent
     * Size -> 0x00C0 (FullSize[0x0620] - InheritedSize[0x0560])
     */
    class UMotionControllerComponent : public Engine::UPrimitiveComponent
    {
    public:
        int32_t                                                      PlayerIndex;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        InputCore::EControllerHand                                   Hand;                                                    //  BlueprintVisible, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            MotionSource;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDisableLowLatencyUpdate : 1;                            //  BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        HeadMountedDisplay::ETrackingStatus                          CurrentTrackingStatus;                                   //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bDisplayDeviceModel;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FName                                            DisplayModelSource;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UStaticMesh*                                         CustomDisplayMesh;                                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::TArray<Engine::UMaterialInterface*>              DisplayMeshMaterialOverrides;                            //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x68];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UPrimitiveComponent*                                 DisplayComponent;                                        //  BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetTrackingSource(InputCore::EControllerHand NewSource);
        void SetTrackingMotionSource(const BasicTypes::FName& NewSource);
        void SetShowDeviceModel(bool bShowControllerModel);
        void SetDisplayModelSource(const BasicTypes::FName& NewDisplayModelSource);
        void SetCustomDisplayMesh(Engine::UStaticMesh* NewDisplayMesh);
        void SetAssociatedPlayerIndex(int32_t NewPlayer);
        void OnMotionControllerUpdated();
        bool IsTracked();
        InputCore::EControllerHand GetTrackingSource();
        float GetParameterValue(const BasicTypes::FName& InName, bool* bValueFound);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/HeadMountedDisplay.MotionControllerComponent");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
