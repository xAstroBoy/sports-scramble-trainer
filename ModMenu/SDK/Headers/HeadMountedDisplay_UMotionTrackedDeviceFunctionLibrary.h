#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_UBlueprintFunctionLibrary.h"
#include "BasicTypes_FName.h"
#include "InputCore_ENUMS.h"
#include "BasicTypes_TArray.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::HeadMountedDisplay { class UMotionControllerComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::HeadMountedDisplay
{
    /**
     * Class /Script/HeadMountedDisplay.MotionTrackedDeviceFunctionLibrary
     * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
     */
    class UMotionTrackedDeviceFunctionLibrary : public Engine::UBlueprintFunctionLibrary
    {
    public:
        void STATIC_SetIsControllerMotionTrackingEnabledByDefault(bool Enable);
        bool STATIC_IsMotionTrackingEnabledForSource(int32_t PlayerIndex, const BasicTypes::FName& SourceName);
        bool STATIC_IsMotionTrackingEnabledForDevice(int32_t PlayerIndex, InputCore::EControllerHand Hand);
        bool STATIC_IsMotionTrackingEnabledForComponent(HeadMountedDisplay::UMotionControllerComponent* MotionControllerComponent);
        bool STATIC_IsMotionTrackedDeviceCountManagementNecessary();
        bool STATIC_IsMotionSourceTracking(int32_t PlayerIndex, const BasicTypes::FName& SourceName);
        int32_t STATIC_GetMotionTrackingEnabledControllerCount();
        int32_t STATIC_GetMaximumMotionTrackedControllerCount();
        BasicTypes::FName STATIC_GetActiveTrackingSystemName();
        BasicTypes::TArray<BasicTypes::FName> STATIC_EnumerateMotionSources();
        bool STATIC_EnableMotionTrackingOfSource(int32_t PlayerIndex, const BasicTypes::FName& SourceName);
        bool STATIC_EnableMotionTrackingOfDevice(int32_t PlayerIndex, InputCore::EControllerHand Hand);
        bool STATIC_EnableMotionTrackingForComponent(HeadMountedDisplay::UMotionControllerComponent* MotionControllerComponent);
        void STATIC_DisableMotionTrackingOfSource(int32_t PlayerIndex, const BasicTypes::FName& SourceName);
        void STATIC_DisableMotionTrackingOfDevice(int32_t PlayerIndex, InputCore::EControllerHand Hand);
        void STATIC_DisableMotionTrackingOfControllersForPlayer(int32_t PlayerIndex);
        void STATIC_DisableMotionTrackingOfAllControllers();
        void STATIC_DisableMotionTrackingForComponent(HeadMountedDisplay::UMotionControllerComponent* MotionControllerComponent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/HeadMountedDisplay.MotionTrackedDeviceFunctionLibrary");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
