#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_AScramLauncher.h"
#include "SportsScramble_FScramTrajectory.h"
#include "InputCore_FKey.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class UParticleSystem; };
namespace CG::Engine { class USoundBase; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::Launcher_Base
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Launchers/Launcher_Base.Launcher_Base_C
     * Size -> 0x00B8 (FullSize[0x0530] - InheritedSize[0x0478])
     */
    class ALauncher_Base_C : public SportsScramble::AScramLauncher
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     LauncherXYMovementAudio;                                 //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     LauncherHeadPitchAudio;                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     LaucherHeadRotationAudio;                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     LauncherNeckRaiseAudio;                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     LauncherDespawnAudio;                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     LauncherSpawnAudio;                                      //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        bool                                                         DebugLoop;                                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        bool                                                         DebugInputA;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        bool                                                         DebugInputB;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        bool                                                         DebugInputX;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        bool                                                         DebugInputY;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DebugLoopDelay;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         DebugAutoStart;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UParticleSystem*                                     SpawnVFX;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0002[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      SpawnVFXOffset;                                          //  Edit, BlueprintVisible, IsPlainOldData, NoDestructor
        Engine::USoundBase*                                          SpawnSFX;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         BallLaunched;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         UseGlobalBallType;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        horizontalVariance;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        verticalVariance;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         MakeBallsGrabbable;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::AScramBall*                                  NewBallClass;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void LaunchBallWithTrajectory(const SportsScramble::FScramTrajectory& trajectory);
        void UpdateBallType();
        void CreateSpawnSFX();
        void CreateSpawnVFX();
        void LaunchBall();
        void UserConstructionScript();
        void InpActEvt_X_K2Node_InputActionEvent_4(const InputCore::FKey& Key);
        void InpActEvt_Y_K2Node_InputActionEvent_3(const InputCore::FKey& Key);
        void InpActEvt_A_K2Node_InputActionEvent_2(const InputCore::FKey& Key);
        void InpActEvt_B_K2Node_InputActionEvent_1(const InputCore::FKey& Key);
        void ReceiveBeginPlay();
        void BeginLooping(float LoopDelay);
        void StopLooping();
        void ExecuteUbergraph_Launcher_Base(int32_t EntryPoint);
        void BallLaunched__DelegateSignature(Engine::AActor* Ball);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Launchers/Launcher_Base.Launcher_Base_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
