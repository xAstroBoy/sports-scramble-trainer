#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "CoreUObject_FVector.h"
#include "SportsScramble_AScramActor.h"
#include "Engine_FHitResult.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::SportsScramble { class UInstancedMesh; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class UBoxComponent; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::Engine { class USoundBase; };
namespace CG::BowlingLane_Base { class ABowlingLane_Base_C; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MoleTarget
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/Lanes/ChildActors/MoleTarget.MoleTarget_C
     * Size -> 0x0088 (FullSize[0x03D0] - InheritedSize[0x0348])
     */
    class AMoleTarget_C : public SportsScramble::AScramActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        SportsScramble::UInstancedMesh*                              InstancedMesh;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioLower;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UBoxComponent*                                       OverlapDetection;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioUpDown;                                             //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                StaticMesh_Mole;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     DefaultSceneRoot;                                        //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        UpDown_Alpha_B5D2E1B94D5809F90738C798F878CB40;           //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   UpDown__Direction_B5D2E1B94D5809F90738C798F878CB40;      //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  upDown;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      ScoreAmount;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          HitSound;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         HoleNormalSize;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         MoleRaisedPosition;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        CoreUObject::FVector                                         MoleLoweredPosition;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         TargetEnabled;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor
        bool                                                         Player1;                                                 //  Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        bool                                                         RandomBool;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x1];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BowlingLane_Base::ABowlingLane_Base_C*                       Lane;                                                    //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash

    public:
        void Exploded(Engine::AActor* Instigator, const CoreUObject::FVector& LinearImpulse, const CoreUObject::FVector& AngularImpulse, bool VelChange, bool* Valid);
        void Initialize();
        void UserConstructionScript();
        void UpDown__FinishedFunc();
        void UpDown__UpdateFunc();
        void ReceiveBeginPlay();
        void RaiseUp();
        void LowerDown(bool PlaySound);
        void DisableTarget();
        void BndEvt__OverlapDetection_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(Engine::UPrimitiveComponent* OverlappedComponent, Engine::AActor* OtherActor, Engine::UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const Engine::FHitResult& SweepResult);
        void ResetOverlap();
        void PlayRaiseAudio();
        void SetMoleVisibility(bool bNewVisibility);
        void Local_Break(Engine::AActor* Instigator);
        void UpdatePlayRate(float NewPlayRate);
        void LR_Break(Engine::AActor* Instigator);
        void PlayLowerAudio();
        void InstantLower();
        void Multi_Break(Engine::AActor* Instigator);
        void Server_Break(Engine::AActor* Instigator);
        void ExecuteUbergraph_MoleTarget(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/Lanes/ChildActors/MoleTarget.MoleTarget_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
