#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FSoftClassPath.h"
#include "MovieSceneCapture_FMovieSceneCaptureSettings.h"
#include "BasicTypes_FString.h"
#include "CoreUObject_UObject.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::MovieSceneCapture { class UMovieSceneImageCaptureProtocolBase; };
namespace CG::MovieSceneCapture { class UMovieSceneAudioCaptureProtocolBase; };
namespace CG::MovieSceneCapture { class UMovieSceneCaptureProtocolBase; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::MovieSceneCapture
{
    /**
     * Class /Script/MovieSceneCapture.MovieSceneCapture
     * Size -> 0x01C8 (FullSize[0x01F0] - InheritedSize[0x0028])
     */
    class UMovieSceneCapture : public CoreUObject::UObject
    {
    public:
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FSoftClassPath                                  ImageCaptureProtocolType;                                //  Edit, ZeroConstructor, Config, NoClear, NativeAccessSpecifierPublic
        CoreUObject::FSoftClassPath                                  AudioCaptureProtocolType;                                //  Edit, ZeroConstructor, Config, NoClear, NativeAccessSpecifierPublic
        MovieSceneCapture::UMovieSceneImageCaptureProtocolBase*      ImageCaptureProtocol;                                    //  Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
        MovieSceneCapture::UMovieSceneAudioCaptureProtocolBase*      AudioCaptureProtocol;                                    //  Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
        MovieSceneCapture::FMovieSceneCaptureSettings                Settings;                                                //  Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic
        bool                                                         bUseSeparateProcess;                                     //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bCloseEditorWhenCaptureStarts;                           //  Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FString                                          AdditionalCommandLineArguments;                          //  Edit, BlueprintVisible, ZeroConstructor, Config, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FString                                          InheritedCommandLineArguments;                           //  Edit, BlueprintVisible, ZeroConstructor, Transient, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x100];                                 //  MISSED OFFSET (PADDING)

    public:
        void SetImageCaptureProtocolType(MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType);
        void SetAudioCaptureProtocolType(MovieSceneCapture::UMovieSceneCaptureProtocolBase* ProtocolType);
        MovieSceneCapture::UMovieSceneCaptureProtocolBase* GetImageCaptureProtocol();
        MovieSceneCapture::UMovieSceneCaptureProtocolBase* GetAudioCaptureProtocol();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/MovieSceneCapture.MovieSceneCapture");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
