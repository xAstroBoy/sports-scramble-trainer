#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "OculusMR_FOculusMR_PlaneMeshTriangle.h"
#include "OculusMR_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::OculusMR { class UOculusMR_Settings; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::OculusMR
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_PlaneMeshComponent_SetCustomMeshTriangles_Params
    {
    public:
        BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle>    Triangles;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_PlaneMeshComponent_ClearCustomMeshTriangles_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_PlaneMeshComponent_AddCustomMeshTriangles_Params
    {
    public:
        BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle>    Triangles;                                               //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SetUseDynamicLighting_Params
    {
    public:
        bool                                                         val;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SetIsCasting_Params
    {
    public:
        bool                                                         val;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SetDepthQuality_Params
    {
    public:
        OculusMR::EOculusMR_DepthQuality                             val;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SetCompositionMethod_Params
    {
    public:
        OculusMR::EOculusMR_CompositionMethod                        val;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SetCapturingCamera_Params
    {
    public:
        OculusMR::EOculusMR_CameraDeviceEnum                         val;                                                     //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_SaveToIni_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_LoadFromIni_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetUseDynamicLighting_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetIsCasting_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetDepthQuality_Params
    {
    public:
        OculusMR::EOculusMR_DepthQuality                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetCompositionMethod_Params
    {
    public:
        OculusMR::EOculusMR_CompositionMethod                        ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetCapturingCamera_Params
    {
    public:
        OculusMR::EOculusMR_CameraDeviceEnum                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_GetBindToTrackedCameraIndex_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMR_Settings_BindToTrackedCameraIndexIfAvailable_Params
    {
    public:
        int32_t                                                      InTrackedCameraIndex;                                    //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMRFunctionLibrary_SetTrackingReferenceComponent_Params
    {
    public:
        Engine::USceneComponent*                                     Component;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMRFunctionLibrary_GetTrackingReferenceComponent_Params
    {
    public:
        Engine::USceneComponent*                                     ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UOculusMRFunctionLibrary_GetOculusMRSettings_Params
    {
    public:
        OculusMR::UOculusMR_Settings*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
