#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "Engine_UOnlineBlueprintCallProxyBase.h"
#include "OnlineSubsystemUtils_FBlueprintSessionResult.h"
#include "BasicTypes_FString.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class APlayerController; };
namespace CG::OnlineSubsystemUtils { class UFindSessionsCallbackProxy; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::OnlineSubsystemUtils
{
    /**
     * Class /Script/OnlineSubsystemUtils.FindSessionsCallbackProxy
     * Size -> 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
     */
    class UFindSessionsCallbackProxy : public Engine::UOnlineBlueprintCallProxyBase
    {
    public:
        BasicTypes::UScriptMulticastDelegate                         OnSuccess;                                               //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnFailure;                                               //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x40];                                  //  MISSED OFFSET (PADDING)

    public:
        BasicTypes::FString STATIC_GetServerName(const OnlineSubsystemUtils::FBlueprintSessionResult& Result);
        int32_t STATIC_GetPingInMs(const OnlineSubsystemUtils::FBlueprintSessionResult& Result);
        int32_t STATIC_GetMaxPlayers(const OnlineSubsystemUtils::FBlueprintSessionResult& Result);
        int32_t STATIC_GetCurrentPlayers(const OnlineSubsystemUtils::FBlueprintSessionResult& Result);
        OnlineSubsystemUtils::UFindSessionsCallbackProxy* STATIC_FindSessions(CoreUObject::UObject* WorldContextObject, Engine::APlayerController* PlayerController, int32_t MaxResults, bool bUseLAN);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/OnlineSubsystemUtils.FindSessionsCallbackProxy");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
