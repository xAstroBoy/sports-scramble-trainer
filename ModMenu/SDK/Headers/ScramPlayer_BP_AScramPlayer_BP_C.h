#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "CoreUObject_FTransform.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_AScramPlayer.h"
#include "SportsScramble_FCommonPlayerPreferences.h"
#include "SportsScramble_FBowlingPlayerPreferences.h"
#include "SportsScramble_FBaseballBatterPreferences.h"
#include "SportsScramble_FBaseballPitcherPreferences.h"
#include "SportsScramble_FTennisPlayerPreferences.h"
#include "InputCore_FKey.h"
#include "SportsScramble_FAvatarLook.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UTimelineComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::StandLocationIndicator { class AStandLocationIndicator_C; };
namespace CG::SportsScramble { class UScramSaveData; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ScramPlayer_BP
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/ScramPlayer_BP.ScramPlayer_BP_C
     * Size -> 0x0118 (FullSize[0x0A98] - InheritedSize[0x0980])
     */
    class AScramPlayer_BP_C : public SportsScramble::AScramPlayer
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        float                                                        Timeline_Fade_Alpha_224CBD364A8D6ECA75A271AA329BF531;    //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_Fade__Direction_224CBD364A8D6ECA75A271AA329BF531; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_Fade;                                           //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Buttons;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FTransform                                      SpawnAnchor_Temp;                                        //  Edit, BlueprintVisible, IsPlainOldData, NoDestructor
        bool                                                         BigMode;                                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        Speed;                                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         PlayerFadedOut;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         FadeInDisabled;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         FadedOut;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         ReenablePause;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0003[0x5];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        StandLocationIndicator::AStandLocationIndicator_C*           ReturnIndicator_1;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         PlayerExitBoundary;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         PlayerEnterBoundary;                                     //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::FString                                          VoicePermissionString;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash
        bool                                                         SlomoMode;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0004[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<float>                                    SlomoOptionsFast;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BasicTypes::TArray<float>                                    SlomoOptionsSlow;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        int32_t                                                      SlomoFastIndex;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      SlomoSlowIndex;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         SlomoReset;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0005[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::UScramSaveData*                              SaveData;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         RemotePlayerReady;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BasicTypes::UScriptMulticastDelegate                         PlayerRecentered;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        Engine::AActor*                                              ActiveButtonActor;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void Cleanup();
        void SlomoDecrement(int32_t* Index, BasicTypes::TArray<float> Array);
        void SlomoIncrement(int32_t* Index, BasicTypes::TArray<float> Array);
        void Slomo(float Scale);
        void SetDefaults();
        void SetCommonPreferences(const SportsScramble::FCommonPlayerPreferences& preferences);
        void GetCommonPreferences(SportsScramble::FCommonPlayerPreferences* preferences);
        void SetBowlingPreferences(const SportsScramble::FBowlingPlayerPreferences& preferences);
        void SetBaseballBatterPreferences(const SportsScramble::FBaseballBatterPreferences& preferences);
        void SetBaseballPitcherPreferences(const SportsScramble::FBaseballPitcherPreferences& preferences);
        void SetTennisPreferences(const SportsScramble::FTennisPlayerPreferences& preferences);
        void GetBowlingPreferences(SportsScramble::FBowlingPlayerPreferences* preferences);
        void GetBaseballBatterPreferences(SportsScramble::FBaseballBatterPreferences* preferences);
        void GetBaseballPitcherPreferences(SportsScramble::FBaseballPitcherPreferences* preferences);
        void GetTennisPreferences(SportsScramble::FTennisPlayerPreferences* preferences);
        void Initialize();
        void SetPlayerVisibility(bool visible);
        void UserConstructionScript();
        void Timeline_Fade__FinishedFunc();
        void Timeline_Fade__UpdateFunc();
        void InpActEvt_RightGripTrigger_K2Node_InputActionEvent_7(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_K2Node_InputKeyEvent_8(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_K2Node_InputKeyEvent_7(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Left_Thumbstick_K2Node_InputKeyEvent_6(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Left_Thumbstick_K2Node_InputKeyEvent_5(const InputCore::FKey& Key);
        void InpActEvt_X_K2Node_InputActionEvent_6(const InputCore::FKey& Key);
        void InpActEvt_X_K2Node_InputActionEvent_5(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_Right_K2Node_InputKeyEvent_4(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_Up_K2Node_InputKeyEvent_3(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_Left_K2Node_InputKeyEvent_2(const InputCore::FKey& Key);
        void InpActEvt_MotionController_Right_Thumbstick_Down_K2Node_InputKeyEvent_1(const InputCore::FKey& Key);
        void InpActEvt_Y_K2Node_InputActionEvent_4(const InputCore::FKey& Key);
        void InpActEvt_Y_K2Node_InputActionEvent_3(const InputCore::FKey& Key);
        void InpActEvt_X_K2Node_InputActionEvent_2(const InputCore::FKey& Key);
        void InpActEvt_Y_K2Node_InputActionEvent_1(const InputCore::FKey& Key);
        void ReceiveTick(float DeltaSeconds);
        void ReceiveBeginPlay();
        void FadeToBlack();
        void FadeFromBlack();
        void InitialFadeIn();
        void GrabbedSomething(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void OnPlayerOutOfBoundary(const CoreUObject::FTransform& ReturnTransform);
        void OnPlayerEnterBoundary();
        void PauseGame();
        void ResumeGame();
        void QueuedPlayerOutOfBoundary();
        void QueuedPlayerEnterBoundary();
        void ClientReady(int32_t ID);
        void HostFadeToBlack();
        void SetAvatarMaterials(const SportsScramble::FAvatarLook& AvatarLook);
        void RecenterDetected();
        void TravelCapsuleOpened(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void ExecuteUbergraph_ScramPlayer_BP(int32_t EntryPoint);
        void PlayerRecentered__DelegateSignature();
        void RemotePlayerReady__DelegateSignature(int32_t ID);
        void PlayerEnterBoundary__DelegateSignature();
        void PlayerExitBoundary__DelegateSignature();
        void PlayerFadedOut__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/ScramPlayer_BP.ScramPlayer_BP_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
