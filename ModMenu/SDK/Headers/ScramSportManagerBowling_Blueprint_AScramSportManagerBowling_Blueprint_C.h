#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "BW_ScrambleList_FBW_ScrambleList.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FBowlingFrameSet.h"
#include "GameResult_ENUMS.h"
#include "SportsScramble_AScramSportManagerBowling.h"
#include "SportsScramble_FBowlingScrambleState.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FName.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::ManagerBowling_LocalHelper { class AManagerBowling_LocalHelper_C; };
namespace CG::BW_VideoBoard_Training { class ABW_VideoBoard_Training_C; };
namespace CG::BowlingAlley_BP { class ABowlingAlley_BP_C; };
namespace CG::BW_CenterScoreboard { class ABW_CenterScoreboard_C; };
namespace CG::PauseBubble { class APauseBubble_C; };
namespace CG::BowlingAI_Blueprint { class ABowlingAI_Blueprint_C; };
namespace CG::Countdown { class ACountdown_C; };
namespace CG::BW_ScoreKeeper_BP { class ABW_ScoreKeeper_BP_C; };
namespace CG::Engine { class USoundWave; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ScramSportManagerBowling_Blueprint
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/ScramSportManagerBowling_Blueprint.ScramSportManagerBowling_Blueprint_C
     * Size -> 0x0180 (FullSize[0x0518] - InheritedSize[0x0398])
     */
    class AScramSportManagerBowling_Blueprint_C : public SportsScramble::AScramSportManagerBowling
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     AudioCountdown;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioCrowd;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     AudioMatchMusic;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        bool                                                         DebugBallsSetting;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        ManagerBowling_LocalHelper::AManagerBowling_LocalHelper_C*   LocalHelper;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_VideoBoard_Training::ABW_VideoBoard_Training_C*           VideoBoard;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingAlley_BP::ABowlingAlley_BP_C*                         Alley0;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingAlley_BP::ABowlingAlley_BP_C*                         Alley1;                                                  //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      GamesToWin;                                              //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BW_CenterScoreboard::ABW_CenterScoreboard_C*                 CenterScoreboard;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Game;                                                    //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Round1Length;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Round2Length;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      Round3Length;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      P1GamesWon;                                              //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      P2GamesWon;                                              //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         MatchComplete;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        int32_t                                                      PreviousGameWinner;                                      //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      CountdownSeconds;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         AiVsAi;                                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        bool                                                         PracticeGame;                                            //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        PauseBubble::APauseBubble_C*                                 PauseBubbleActor;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingAI_Blueprint::ABowlingAI_Blueprint_C*                 BowlingAi01;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BowlingAI_Blueprint::ABowlingAI_Blueprint_C*                 BowlingAi02;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Countdown::ACountdown_C*                                     CountdownActor;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BW_ScrambleList::FBW_ScrambleList                            Round1List;                                              //  Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash
        BW_ScrambleList::FBW_ScrambleList                            Round2List;                                              //  Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         BWGameEnd;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        BW_ScoreKeeper_BP::ABW_ScoreKeeper_BP_C*                     ScoreKeeper;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         AllowAI;                                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn
        uint8_t                                                      UnknownData_0003[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        GameTimeRemainig;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::UScriptMulticastDelegate                         GameTimeEnded;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         EndCountdownActivated;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0004[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      StartedGame;                                             //  Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<SportsScramble::FBowlingFrameSet>         ResumedTraditionalFrameSets;                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        GameResult::EGameResult                                      MatchResult;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0005[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      BonusRollCounter;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash

    public:
        void SaveBowlingState(SportsScramble::FBowlingScrambleState* ScrambleState, BasicTypes::TArray<SportsScramble::FBowlingFrameSet>* TraditionalFrameSets);
        void NetUpdateMatchScore();
        void GetRelativeScore(int32_t* RelativeScore);
        void NetHideScoreCards();
        void NetPrepareScoreCards(int32_t NumFrames, int32_t NumPlayers);
        void NetUpdateTraditionalScore(int32_t Player);
        void BuildScoreString(int32_t Player, BasicTypes::FString* Result);
        void FilterLaneTypes(BasicTypes::TArray<BasicTypes::FName>* LanesIn, bool Randomize, BasicTypes::TArray<BasicTypes::FName>* LanesOut);
        void UpdateScrambleLists();
        void SpawnAI(bool Player1);
        void UpdateResults(int32_t Score0, int32_t Score1);
        void GetVideoBoard(BW_VideoBoard_Training::ABW_VideoBoard_Training_C** VideoBoard);
        void Cleanup();
        void Initialize();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void BowlingEvent(int32_t Player, SportsScramble::EBowlingEvent BowlingEvent);
        void PregameStart();
        void MatchStart(float TimeRemaining);
        void BeginGame();
        void EndOfGame();
        void NextGame(int32_t PreviousGameWinner, int32_t Game);
        void MatchOver(GameResult::EGameResult Result);
        void ShowPauseInfo(bool IsPaused, bool WasPausedByMe);
        void ShowPauseBubble(bool IsPaused);
        void OnGameResume(bool WasPausedByMe);
        void OnGamePause(bool WasPausedByMe);
        void Three();
        void Two();
        void EndingHorn();
        void PreTraditionalGameStart(int32_t NumFrames);
        void TraditionalMatchStart();
        void BeginTraditionalGame();
        void EndOfTraditionalGame();
        void TraditionalMatchOver(GameResult::EGameResult Result);
        void UpdateTraditionalScore(int32_t ID, int32_t Pins);
        void TraditionalFrameStart(int32_t Player);
        void TraditionalFrameEnd(int32_t Player, bool isLastFrame);
        void SetGameTimeRemaining(Engine::USoundWave* PlayingSoundWave, float PlaybackPercent);
        void GameOver();
        void SyncTimer(float TimeRemaining);
        void LoadBowlingState(const SportsScramble::FBowlingScrambleState& ScrambleState, BasicTypes::TArray<SportsScramble::FBowlingFrameSet> TraditionalFrameSets);
        void ServerReady();
        void OnGameDone();
        void PlayBonusBallAudio(int32_t ID);
        void EndGameDisablePause();
        void ExecuteUbergraph_ScramSportManagerBowling_Blueprint(int32_t EntryPoint);
        void GameTimeEnded__DelegateSignature();
        void BWGameEnd__DelegateSignature(GameResult::EGameResult MatchResult, int32_t Player1GamesWon, int32_t Player2GamesWon);
        void MatchComplete__DelegateSignature();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Sports/Bowling/ScramSportManagerBowling_Blueprint.ScramSportManagerBowling_Blueprint_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
