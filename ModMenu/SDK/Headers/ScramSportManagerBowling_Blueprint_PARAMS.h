#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FBowlingScrambleState.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FBowlingFrameSet.h"
#include "BasicTypes_FString.h"
#include "BasicTypes_FName.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"
#include "GameResult_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::BW_VideoBoard_Training { class ABW_VideoBoard_Training_C; };
namespace CG::Engine { class USoundWave; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::ScramSportManagerBowling_Blueprint
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_SaveBowlingState_Params
    {
    public:
        SportsScramble::FBowlingScrambleState                        ScrambleState;                                           //  0x0000(0x0080)  (Parm, OutParm)
        BasicTypes::TArray<SportsScramble::FBowlingFrameSet>         TraditionalFrameSets;                                    //  0x0080(0x0010)  (Parm, OutParm, ZeroConstructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_NetUpdateMatchScore_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_GetRelativeScore_Params
    {
    public:
        int32_t                                                      RelativeScore;                                           //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_NetHideScoreCards_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_NetPrepareScoreCards_Params
    {
    public:
        int32_t                                                      NumFrames;                                               //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      NumPlayers;                                              //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_NetUpdateTraditionalScore_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_BuildScoreString_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          Result;                                                  //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_FilterLaneTypes_Params
    {
    public:
        BasicTypes::TArray<BasicTypes::FName>                        LanesIn;                                                 //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
        bool                                                         Randomize;                                               //  0x0010(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<BasicTypes::FName>                        LanesOut;                                                //  0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_UpdateScrambleLists_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_SpawnAI_Params
    {
    public:
        bool                                                         Player1;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_UpdateResults_Params
    {
    public:
        int32_t                                                      Score0;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Score1;                                                  //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_GetVideoBoard_Params
    {
    public:
        BW_VideoBoard_Training::ABW_VideoBoard_Training_C*           VideoBoard;                                              //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_Cleanup_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ReceiveEndPlay_Params
    {
    public:
        Engine::EEndPlayReason                                       EndPlayReason;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_BowlingEvent_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::EBowlingEvent                                BowlingEvent;                                            //  0x0004(0x0001)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_PregameStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_MatchStart_Params
    {
    public:
        float                                                        TimeRemaining;                                           //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_BeginGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_EndOfGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_NextGame_Params
    {
    public:
        int32_t                                                      PreviousGameWinner;                                      //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Game;                                                    //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_MatchOver_Params
    {
    public:
        GameResult::EGameResult                                      Result;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ShowPauseInfo_Params
    {
    public:
        bool                                                         IsPaused;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         WasPausedByMe;                                           //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ShowPauseBubble_Params
    {
    public:
        bool                                                         IsPaused;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_OnGameResume_Params
    {
    public:
        bool                                                         WasPausedByMe;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_OnGamePause_Params
    {
    public:
        bool                                                         WasPausedByMe;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_Three_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_Two_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_EndingHorn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_PreTraditionalGameStart_Params
    {
    public:
        int32_t                                                      NumFrames;                                               //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_TraditionalMatchStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_BeginTraditionalGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_EndOfTraditionalGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_TraditionalMatchOver_Params
    {
    public:
        GameResult::EGameResult                                      Result;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_UpdateTraditionalScore_Params
    {
    public:
        int32_t                                                      ID;                                                      //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Pins;                                                    //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_TraditionalFrameStart_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_TraditionalFrameEnd_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         isLastFrame;                                             //  0x0004(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_SetGameTimeRemaining_Params
    {
    public:
        Engine::USoundWave*                                          PlayingSoundWave;                                        //  0x0000(0x0008)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        PlaybackPercent;                                         //  0x0008(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_GameOver_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_SyncTimer_Params
    {
    public:
        float                                                        TimeRemaining;                                           //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_LoadBowlingState_Params
    {
    public:
        SportsScramble::FBowlingScrambleState                        ScrambleState;                                           //  0x0000(0x0080)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
        BasicTypes::TArray<SportsScramble::FBowlingFrameSet>         TraditionalFrameSets;                                    //  0x0080(0x0010)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ServerReady_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_OnGameDone_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_PlayBonusBallAudio_Params
    {
    public:
        int32_t                                                      ID;                                                      //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_EndGameDisablePause_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_ExecuteUbergraph_ScramSportManagerBowling_Blueprint_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_GameTimeEnded__DelegateSignature_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_BWGameEnd__DelegateSignature_Params
    {
    public:
        GameResult::EGameResult                                      MatchResult;                                             //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      Player1GamesWon;                                         //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Player2GamesWon;                                         //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_Blueprint_C_MatchComplete__DelegateSignature_Params
    {
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
