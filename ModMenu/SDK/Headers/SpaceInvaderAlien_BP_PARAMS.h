#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FLinearColor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SpaceInvaderAlien_BP
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_ShouldShowFlyText_Params
    {
    public:
        bool                                                         Output;                                                  //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Local_EndLaneFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Local_ScoreFX_Params
    {
    public:
        bool                                                         bonus;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      score;                                                   //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_VerifyPool_Params
    {
    public:
        bool                                                         Success;                                                 //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_MakeFractionalData_Params
    {
    public:
        CoreUObject::FVector                                         NewParam;                                                //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_RunParticle_Params
    {
    public:
        CoreUObject::FTransform                                      WorldTransform;                                          //  0x0000(0x0030)  (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
        CoreUObject::FLinearColor                                    Color;                                                   //  0x0030(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_UncoverAlien_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_RunScoreFX_Params
    {
    public:
        Engine::AActor*                                              Ball;                                                    //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_RunEndLaneFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_UpdateAnimation_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_UpdateAlien_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_HideAlien_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Multi_EndLaneFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Server_ScoreFX_Params
    {
    public:
        bool                                                         bonus;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      score;                                                   //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_AddScore_Params
    {
    public:
        int32_t                                                      ScoreValue;                                              //  0x0000(0x0004)  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0003[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Ball;                                                    //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Server_EndLaneFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_Multi_ScoreFX_Params
    {
    public:
        bool                                                         bonus;                                                   //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0004[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      score;                                                   //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASpaceInvaderAlien_BP_C_ExecuteUbergraph_SpaceInvaderAlien_BP_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
