#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FBaseballNetworkUpdate.h"
#include "SportsScramble_FMotionState.h"
#include "SportsScramble_AScramBall.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FBaseballShot.h"
#include "SportsScramble_FBaseballBallProperties.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::SportsScramble { class ABowlingBall; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.BaseballBall
     * Size -> 0x03B0 (FullSize[0x0ED0] - InheritedSize[0x0B20])
     */
    class ABaseballBall : public SportsScramble::AScramBall
    {
    public:
        SportsScramble::ABowlingBall*                                BowlingBallClass;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        BowlingBallDestroyDelay;                                 //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FBaseballNetworkUpdate                       mClientSpawnUpdate;                                      //  Net, NativeAccessSpecifierPrivate
        bool                                                         mClientHasSpawnUpdate;                                   //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         mVisible;                                                //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         mForcedCharge;                                           //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         mIsImbued;                                               //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::ABowlingBall*                                mpBowlingBall;                                           //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::FMotionState                                 mNetworkMotionState;                                     //  Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x16];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         mCanPitch;                                               //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x139];                                 //  MISSED OFFSET (PADDING)

    public:
        CoreUObject::UObject* TrySetFutureHit();
        void SetVerticalFieldZone(SportsScramble::EVerticalFieldZone verticalFieldZone);
        void SetIsThrow(bool isThrow);
        void SetForceCharge(bool shouldCharge);
        void SetBallImbued(bool Imbued);
        void OnShotChanged();
        void OnRep_NetworkMotionState();
        void OnRep_BowlingBall();
        void OnImbuedChanged();
        void OnHit(CoreUObject::UObject* pWorldContextObject, SportsScramble::UScramEventBasePayload* pPayload);
        void OnFloorResultChanged(SportsScramble::EFloorResult newFloorResult);
        bool IsRollingPitch();
        bool IsBallImbued();
        SportsScramble::EVerticalFieldZone GetVerticalFieldZone();
        SportsScramble::FBaseballShot GetShot();
        bool GetIsThrow();
        bool GetForceCharge();
        SportsScramble::EFloorResult GetFloorResult();
        SportsScramble::FBaseballBallProperties GetBaseballBallProperties();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.BaseballBall");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
