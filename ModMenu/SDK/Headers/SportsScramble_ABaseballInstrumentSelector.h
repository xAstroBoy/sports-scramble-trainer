#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FRotator.h"
#include "SportsScramble_FRandomActorTable.h"
#include "SportsScramble_AScramSceneComponentActor.h"
#include "SportsScramble_FBaseballInstrumentEntryProperties.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class UParticleSystem; };
namespace CG::Engine { class UDataTable; };
namespace CG::SportsScramble { class ABaseballInstrument; };
namespace CG::Engine { class UCurveFloat; };
namespace CG::Engine { class UCurveVector; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class UParticleSystemComponent; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.BaseballInstrumentSelector
     * Size -> 0x00E8 (FullSize[0x0438] - InheritedSize[0x0350])
     */
    class ABaseballInstrumentSelector : public SportsScramble::AScramSceneComponentActor
    {
    public:
        Engine::UStaticMesh*                                         SpawnerMesh;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UParticleSystem*                                     SpawnerParticle;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ParticleFireDelay;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UDataTable*                                          Instruments;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<SportsScramble::ABaseballInstrument*>     SpawnedInstruments;                                      //  BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected
        int32_t                                                      InstrumentDisplayCount;                                  //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        InstrumentDisplayHeight;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        InstrumentDisplaySpace;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<CoreUObject::FTransform>                  DisplayPositionOverrides;                                //  Edit, BlueprintVisible, Net, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected
        Engine::UCurveFloat*                                         InstrumentShowScaleCurve;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UCurveVector*                                        SpawnerShowScaleCurve;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FRotator                                        RotationOffset;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x1C];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      mWorkingDisplayCount;                                    //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FRandomActorTable                            mInstrumentTable;                                        //  NativeAccessSpecifierPrivate
        SportsScramble::ABaseballInstrument*                         mLastSelected;                                           //  ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UStaticMeshComponent*>            mDisplayBases;                                           //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UParticleSystemComponent*>        mDisplayParticle;                                        //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        bool TrySetInstruments(BasicTypes::TArray<SportsScramble::FBaseballInstrumentEntryProperties> instrumentEntries);
        bool TryChangeInstrumentTable(Engine::UDataTable* InstrumentTable);
        void SetSelectorVisible(bool visible);
        void OnRep_ClientSpawnedInstruments();
        void InstrumentSelected(CoreUObject::UObject* pWorldContextObject, SportsScramble::UScramEventBasePayload* pPayload);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.BaseballInstrumentSelector");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
