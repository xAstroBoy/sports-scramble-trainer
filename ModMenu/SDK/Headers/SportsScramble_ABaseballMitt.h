#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FBox.h"
#include "SportsScramble_FAngle.h"
#include "CoreUObject_FVector.h"
#include "SportsScramble_FBaseballMittSkillVariations.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FMittSpawnInfo.h"
#include "SportsScramble_FMittBallRecordSet.h"
#include "SportsScramble_AScramGlove.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAnimationAsset; };
namespace CG::Engine { class UHapticFeedbackEffect_Base; };
namespace CG::Engine { class UCurveFloat; };
namespace CG::SportsScramble { class ABaseballBall; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.BaseballMitt
     * Size -> 0x0178 (FullSize[0x0BB0] - InheritedSize[0x0A38])
     */
    class ABaseballMitt : public SportsScramble::AScramGlove
    {
    public:
        uint8_t                                                      UnknownData_0005[0x8];                                   //  Fix Super Size
        Engine::UAnimationAsset*                                     MainHandAnimationAsset;                                  //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UAnimationAsset*                                     AlternateHandAnimationAsset;                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UHapticFeedbackEffect_Base*                          BounceHaptics;                                           //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FBox                                            BroadVolume;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        CoreUObject::FBox                                            TightVolume;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FAngle                                       DisplayAcceptanceAngle;                                  //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        float                                                        DisplayLength;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         DisplayCenter;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         DisplayRotator;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::FAngle                                       DisplaySpace;                                            //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        int32_t                                                      SelectionCount;                                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UCurveFloat*                                         DisplayShowPositionCurve;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UCurveFloat*                                         DisplayShowScaleCurve;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::FAngle                                       OpenWideUpAngle;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FAngle                                       OpenWideForwardAngle;                                    //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        float                                                        CatchCloseTime;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        CatchCloseDuration;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        GripCloseTime;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        CloseEmptyTime;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::FBaseballMittSkillVariations                 SkillVariations[0x3];                                    //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        bool                                                         CanDropBall;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<SportsScramble::FMittSpawnInfo>           mSpawnableBalls;                                         //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           mSpawnedBalls;                                           //  Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           mClientSpawnedBalls;                                     //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0002[0x10];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FMittBallRecordSet                           mImmuneBalls;                                            //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FMittBallRecordSet                           mLateGrabBalls;                                          //  NativeAccessSpecifierPrivate
        SportsScramble::FMittBallRecordSet                           mBounceImmunity;                                         //  NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnScrambleBallGrabbed(CoreUObject::UObject* pWorldContextObject, SportsScramble::UScramEventBasePayload* pPayload);
        void OnRep_ClientSpawnedBalls();
        bool GetScrambleOptionsFull();
        BasicTypes::TArray<SportsScramble::FMittSpawnInfo> GetScrambleOptions();
        void ClearScrambleOptions();
        void AddScrambleBallWithType(SportsScramble::ABaseballBall* BallClass, bool Imbued);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.BaseballMitt");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
