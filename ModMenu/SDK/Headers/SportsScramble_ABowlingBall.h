#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "SportsScramble_AScramBall.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FBowlingThrow.h"
#include "SportsScramble_FBowlingBallProperties.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UHapticFeedbackEffect_Base; };
namespace CG::Engine { class UCurveFloat; };
namespace CG::Engine { class UAudioComponent; };
namespace CG::SportsScramble { class ABowlingAlley; };
namespace CG::SportsScramble { class ABowlingLane; };
namespace CG::SportsScramble { class UBowlingLaneSpline; };
namespace CG::SportsScramble { class ABowlingPin; };
namespace CG::SportsScramble { class ABowlingFootballBlocker; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.BowlingBall
     * Size -> 0x0260 (FullSize[0x0D80] - InheritedSize[0x0B20])
     */
    class ABowlingBall : public SportsScramble::AScramBall
    {
    public:
        Engine::UHapticFeedbackEffect_Base*                          VibrationGrabHaptics;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            RollVolumeAudioProperty;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         RollVolumeVsSpeed;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FName                                            RollPitchAudioProperty;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UCurveFloat*                                         RollPitchVsSpeed;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UAudioComponent*                                     RollingAudio;                                            //  BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         AddedAsInstigator;                                       //  BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::ABowlingAlley*                               mpAlley;                                                 //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::ABowlingLane*                                mpCurrentLane;                                           //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::UBowlingLaneSpline*                          mpCurrentSpline;                                         //  ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x210];                                 //  MISSED OFFSET (PADDING)

    public:
        void SetValidRoll(bool validRoll);
        void OnThrowChanged();
        void OnHitPin(SportsScramble::ABowlingPin* Pin);
        void OnHitLane(SportsScramble::ABowlingLane* Lane, float bounceSpeed);
        void OnHitFootballBlocker(SportsScramble::ABowlingFootballBlocker* FootballBlocker);
        void OnFloorResultChanged(SportsScramble::EFloorResult newFloorResult);
        bool IsBouncing();
        bool GetValidRoll();
        SportsScramble::FBowlingThrow GetThrow();
        SportsScramble::EFloorResult GetFloorResult();
        SportsScramble::FBowlingBallProperties GetBowlingBallProperties();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.BowlingBall");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
