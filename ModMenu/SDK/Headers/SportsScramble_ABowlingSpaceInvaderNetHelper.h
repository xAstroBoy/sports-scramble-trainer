#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TArray.h"
#include "SportsScramble_AScramActor.h"
#include "Engine_FVector_NetQuantize.h"
#include "CoreUObject_FQuat.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::SportsScramble { class ABowlingSpaceInvaderAlien; };
namespace CG::Engine { class USoundBase; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.BowlingSpaceInvaderNetHelper
     * Size -> 0x0048 (FullSize[0x0390] - InheritedSize[0x0348])
     */
    class ABowlingSpaceInvaderNetHelper : public SportsScramble::AScramActor
    {
    public:
        BasicTypes::TArray<SportsScramble::ABowlingSpaceInvaderAlien*> mAliens;                                                 //  Net, ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x28];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USoundBase*                                          mpNetSoundSave;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void Server_UpdateAliens(const Engine::FVector_NetQuantize& newWorldPos, const CoreUObject::FQuat& newWorldRot, Engine::USoundBase* pSoundAsset);
        void Server_ShutdownAliens();
        void Server_PrepareAliens();
        void NetMulticast_UpdateAliens(const Engine::FVector_NetQuantize& newWorldPos, const CoreUObject::FQuat& newWorldRot, Engine::USoundBase* pSoundAsset);
        void NetMulticast_ShutdownAliens();
        void NetMulticast_PrepareAliens();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.BowlingSpaceInvaderNetHelper");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
