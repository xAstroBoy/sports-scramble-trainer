#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_TMap.h"
#include "SportsScramble_FManagedNetworkMotionState.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FNetworkMotionState.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::SportsScramble { class AScramPrimitiveActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.NetworkMotionStateManager
     * Size -> 0x0078 (FullSize[0x03A0] - InheritedSize[0x0328])
     */
    class ANetworkMotionStateManager : public Engine::AActor
    {
    public:
        BasicTypes::TMap<SportsScramble::AScramPrimitiveActor*, SportsScramble::FManagedNetworkMotionState> mSentStates;                                             //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<SportsScramble::FManagedNetworkMotionState> mTryStates;                                              //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<SportsScramble::FNetworkMotionState>      mReplicatedStates;                                       //  Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void Server_ApplyReplicatedStates(BasicTypes::TArray<SportsScramble::FNetworkMotionState> States);
        void OnRep_ReplicatedStates();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.NetworkMotionStateManager");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
