#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_ENUMS.h"
#include "BasicTypes_TArray.h"
#include "Engine_AActor.h"
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USoundBase; };
namespace CG::Engine { class USoundAttenuation; };
namespace CG::Engine { class USoundConcurrency; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramActor
     * Size -> 0x0020 (FullSize[0x0348] - InheritedSize[0x0328])
     */
    class AScramActor : public Engine::AActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         CanBeHidden;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::EDebugDrawMode                               DebugDrawMode;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<Engine::UAudioComponent*>                 mDynamicAudioComponents;                                 //  ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate

    public:
        void PlayManagedSoundAtLocation(Engine::USoundBase* Sound, const CoreUObject::FVector& Location, const CoreUObject::FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, Engine::USoundAttenuation* AttenuationSettings, Engine::USoundConcurrency* ConcurrencySettings);
        bool HasBegunPlay();
        void AttachSound2D(Engine::USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, Engine::USoundConcurrency* ConcurrencySettings, bool IsUiSound);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramActor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
