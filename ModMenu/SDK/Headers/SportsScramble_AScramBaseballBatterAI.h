#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FBaseballStrikeZoneAreaValues.h"
#include "SportsScramble_FBaseballResultRegionChances.h"
#include "SportsScramble_FMinMaxAngle.h"
#include "SportsScramble_FMinMaxFloat.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_AScramBaseAI.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UCurveFloat; };
namespace CG::Engine { class UDataTable; };
namespace CG::Engine { class UAnimationAsset; };
namespace CG::SportsScramble { class ABaseballInstrument; };
namespace CG::SportsScramble { class ABaseballBall; };
namespace CG::Engine { class USkeletalMeshComponent; };
namespace CG::SportsScramble { class UBaseballBatterAIAnimInstance; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramBaseballBatterAI
     * Size -> 0x0B10 (FullSize[0x0E78] - InheritedSize[0x0368])
     */
    class AScramBaseballBatterAI : public SportsScramble::AScramBaseAI
    {
    public:
        SportsScramble::FBaseballStrikeZoneAreaValues                SwingChance;                                             //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FBaseballStrikeZoneAreaValues                ContactChance;                                           //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        Engine::UCurveFloat*                                         ContactChancePitchSpeedMod;                              //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UCurveFloat*                                         ContactChancePitchSpinMod;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ResultMediumSpeedMultiplier;                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ResultSlowSpeedMultiplier;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         WaitAfterSwings;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FBaseballResultRegionChances                 ResultRegionChancesUL;                                   //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FBaseballResultRegionChances                 ResultRegionChancesUR;                                   //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FBaseballResultRegionChances                 ResultRegionChancesLL;                                   //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FBaseballResultRegionChances                 ResultRegionChancesLR;                                   //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FBaseballResultRegionChances                 ResultRegionChancesBALL;                                 //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxAngle                                 LeftFieldAngles;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxAngle                                 CenterFieldAngles;                                       //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxAngle                                 RightFieldAngles;                                        //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 GroundBallAngles;                                        //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 LineDriveAngles;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 SweetSpotAngles;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 PopFlyAngles;                                            //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 SpeedRange;                                              //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 CriticalFractionRange;                                   //  Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected
        float                                                        SwingHitTime;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 FreebieHitDelay;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UDataTable*                                          ContactChanceVsEquipment;                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UDataTable*                                          VerticalResultVsBall;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         UseFastLoop;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UAnimationAsset*                                     FastLoopIdle;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UAnimationAsset*                                     FastLoopSwing;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::ABaseballInstrument*                         Bat;                                                     //  BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::ABaseballBall*                               mpBall;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::USkeletalMeshComponent*                              mpSkeletalMesh;                                          //  ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::UBaseballBatterAIAnimInstance*               mpAnimInstance;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x988];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           mSwungAtBalls;                                           //  ZeroConstructor, NativeAccessSpecifierPrivate

    public:
        void PlayBatSound(SportsScramble::ABaseballBall* Ball, float BallSpeed);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramBaseballBatterAI");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
