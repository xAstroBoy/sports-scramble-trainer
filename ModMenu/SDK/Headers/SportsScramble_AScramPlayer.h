#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FScramPlayerPreferences.h"
#include "SportsScramble_FPlayerTransforms.h"
#include "SportsScramble_FScramPartialTransform.h"
#include "BasicTypes_TArray.h"
#include "Engine_APawn.h"
#include "SportsScramble_FAvatarLook.h"
#include "CoreUObject_FTransform.h"
#include "CoreUObject_FBox.h"
#include "CoreUObject_FVector.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class USceneComponent; };
namespace CG::SportsScramble { class AScramPlayerHand; };
namespace CG::SportsScramble { class AScramAvatar; };
namespace CG::SportsScramble { class AScramPlayerHandPossessor; };
namespace CG::SportsScramble { class AScramPlayerBoundary; };
namespace CG::SportsScramble { class AScramCameraCover; };
namespace CG::SportsScramble { class UScramCameraComponent; };
namespace CG::Engine { class AActor; };
namespace CG::SportsScramble { class AScramVoiceChat; };
namespace CG::SportsScramble { class ANetworkMotionStateManager; };
namespace CG::SportsScramble { class AScramPrimitiveGrabbable; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramPlayer
     * Size -> 0x05F8 (FullSize[0x0980] - InheritedSize[0x0388])
     */
    class AScramPlayer : public Engine::APawn
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         OnPlayerInitComplete;                                    //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnAvatarLookChanged;                                     //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        Engine::USceneComponent*                                     PlayerRoot;                                              //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerHand*                            LeftHandClass;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerHand*                            RightHandClass;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramAvatar*                                AvatarClassPerSport[0x5];                                //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerHandPossessor*                   LeftHandPossessorClass;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerHandPossessor*                   RightHandPossessorClass;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerBoundary*                        BoundaryClass;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramCameraCover*                           CameraCoverClass;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        RemoteTransformSmoothTime;                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        RestrictedBuffer;                                        //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        RestrictedFadeBuffer;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ReturnPointRadius;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ReturnAreaFrontMargin;                                   //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ReturnAreaBackMargin;                                    //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ReturnAreaLateralMargin;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ReturnAreaMinimumWidth;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MaxArmLength;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         CheckPermittedArea;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::AScramPlayerHand*                            LeftHand;                                                //  BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerHand*                            RightHand;                                               //  BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramAvatar*                                Avatar;                                                  //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerBoundary*                        Boundary;                                                //  BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USceneComponent*                                     VR_Controller_HMD;                                       //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::UScramCameraComponent*                       FirstPersonCamera;                                       //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USceneComponent*                                     PlayerRegionRoot;                                        //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::USceneComponent*                                     PlayerFloorRegionRoot;                                   //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        HandOffsetScale;                                         //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        HandScale;                                               //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        HeadPlusHandRadius;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ArmPivotToHead;                                          //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ShoulderDropHeight;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        OutOfBoundaryTimeLimit;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         DefaultNetVisible;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        int32_t                                                      NetworkMotionStateRate;                                  //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnPauseRequested;                                        //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0003[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         OnAvatarSelected;                                        //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        SportsScramble::EDebugDrawMode                               DebugDrawMode;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0004[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AActor*                                              ReturnIndicator;                                         //  BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::AScramVoiceChat*                             mpVoiceChat;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::AScramCameraCover*                           mpCameraCover;                                           //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0005[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FScramPlayerPreferences                      mPreferences;                                            //  Net, NoDestructor, NativeAccessSpecifierPrivate
        bool                                                         mRestoringGame;                                          //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0006[0x30B];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FPlayerTransforms                            mClientTransforms;                                       //  Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0007[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        mClientPlayAreaDiagonal;                                 //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0008[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FScramPartialTransform                       mRemoteTennisReturnTransform;                            //  Net, NoDestructor, NativeAccessSpecifierPrivate
        float                                                        mRemoteTennisReturnTime;                                 //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0009[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        bool                                                         mNetVisible;                                             //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0010[0x37];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<bool>                                     mClientPausedPerReason;                                  //  Net, ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0011[0x18];                                  //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::ANetworkMotionStateManager*                  mpNetworkMotionStateManager;                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0012[0x8];                                   //  MISSED OFFSET (PADDING)

    public:
        void SetWorldTimeDilation(float timeDilation);
        void SetScriptedFadeOutOpacity(float Opacity);
        void SetNetVisible(bool netVisible);
        void SetAvatarMaterials(const SportsScramble::FAvatarLook& AvatarLook);
        void SetAnchor(const CoreUObject::FTransform& anchor, const CoreUObject::FBox& minPlayArea, const CoreUObject::FBox& maxPlayArea, const CoreUObject::FBox& maxHazardArea);
        void Server_UpdateTransforms(const SportsScramble::FPlayerTransforms& Transforms, uint32_t updateCounter);
        void Server_UpdatePlayAreaDiagonal(float newPlayAreaDiagonal);
        void Server_SpawnHands();
        void Server_SetTennisReturnData(const SportsScramble::FScramPartialTransform& remoteTransform, float returnTime);
        void Server_SetPlayerReadyForMatch();
        void Server_SetNetVisible(bool netVisible);
        void Server_ClientSelectedAvatar();
        void SavePreferences();
        void ResetAnchor();
        void RecenterDetected();
        void PlayerResume(SportsScramble::EGamePauseReason reason, bool multiplayer);
        void PlayerPause(SportsScramble::EGamePauseReason reason, bool multiplayer);
        void OnRep_NetVisible();
        void OnRep_ClientTransforms();
        void OnRep_ClientPlayAreaDiagonal();
        void OnRecenter();
        void OnPlayerOutOfBoundary(const CoreUObject::FTransform& ReturnTransform);
        void OnPlayerEnterBoundary();
        void NetSetPreferences(const SportsScramble::FScramPlayerPreferences& preferences);
        void LocalAvatarSelected();
        void LoadPreferences();
        bool IsPlayerRestricted();
        bool IsPlayerPaused();
        bool IsPlayerFadedOut();
        bool IsInitComplete();
        bool HasBegunPlay();
        float GetWorldTimeDilation();
        float GetScriptedFadeOutOpacity();
        SportsScramble::EScramHandedness GetPreferredHandedness();
        SportsScramble::FScramPlayerPreferences GetPreferences();
        CoreUObject::FTransform GetPlayAreaTransform();
        CoreUObject::FTransform GetOrthogonalAnchor();
        SportsScramble::AScramPlayerHand* GetHand(SportsScramble::EScramHandedness Handedness);
        SportsScramble::EScramStroke GetDominantStroke();
        SportsScramble::EScramHandedness GetDominantHandedness();
        CoreUObject::FTransform GetAnchor();
        SportsScramble::AScramPrimitiveGrabbable* ForceChangeGrabbable(SportsScramble::AScramPrimitiveGrabbable* NewGrabbableClass, SportsScramble::AScramPlayerHand* SpecificHand);
        void EnsureHasHands();
        void DestroyAllGrabbables(bool playOut, float Delay);
        void DeferredInit();
        CoreUObject::FVector ConstrainToPlayArea(const CoreUObject::FVector& Point, float Radius);
        void Client_ServerSelectedAvatar();
        bool ChangeAvatarBlueprint(SportsScramble::AScramAvatar* avatarClass, bool PlaySpawnAnimation);
        bool CanBeSeen();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramPlayer");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
