#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FAngle.h"
#include "SportsScramble_AScramActor.h"
#include "CoreUObject_FTransform.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UHapticFeedbackEffect_Base; };
namespace CG::SportsScramble { class ASwapIndicator; };
namespace CG::SportsScramble { class AScramPlayerController; };
namespace CG::SportsScramble { class AScramPlayer; };
namespace CG::SportsScramble { class AScramPlayerHandPossessor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramPlayerHand
     * Size -> 0x00F0 (FullSize[0x0438] - InheritedSize[0x0348])
     */
    class AScramPlayerHand : public SportsScramble::AScramActor
    {
    public:
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        CoreUObject::FVector                                         GrabberHoldPoint;                                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FVector                                         GrabberHoldDirection;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UStaticMeshComponent*                                ProxyModel;                                              //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::EScramHandedness                             Handedness;                                              //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        GrabRadius;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        StealRadius;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MinBallInfluenceSpeed;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::AActor*                                              HighlightedUIObject;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       ForehandAngle;                                           //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       BackhandAngle;                                           //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       OverheadAngle;                                           //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       UnderhandAngle;                                          //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        Engine::UHapticFeedbackEffect_Base*                          GrabHaptics;                                             //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        Engine::UHapticFeedbackEffect_Base*                          HitHaptics;                                              //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        ImpulseHapticExponent;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MassHapticExponent;                                      //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MinHapticFeltImpulse;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        MaxHapticFeltImpulse;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        HitHapticMultiplier;                                     //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0002[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::ASwapIndicator*                              SwapIndicatorClass;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SportsScramble::AScramPlayerController*                      mpPlayerController;                                      //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::AScramPlayer*                                mpPlayer;                                                //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::AScramPlayerHandPossessor*                   mpPossessor;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        SportsScramble::ASwapIndicator*                              mpSwapIndicator;                                         //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::AActor*                                              mpClientSpawnedActor;                                    //  Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        bool                                                         mpClientHasCurrentGrabbableActor;                        //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0003[0x7];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::AActor*                                              mpClientCurrentGrabbableActor;                           //  Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0004[0x38];                                  //  MISSED OFFSET (PADDING)

    public:
        void SpawnAndGrabActor(Engine::AActor* GrabbableClass);
        void ServerGrabSpawnedActor(Engine::AActor* GrabbableActor);
        void Server_SpawnAndGrabActor(Engine::AActor* ActorClass, const CoreUObject::FTransform& SpawnTransform);
        void OnRep_ClientSpawnedActor();
        void OnGrabbableHit(CoreUObject::UObject* pWorldContextObject, SportsScramble::UScramEventBasePayload* pPayload);
        bool GrabberIsTracked();
        SportsScramble::AScramPlayer* GetPlayer();
        SportsScramble::EScramStroke GetGrabberVerticalStroke();
        SportsScramble::EScramStroke GetGrabberStroke();
        SportsScramble::EScramStroke GetGrabberHorizontalStroke();
        SportsScramble::EScramHandedness GetGrabberHandedness();
        void ForceReleaseCurrentGrabbable();
        void ForceGrab(Engine::AActor* GrabbableActor);
        void DestroyCurrentGrabbable(bool playOut, float Delay);
        void DeferredInit();
        Engine::AActor* CurrentGrabbableActor();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramPlayerHand");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
