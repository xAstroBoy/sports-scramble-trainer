#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "SportsScramble_FMinMaxFloat.h"
#include "SportsScramble_FAngle.h"
#include "SportsScramble_ENUMS.h"
#include "CoreUObject_FRotator.h"
#include "SportsScramble_AScramActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::HeadMountedDisplay { class UMotionControllerComponent; };
namespace CG::SportsScramble { class AScramPlayer; };
namespace CG::SportsScramble { class AScramPlayerHand; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramPlayerHandPossessor
     * Size -> 0x0098 (FullSize[0x03E0] - InheritedSize[0x0348])
     */
    class AScramPlayerHandPossessor : public SportsScramble::AScramActor
    {
    public:
        HeadMountedDisplay::UMotionControllerComponent*              MotionController;                                        //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FVector                                         RightShoulderOffset;                                     //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ForearmLength;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::FMinMaxFloat                                 UpperArmLengthRange;                                     //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FAngle                                       MinElbowAngle;                                           //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::EScramHandInferenceMode                      InferenceMode;                                           //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        bool                                                         DeadReckoningVelocityDecayEnabled;                       //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x2];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        float                                                        DeadReckoningVelocityDecayTime;                          //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        DeadReckoningAccelerationDamping;                        //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        CoreUObject::FRotator                                        SteamRotationAdjustment;                                 //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0xC];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::AScramPlayer*                                mpPlayer;                                                //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        SportsScramble::AScramPlayerHand*                            mpHand;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0002[0x40];                                  //  MISSED OFFSET (PADDING)

    public:
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramPlayerHandPossessor");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
