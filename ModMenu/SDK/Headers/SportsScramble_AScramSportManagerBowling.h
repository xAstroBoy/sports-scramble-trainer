#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_AScramSportManagerBase.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FBowlingScrambleState.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FBowlingFrameSet.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.ScramSportManagerBowling
     * Size -> 0x0000 (FullSize[0x0398] - InheritedSize[0x0398])
     */
    class AScramSportManagerBowling : public SportsScramble::AScramSportManagerBase
    {
    public:
        void SendBowlingEvent(int32_t Player, SportsScramble::EBowlingEvent BowlingEvent, Engine::AActor* BallActor);
        void SaveBowlingState(SportsScramble::FBowlingScrambleState* ScrambleState, BasicTypes::TArray<SportsScramble::FBowlingFrameSet>* TraditionalFrameSets);
        void RestartGame();
        void LoadBowlingState(const SportsScramble::FBowlingScrambleState& ScrambleState, BasicTypes::TArray<SportsScramble::FBowlingFrameSet> TraditionalFrameSets);
        void BowlingEvent(int32_t Player, SportsScramble::EBowlingEvent BowlingEvent);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.ScramSportManagerBowling");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
