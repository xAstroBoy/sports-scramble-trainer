#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FName.h"
#include "SportsScramble_FSwapVisuals.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_AScramSceneComponentActor.h"
#include "SportsScramble_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::SportsScramble { class AScramPlayerHand; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class UStaticMesh; };
namespace CG::Engine { class UMaterialInterface; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.SwapIndicator
     * Size -> 0x0280 (FullSize[0x05D0] - InheritedSize[0x0350])
     */
    class ASwapIndicator : public SportsScramble::AScramSceneComponentActor
    {
    public:
        Engine::UStaticMeshComponent*                                SwapCollar;                                              //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        Engine::UStaticMeshComponent*                                SwapIcon;                                                //  Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        InitialTime;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        float                                                        ConfirmTime;                                             //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            GlowLerpParameter;                                       //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::FName                                            GlowColorParameter;                                      //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x8];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FSwapVisuals                                 LeftHandVisuals;                                         //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::FSwapVisuals                                 RightHandVisuals;                                        //  Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
        SportsScramble::AScramPlayerHand*                            mpHand;                                                  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::AActor*                                              mpSwapActor;                                             //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        Engine::UStaticMesh*                                         mpOriginalMesh;                                          //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UMaterialInterface*>              mpOriginalMaterials;                                     //  ZeroConstructor, NativeAccessSpecifierPrivate
        BasicTypes::TArray<Engine::UMaterialInterface*>              mpSwapMaterials;                                         //  ZeroConstructor, NativeAccessSpecifierPrivate
        uint8_t                                                      UnknownData_0001[0x18];                                  //  MISSED OFFSET (PADDING)

    public:
        void OnHandednessSet(SportsScramble::EScramHandedness Handedness);
        void OnConfirmSwap();
        void OnBeginSwap();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.SwapIndicator");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
