#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "CoreUObject_FVector.h"
#include "CoreUObject_FRotator.h"
#include "SportsScramble_FTrophyDefinition.h"
#include "SportsScramble_FAngle.h"
#include "SportsScramble_AScramPrimitiveGrabbable.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * Class /Script/SportsScramble.TrophyGrabbable
     * Size -> 0x0108 (FullSize[0x0B00] - InheritedSize[0x09F8])
     */
    class ATrophyGrabbable : public SportsScramble::AScramPrimitiveGrabbable
    {
    public:
        CoreUObject::FVector                                         GrabPositionOffset;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        CoreUObject::FRotator                                        GrabRotationOffset;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        float                                                        GrabbedScaleModifier;                                    //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic
        float                                                        RespawnTimeOnRelease;                                    //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         CanPlayerInteractWith;                                   //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         TrophyWasEarned;                                         //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        SportsScramble::FTrophyDefinition                            TrophyData;                                              //  BlueprintVisible, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       PitchMin;                                                //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FAngle                                       PitchMax;                                                //  Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x38];                                  //  MISSED OFFSET (PADDING)

    public:
        bool WasTrophyEarned();
        void RespawnTrophy();
        void OverrideInitialRotation(const CoreUObject::FRotator& overrideRotation);
        void OverrideInitialPosition(const CoreUObject::FVector& overridePosition);
        void OnTrophyRespawnToOriginalPosition();
        void OnTrophyReleased();
        void OnTrophyGrabbed();
        void OnStopPointingAt();
        void OnStartPointingAt();
        CoreUObject::FRotator GetInitialRotation();
        CoreUObject::FVector GetInitialPosition();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/SportsScramble.TrophyGrabbable");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
