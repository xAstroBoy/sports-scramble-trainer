#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FBowlingLaneAIDifficultyData.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_ENUMS.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    /**
     * ScriptStruct /Script/SportsScramble.BowlingLaneAIData
     * Size -> 0x0060
     */
    struct FBowlingLaneAIData
    {
    public:
        SportsScramble::FBowlingLaneAIDifficultyData                 EasyData;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FBowlingLaneAIDifficultyData                 NormalData;                                              //  Edit, NoDestructor, NativeAccessSpecifierPublic
        SportsScramble::FBowlingLaneAIDifficultyData                 HardData;                                                //  Edit, NoDestructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<SportsScramble::EBowlingBallType>         GreatBalls;                                              //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::TArray<SportsScramble::EBowlingBallType>         BadBalls;                                                //  Edit, ZeroConstructor, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x10];                                  //  MISSED OFFSET (PADDING)
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
