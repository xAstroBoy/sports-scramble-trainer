#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SportsScramble_FScramGameInvite.h"
#include "SportsScramble_FBPUniqueNetId.h"
#include "BasicTypes_FString.h"
#include "SportsScramble_FSessionPropertyKeyPair.h"
#include "SportsScramble_ENUMS.h"
#include "SportsScramble_FSessionsSearchSetting.h"
#include "BasicTypes_FName.h"
#include "OnlineSubsystemUtils_FBlueprintSessionResult.h"
#include "BasicTypes_TArray.h"
#include "SportsScramble_FScramTrajectory.h"
#include "CoreUObject_FQuat.h"
#include "SportsScramble_FScramPrimitiveProperties.h"
#include "CoreUObject_FVector.h"
#include "SportsScramble_FMotionState.h"
#include "SportsScramble_FScramBallProperties.h"
#include "SportsScramble_FBaseballShot.h"
#include "SportsScramble_FBaseballBallProperties.h"
#include "SportsScramble_FChance.h"
#include "SportsScramble_FBaseballBallScrambleProperties.h"
#include "CoreUObject_FBox.h"
#include "SportsScramble_FScramInstrumentProperties.h"
#include "SportsScramble_FBaseballInstrumentProperties.h"
#include "SportsScramble_FBaseballInstrumentEntryProperties.h"
#include "SportsScramble_FMittSpawnInfo.h"
#include "SportsScramble_FBowlingThrow.h"
#include "SportsScramble_FBowlingBallProperties.h"
#include "CoreUObject_FTransform.h"
#include "SportsScramble_FBowlingFrameSet.h"
#include "Engine_FVector_NetQuantize.h"
#include "SportsScramble_FMinMaxFloat.h"
#include "BasicTypes_FText.h"
#include "BasicTypes_UScriptDelegate.h"
#include "SportsScramble_FScramFriend.h"
#include "SportsScramble_FNetworkMotionState.h"
#include "SportsScramble_FTennisInstrumentProperties.h"
#include "CoreUObject_FColor.h"
#include "SportsScramble_FCoverVignette.h"
#include "SportsScramble_FAvatarLook.h"
#include "SportsScramble_FTennisBallNetworkUpdate.h"
#include "SportsScramble_FDodgeballShot.h"
#include "SportsScramble_FBaseballNetworkUpdate.h"
#include "SportsScramble_FScramPlayerPreferences.h"
#include "SportsScramble_FFutureBallHit.h"
#include "Engine_FVector_NetQuantize10.h"
#include "SportsScramble_FPlayerTransforms.h"
#include "SportsScramble_FScramPartialTransform.h"
#include "SportsScramble_FScramSportPreferences.h"
#include "SportsScramble_FBowlingScrambleState.h"
#include "CoreUObject_FDateTime.h"
#include "CoreUObject_FLinearColor.h"
#include "CoreUObject_FRotator.h"
#include "SportsScramble_FTennisBallProperties.h"
#include "SportsScramble_FTennisShot.h"
#include "SportsScramble_FDodgeballBallProperties.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class APlayerController; };
namespace CG::SportsScramble { class UAcceptInviteCallbackProxy; };
namespace CG::Engine { class AActor; };
namespace CG::Engine { class APlayerState; };
namespace CG::CoreUObject { class UObject; };
namespace CG::Engine { class UMeshComponent; };
namespace CG::Engine { class UPrimitiveComponent; };
namespace CG::SportsScramble { class AScramPrimitiveGrabbable; };
namespace CG::SportsScramble { class AScramPlayer; };
namespace CG::SportsScramble { class AScramPlayerHand; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::Engine { class UTexture2D; };
namespace CG::Engine { class UDataTable; };
namespace CG::SportsScramble { class ABaseballBall; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::SportsScramble { class ABowlingPinsetter; };
namespace CG::SportsScramble { class ABowlingBall; };
namespace CG::Engine { class UPhysicalMaterial; };
namespace CG::SportsScramble { class ABowlingBallReturn; };
namespace CG::SportsScramble { class ABowlingAlley; };
namespace CG::SportsScramble { class ABowlingLane; };
namespace CG::SportsScramble { class ABowlingPin; };
namespace CG::SportsScramble { class ABowlingFootballBlocker; };
namespace CG::SportsScramble { class UBowlingBallReturnTrack; };
namespace CG::SportsScramble { class ABowlingBallReturnSlot; };
namespace CG::Engine { class USceneComponent; };
namespace CG::SportsScramble { class ABowlingPlinkoBall; };
namespace CG::UMG { class UWidget; };
namespace CG::SportsScramble { class ABowlingSpaceInvaderGroup; };
namespace CG::Engine { class USoundBase; };
namespace CG::SportsScramble { class UCancelOculusMatchmakingCallbackProxy; };
namespace CG::SportsScramble { class UDestroyOculusSessionCallbackProxy; };
namespace CG::SportsScramble { class ABowlingLaneFlipper; };
namespace CG::SportsScramble { class UInviteFriendCallbackProxy; };
namespace CG::SportsScramble { class UJoinOculusSessionCallbackProxy; };
namespace CG::SportsScramble { class AScramSportManagerBaseball; };
namespace CG::Engine { class UHapticFeedbackEffect_Base; };
namespace CG::SportsScramble { class AScramInviteManager; };
namespace CG::SportsScramble { class ATennisBall; };
namespace CG::SportsScramble { class ABaseballThrowingGlove; };
namespace CG::SportsScramble { class ADodgeballBall; };
namespace CG::SportsScramble { class AScramPrimitiveActor; };
namespace CG::SportsScramble { class AScramSportManagerBase; };
namespace CG::SportsScramble { class ABaseballMitt; };
namespace CG::SportsScramble { class AScramPlayerServeTrigger; };
namespace CG::SportsScramble { class AScramHandshakeActor; };
namespace CG::SportsScramble { class AScramAvatar; };
namespace CG::SportsScramble { class AScramPlayerController; };
namespace CG::SportsScramble { class ABaseballInstrument; };
namespace CG::SportsScramble { class AScramBaseballRunnerAI; };
namespace CG::SportsScramble { class AScramStrikeZone; };
namespace CG::SportsScramble { class ATennisInstrument; };
namespace CG::SportsScramble { class ATrophyGrabbable; };
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class USplineComponent; };
namespace CG::SportsScramble { class AScramGameMode; };
namespace CG::SportsScramble { class USpectateSessionCallbackProxy; };
namespace CG::SportsScramble { class UStartOculusMatchmakingCallbackProxy; };
namespace CG::Engine { class USoundAttenuation; };
namespace CG::Engine { class USoundConcurrency; };
namespace CG::SportsScramble { class UScramEventObjectPayload; };
namespace CG::SportsScramble { class UScramEventCollisionPayload; };
namespace CG::SportsScramble { class UScramSaveData; };
namespace CG::SportsScramble { class UUpdateSessionCallbackProxyAdvanced; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::SportsScramble
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class UAcceptInviteCallbackProxy_FriendInviteClientConnect_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAcceptInviteCallbackProxy_AcceptInvite_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FScramGameInvite                             invite;                                                  //  0x0008(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::UAcceptInviteCallbackProxy*                  ReturnValue;                                             //  0x0068(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UActorSet_ResetActors_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UActorSet_GetNextActor_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UActorSet_AvoidActor_Params
    {
    public:
        Engine::AActor*                                              ActorClass;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_UniqueNetIdToString_Params
    {
    public:
        SportsScramble::FBPUniqueNetId                               UniqueNetId;                                             //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          String;                                                  //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_SetPlayerName_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          PlayerName;                                              //  0x0008(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionSearchProperty_Params
    {
    public:
        SportsScramble::FSessionPropertyKeyPair                      SessionSearchProperty;                                   //  0x0000(0x0020)  (Parm, NativeAccessSpecifierPublic)
        SportsScramble::EOnlineComparisonOpRedux                     ComparisonOp;                                            //  0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionsSearchSetting                       ReturnValue;                                             //  0x0028(0x0028)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionPropertyString_Params
    {
    public:
        BasicTypes::FName                                            Key;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          Value;                                                   //  0x0008(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FSessionPropertyKeyPair                      ReturnValue;                                             //  0x0018(0x0020)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionPropertyInt_Params
    {
    public:
        BasicTypes::FName                                            Key;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Value;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionPropertyKeyPair                      ReturnValue;                                             //  0x0010(0x0020)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionPropertyFloat_Params
    {
    public:
        BasicTypes::FName                                            Key;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Value;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionPropertyKeyPair                      ReturnValue;                                             //  0x0010(0x0020)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionPropertyByte_Params
    {
    public:
        BasicTypes::FName                                            Key;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      Value;                                                   //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x7];                                   //  0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionPropertyKeyPair                      ReturnValue;                                             //  0x0010(0x0020)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_MakeLiteralSessionPropertyBool_Params
    {
    public:
        BasicTypes::FName                                            Key;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         Value;                                                   //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x7];                                   //  0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionPropertyKeyPair                      ReturnValue;                                             //  0x0010(0x0020)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_IsValidUniqueNetID_Params
    {
    public:
        SportsScramble::FBPUniqueNetId                               UniqueNetId;                                             //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_IsValidSession_Params
    {
    public:
        OnlineSubsystemUtils::FBlueprintSessionResult                SessionResult;                                           //  0x0000(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x00B8(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_IsPlayerInSession_Params
    {
    public:
        SportsScramble::FBPUniqueNetId                               PlayerToCheck;                                           //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         bIsInSession;                                            //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_HasOnlineSubsystem_Params
    {
    public:
        BasicTypes::FName                                            SubSystemName;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetUniqueNetIDFromPlayerState_Params
    {
    public:
        Engine::APlayerState*                                        PlayerState;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FBPUniqueNetId                               UniqueNetId;                                             //  0x0008(0x0020)  (Parm, OutParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetUniqueNetID_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FBPUniqueNetId                               UniqueNetId;                                             //  0x0008(0x0020)  (Parm, OutParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetUniqueBuildID_Params
    {
    public:
        OnlineSubsystemUtils::FBlueprintSessionResult                SessionResult;                                           //  0x0000(0x00B8)  (Parm, NativeAccessSpecifierPublic)
        int32_t                                                      UniqueBuildId;                                           //  0x00B8(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionState_Params
    {
    public:
        SportsScramble::EBPOnlineSessionState                        SessionState;                                            //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionSettings_Params
    {
    public:
        int32_t                                                      NumConnections;                                          //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      NumPrivateConnections;                                   //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bIsLAN;                                                  //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bIsDedicated;                                            //  0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bAllowInvites;                                           //  0x000A(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bAllowJoinInProgress;                                    //  0x000B(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bIsAnticheatEnabled;                                     //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0005[0x3];                                   //  0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      BuildUniqueID;                                           //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0006[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
        SportsScramble::EBlueprintResultSwitch                       Result;                                                  //  0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyString_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESessionSettingSearchResult                  SearchResult;                                            //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0007[0x7];                                   //  0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          SettingValue;                                            //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyKey_Params
    {
    public:
        SportsScramble::FSessionPropertyKeyPair                      SessionProperty;                                         //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            ReturnValue;                                             //  0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyInt_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESessionSettingSearchResult                  SearchResult;                                            //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0008[0x3];                                   //  0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      SettingValue;                                            //  0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyFloat_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESessionSettingSearchResult                  SearchResult;                                            //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0009[0x3];                                   //  0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        SettingValue;                                            //  0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyByte_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESessionSettingSearchResult                  SearchResult;                                            //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      SettingValue;                                            //  0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetSessionPropertyBool_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESessionSettingSearchResult                  SearchResult;                                            //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         SettingValue;                                            //  0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetPlayerName_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          PlayerName;                                              //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetNumberOfNetworkPlayers_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      NumNetPlayers;                                           //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetNetPlayerIndex_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      NetPlayerIndex;                                          //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetExtraSettings_Params
    {
    public:
        OnlineSubsystemUtils::FBlueprintSessionResult                SessionResult;                                           //  0x0000(0x00B8)  (Parm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x00B8(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_GetCurrentUniqueBuildID_Params
    {
    public:
        int32_t                                                      UniqueBuildId;                                           //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_FindSessionPropertyIndexByName_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBlueprintResultSwitch                       Result;                                                  //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0010[0x3];                                   //  0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      OutIndex;                                                //  0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_FindSessionPropertyByName_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingsName;                                            //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBlueprintResultSwitch                       Result;                                                  //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0011[0x7];                                   //  0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FSessionPropertyKeyPair                      OutProperty;                                             //  0x0020(0x0020)  (Parm, OutParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_EqualEqual_UNetIDUnetID_Params
    {
    public:
        SportsScramble::FBPUniqueNetId                               A;                                                       //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::FBPUniqueNetId                               B;                                                       //  0x0020(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UAdvancedSessionsLibrary_AddOrModifyExtraSettings_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  SettingsArray;                                           //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  NewOrChangedSettings;                                    //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ModifiedSettingsArray;                                   //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_SetPrimitiveTrajectory_Params
    {
    public:
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0000(0x01F0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_ResumeTrajectory_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_RecreatePhysicsState_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_PauseTrajectory_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_OnRep_ClientTrajectoryPaused_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_NotifyPrimitiveDestroyed_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_NetResumeTrajectory_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_NetPauseTrajectory_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_NetDestroyPrimitive_Params
    {
    public:
        bool                                                         playOut;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_IsPrimitiveSimulatingPhysics_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_IsPrimitivePendingDestroy_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_IsPrimitiveInMotion_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_IsPrimitiveFollowingSpline_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_IsPrimitiveDestroyed_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_InitializePrimitiveTrajectory_Params
    {
    public:
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0000(0x01F0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetTrajectoryPaused_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveVisMesh_Params
    {
    public:
        Engine::UMeshComponent*                                      ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveTrajectory_Params
    {
    public:
        SportsScramble::FScramTrajectory                             ReturnValue;                                             //  0x0000(0x01F0)  (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveRotation_Params
    {
    public:
        CoreUObject::FQuat                                           ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveProperties_Params
    {
    public:
        SportsScramble::FScramPrimitiveProperties                    ReturnValue;                                             //  0x0000(0x0068)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitivePhysicalAngularVelocity_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveMotionState_Params
    {
    public:
        SportsScramble::FMotionState                                 ReturnValue;                                             //  0x0000(0x0040)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveLocation_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveLinearVelocity_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetPrimitiveComponent_Params
    {
    public:
        Engine::UPrimitiveComponent*                                 ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetFloorBouncesWithCurrentTrajectory_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_GetEnvironmentBouncesWithCurrentTrajectory_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveActor_DestroyPrimitive_Params
    {
    public:
        bool                                                         playOut;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_SetProxyGrabbable_Params
    {
    public:
        SportsScramble::AScramPrimitiveGrabbable*                    grabbable;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_OnGrabbableDeactivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_OnGrabbableActivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_IsLocallyGrabbed_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_InitialGrabInProgress_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_GrabbableIsTracked_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_GetProxyGrabbable_Params
    {
    public:
        SportsScramble::AScramPrimitiveGrabbable*                    ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_GetHidesAvatarHands_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_CurrentPlayer_Params
    {
    public:
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_CurrentHand_Params
    {
    public:
        SportsScramble::AScramPlayerHand*                            ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPrimitiveGrabbable_CurrentGrabberActor_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_SetImmuneToInstruments_Params
    {
    public:
        bool                                                         immune;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_SetHitsBallHitters_Params
    {
    public:
        bool                                                         hits;                                                    //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_SetHitByInstrument_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_IsImmuneToInstruments_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_GetHitsBallHitters_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_GetBallProperties_Params
    {
    public:
        SportsScramble::FScramBallProperties                         ReturnValue;                                             //  0x0000(0x00C8)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBall_EverHitByInstrument_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_TrySetFutureHit_Params
    {
    public:
        CoreUObject::UObject*                                        ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_SetVerticalFieldZone_Params
    {
    public:
        SportsScramble::EVerticalFieldZone                           verticalFieldZone;                                       //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_SetIsThrow_Params
    {
    public:
        bool                                                         isThrow;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_SetForceCharge_Params
    {
    public:
        bool                                                         shouldCharge;                                            //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_SetBallImbued_Params
    {
    public:
        bool                                                         Imbued;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnShotChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnRep_NetworkMotionState_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnRep_BowlingBall_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnImbuedChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_OnFloorResultChanged_Params
    {
    public:
        SportsScramble::EFloorResult                                 newFloorResult;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_IsRollingPitch_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_IsBallImbued_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetVerticalFieldZone_Params
    {
    public:
        SportsScramble::EVerticalFieldZone                           ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetShot_Params
    {
    public:
        SportsScramble::FBaseballShot                                ReturnValue;                                             //  0x0000(0x0003)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetIsThrow_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetForceCharge_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetFloorResult_Params
    {
    public:
        SportsScramble::EFloorResult                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBall_GetBaseballBallProperties_Params
    {
    public:
        SportsScramble::FBaseballBallProperties                      ReturnValue;                                             //  0x0000(0x0128)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallClassifier_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallClassifier_OnBallBounced_Params
    {
    public:
        SportsScramble::EBallState                                   ballState;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      numBounces;                                              //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallScrambleDisplay_SetIcon_Params
    {
    public:
        int32_t                                                      Index;                                                   //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::UTexture2D*                                          Icon;                                                    //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallScrambleDisplay_GoAway_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallSelector_TrySpawnScrambleTargets_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::EBaseballScrambleTargetLocations> validDisplays;                                           //  0x0000(0x0010)  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
        int32_t                                                      numToSpawn;                                              //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FChance                                      imbueChance;                                             //  0x0014(0x0004)  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
        bool                                                         localPlayerIsBatter;                                     //  0x0018(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallSelector_TrySetBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FBaseballBallScrambleProperties> ballProperties;                                          //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallSelector_TryChangeBallTable_Params
    {
    public:
        Engine::UDataTable*                                          BallTable;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballBallSelector_ClearScrambleTargets_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBaseballGlobalDataAsset_GetBatterPlayAreas_Params
    {
    public:
        CoreUObject::FBox                                            minPlayArea;                                             //  0x0000(0x001C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FBox                                            maxPlayArea;                                             //  0x001C(0x001C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FBox                                            maxHazardArea;                                           //  0x0038(0x001C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        SportsScramble::EBattingSide                                 Side;                                                    //  0x0054(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramInstrument_GetLeverVelocity_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramInstrument_GetInstrumentProperties_Params
    {
    public:
        SportsScramble::FScramInstrumentProperties                   ReturnValue;                                             //  0x0000(0x0068)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrument_OnInstrumentBreakEvent_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrument_IsPendingRelease_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrument_InstrumentLowHealth_Params
    {
    public:
        float                                                        health;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrument_GetBaseballInstrumentProperties_Params
    {
    public:
        SportsScramble::FBaseballInstrumentProperties                ReturnValue;                                             //  0x0000(0x00D0)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrumentSelector_TrySetInstruments_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FBaseballInstrumentEntryProperties> instrumentEntries;                                       //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrumentSelector_TryChangeInstrumentTable_Params
    {
    public:
        Engine::UDataTable*                                          InstrumentTable;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrumentSelector_SetSelectorVisible_Params
    {
    public:
        bool                                                         visible;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrumentSelector_OnRep_ClientSpawnedInstruments_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballInstrumentSelector_InstrumentSelected_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGlove_GetGrabberHandedness_Params
    {
    public:
        SportsScramble::EScramHandedness                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGlove_ForceGrab_Params
    {
    public:
        Engine::AActor*                                              GrabbableActor;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_OnScrambleBallGrabbed_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_OnRep_ClientSpawnedBalls_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_GetScrambleOptionsFull_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_GetScrambleOptions_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FMittSpawnInfo>           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_ClearScrambleOptions_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballMitt_AddScrambleBallWithType_Params
    {
    public:
        SportsScramble::ABaseballBall*                               BallClass;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         Imbued;                                                  //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballPitchingPropManager_SpawnRegisteredObjects_Params
    {
    public:
        SportsScramble::EBaseballBallType                            BallType;                                                //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballPitchingPropManager_ClearAllObjects_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBallTrigger_OnTriggered_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBallTrigger_IsFutureHitPending_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBlobShadowComponent_ScaleOut_Params
    {
    public:
        float                                                        scaleOutTime;                                            //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBlobShadowComponent_ScaleIn_Params
    {
    public:
        float                                                        scaleInTime;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBlobShadowComponent_FadeOut_Params
    {
    public:
        float                                                        fadeOutTime;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBlobShadowComponent_FadeIn_Params
    {
    public:
        float                                                        fadeInTime;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_SetPlayer_Params
    {
    public:
        Engine::AActor*                                              Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_SetPinsetter_Params
    {
    public:
        SportsScramble::ABowlingPinsetter*                           pinsetter;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_OnBallReleased_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_OnBallOut_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         pit;                                                     //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         restricted;                                              //  0x0009(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_OnBallGrabbed_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_OnBallDestroyed_Params
    {
    public:
        Engine::AActor*                                              pBallActor;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_IsLaneReady_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetScore_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetPlayer_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetFloorZ_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetFloorMaterial_Params
    {
    public:
        Engine::UPhysicalMaterial*                                   ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::ABowlingBall*>            ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetBallReturn_Params
    {
    public:
        SportsScramble::ABowlingBallReturn*                          ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetAlley_Params
    {
    public:
        Engine::AActor*                                              Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABowlingAlley*                               ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_GetActiveLane_Params
    {
    public:
        SportsScramble::ABowlingLane*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_ClearBalls_Params
    {
    public:
        bool                                                         includeThrownBalls;                                      //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_ClearBall_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_AnyThrownBallsRemaining_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_AddInstigatorBallCode_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAlley_AddBall_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingAvatar_OnBallReleased_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_SetValidRoll_Params
    {
    public:
        bool                                                         validRoll;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_OnThrowChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_OnHitPin_Params
    {
    public:
        SportsScramble::ABowlingPin*                                 Pin;                                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_OnHitLane_Params
    {
    public:
        SportsScramble::ABowlingLane*                                Lane;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        bounceSpeed;                                             //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_OnHitFootballBlocker_Params
    {
    public:
        SportsScramble::ABowlingFootballBlocker*                     FootballBlocker;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_OnFloorResultChanged_Params
    {
    public:
        SportsScramble::EFloorResult                                 newFloorResult;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_IsBouncing_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_GetValidRoll_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_GetThrow_Params
    {
    public:
        SportsScramble::FBowlingThrow                                ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_GetFloorResult_Params
    {
    public:
        SportsScramble::EFloorResult                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBall_GetBowlingBallProperties_Params
    {
    public:
        SportsScramble::FBowlingBallProperties                       ReturnValue;                                             //  0x0000(0x0180)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_SetSlideDirection_Params
    {
    public:
        bool                                                         Forward;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_ResetBallTable_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_OnTrackMotionStop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_OnTrackMotionStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_OnReturnSlideStopped_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_OnReturnSlideStarted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_IncrementBallSelection_Params
    {
    public:
        SportsScramble::ABowlingBall*                                BallClass;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_GetReturnTrack_Params
    {
    public:
        SportsScramble::UBowlingBallReturnTrack*                     ReturnValue;                                             //  0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturn_GetRandomBall_Params
    {
    public:
        SportsScramble::ABowlingBall*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnRep_ClientTrack_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnRep_ClientBall_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnMotionStop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnMotionStart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnBallGrabbed_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_OnBallAttached_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_IsDisposing_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_IsBallAttached_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingBallReturnSlot_GetAttachedBall_Params
    {
    public:
        SportsScramble::ABowlingBall*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingBallReturnTrack_SetupSlot_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABowlingBallReturnSlot*                      SlotClass;                                               //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingBallReturnTrack_HasBall_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingBallReturnTrack_GetNumOccupiedSlots_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingBallReturnTrack_FreeLastSlot_Params
    {
    public:
        CoreUObject::FVector                                         disposalPoint;                                           //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingCenterScoreboard_GetTimeRemaining_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingFootballBlocker_StopBlocker_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingFootballBlocker_StartBlocker_Params
    {
    public:
        CoreUObject::FTransform                                      centerTransform;                                         //  0x0000(0x0030)  (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        initialAngleDegrees;                                     //  0x0030(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingFootballBlocker_DeferredInit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingForceMagnet_DirectSuckStarted_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingGlove_OnThrowFinalized_Params
    {
    public:
        SportsScramble::ABowlingBall*                                Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingGutterTracker_SimpleHitActor_Params
    {
    public:
        Engine::AActor*                                              OtherActor;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingGutterTracker_ForceClearGutter_Params
    {
    public:
        bool                                                         ClearRight;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ClearLeft;                                               //  0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingGutterTracker_FireRightParticle_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingGutterTracker_FireLeftParticle_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_ShowBaseballLane_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_ShouldUsePins_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_HideBaseballLane_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_GetDownLaneVector_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLane_GetAlley_Params
    {
    public:
        SportsScramble::ABowlingAlley*                               ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLaneFlipper_SetLaunchTarget_Params
    {
    public:
        Engine::USceneComponent*                                     Target;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingLaneFlipper_FlipFlipper_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPin_WasKnockedDown_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPin_StartCheckingForKnockedDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPin_OnKnockedDown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPin_IsAtRest_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPinsetter_ActivePinsCanBeScored_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPlinko_ResolveBall_Params
    {
    public:
        SportsScramble::ABowlingPlinkoBall*                          Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        localY;                                                  //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPlinkoBall_SetWidget_Params
    {
    public:
        UMG::UWidget*                                                Widget;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingPlinkoBall_SetResolving_Params
    {
    public:
        bool                                                         resolving;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_TryGetFrameScoreStatic_Params
    {
    public:
        int32_t                                                      score;                                                   //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FBowlingFrameSet                             frameSet;                                                //  0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        int32_t                                                      frameIndex;                                              //  0x0028(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x002C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_TryGetFrameScore_Params
    {
    public:
        int32_t                                                      score;                                                   //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Player;                                                  //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      frameIndex;                                              //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_ResetFrames_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_IsGameDone_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_GetGameScore_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_GetFrameScoreUpTo_Params
    {
    public:
        bool                                                         complete;                                                //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FBowlingFrameSet                             frameSet;                                                //  0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        int32_t                                                      maxFrameIndex;                                           //  0x0028(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x002C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_GetCurrentPlayer_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_GetCurrentFrameIndex_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_AreFramesDone_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingScoreKeeper_AddRoll_Params
    {
    public:
        bool                                                         frameDone;                                               //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      Player;                                                  //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Roll;                                                    //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_UpdateAnimation_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_UncoverAlien_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_RunScoreFX_Params
    {
    public:
        Engine::AActor*                                              Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_RunEndLaneFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_PatternRemover_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_HideAlien_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_GetRelativePosition_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_GetGroup_Params
    {
    public:
        SportsScramble::ABowlingSpaceInvaderGroup*                   ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_GetAlienID_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_GetActive_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderAlien_AddScore_Params
    {
    public:
        int32_t                                                      ScoreValue;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Ball;                                                    //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_SetBaseTimeStep_Params
    {
    public:
        float                                                        newBaseTimeStep;                                         //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_NotifyResetAlienGroup_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_IsGroupClear_Params
    {
    public:
        CoreUObject::FVector                                         WorldPosition;                                           //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        clearMargin;                                             //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_IsGameplayRunning_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_GetCurrentTimeStep_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_EndGameplay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_DeferredInitComplete_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_DeferredInit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_ChangeTimeStep_Params
    {
    public:
        float                                                        newTimeStep;                                             //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderGroup_BeginGameplay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_Server_UpdateAliens_Params
    {
    public:
        Engine::FVector_NetQuantize                                  newWorldPos;                                             //  0x0000(0x000C)  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FQuat                                           newWorldRot;                                             //  0x0010(0x0010)  (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        Engine::USoundBase*                                          pSoundAsset;                                             //  0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_Server_ShutdownAliens_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_Server_PrepareAliens_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_NetMulticast_UpdateAliens_Params
    {
    public:
        Engine::FVector_NetQuantize                                  newWorldPos;                                             //  0x0000(0x000C)  (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FQuat                                           newWorldRot;                                             //  0x0010(0x0010)  (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        Engine::USoundBase*                                          pSoundAsset;                                             //  0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_NetMulticast_ShutdownAliens_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABowlingSpaceInvaderNetHelper_NetMulticast_PrepareAliens_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingSpinKicker_SimpleBeginOverlap_Params
    {
    public:
        Engine::AActor*                                              OtherActor;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingUtils_SwitchHasBowlingAuthority_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBowlingAuthority                            Branch;                                                  //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingUtils_ObjectHasBowlingAuthority_Params
    {
    public:
        CoreUObject::UObject*                                        Object;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UBowlingUtils_HasBowlingAuthority_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UCancelOculusMatchmakingCallbackProxy_CancelOculusMatchmaking_Params
    {
    public:
        SportsScramble::UCancelOculusMatchmakingCallbackProxy*       ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UDestroyOculusSessionCallbackProxy_DestroyOculusSession_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::APlayerController*                                   PlayerController;                                        //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UDestroyOculusSessionCallbackProxy*          ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramMeshShadow_GetShadowSample_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UFanMeshShadow_GetInstancedMeshFloatValue_Params
    {
    public:
        float                                                        shadowSample;                                            //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AFieldingPlayerManager_SetTimeScale_Params
    {
    public:
        SportsScramble::EVerticalFieldZone                           zone;                                                    //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FMinMaxFloat                                 TimeScale;                                               //  0x0004(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AFieldingPlayerManager_OnBallInPlay_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EVerticalFieldZone                           zone;                                                    //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AFieldingPlayerManager_GetTimeScale_Params
    {
    public:
        SportsScramble::EVerticalFieldZone                           zone;                                                    //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FMinMaxFloat                                 ReturnValue;                                             //  0x0004(0x0008)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AFlyTextLabel_SetText_Params
    {
    public:
        BasicTypes::FText                                            Text;                                                    //  0x0000(0x0018)  (Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AFlyTextLabel_SetScore_Params
    {
    public:
        int32_t                                                      score;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bonus;                                                   //  0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FName                                            combineTag;                                              //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UGameInviteUtils_GetFriends_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UHoopsLaneIndicator_StopIndicator_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UHoopsLaneIndicator_StartIndicator_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UHoopsLaneIndicator_SetFlipper_Params
    {
    public:
        SportsScramble::ABowlingLaneFlipper*                         Flipper;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UHoopsLaneIndicator_ProgressIndicator_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UInstancedMesh_UnregisterInstance_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UInstancedMesh_SetInstanceFloatValue_Params
    {
    public:
        float                                                        FloatValue;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UInstancedMesh_RegisterInstance_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UInviteFriendCallbackProxy_InviteFriend_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FScramFriend                                 invitedFriend;                                           //  0x0008(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::UInviteFriendCallbackProxy*                  ReturnValue;                                             //  0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UJoinOculusSessionCallbackProxy_JoinOculusSession_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        OnlineSubsystemUtils::FBlueprintSessionResult                SearchResult;                                            //  0x0008(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::UJoinOculusSessionCallbackProxy*             ReturnValue;                                             //  0x00C0(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_TryMakeActiveMenuInstrument_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_SetPointerMenuOption_Params
    {
    public:
        bool                                                         useMenuPointer;                                          //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_SetLaserPointerVisibility_Params
    {
    public:
        bool                                                         IsVisible;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_OnNotifyInputRelease_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_OnNotifyInputPress_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_OnChangePointerType_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMenuInstrument_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_StopMusic_Params
    {
    public:
        float                                                        FadeTime;                                                //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_Stop_Params
    {
    public:
        float                                                        FadeTime;                                                //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_PlayMusicEntry_Params
    {
    public:
        BasicTypes::FName                                            EntryName;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FadeTime;                                                //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_PlayMusic_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        StartTime;                                               //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Volume;                                                  //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FadeTime;                                                //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_PlayEntry_Params
    {
    public:
        BasicTypes::FName                                            EntryName;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FadeTime;                                                //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_Play_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        StartTime;                                               //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Volume;                                                  //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        FadeTime;                                                //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_IsPlaying_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AMusicManager_IsMusicPlaying_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ANetworkMotionStateManager_Server_ApplyReplicatedStates_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FNetworkMotionState>      States;                                                  //  0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ANetworkMotionStateManager_OnRep_ReplicatedStates_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APitchingAvatar_OnDrop_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APitchingAvatar_OnBaseballEvent_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APitchingAvatar_OnBallGrabbed_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class IPitchingPropInterface_SetBattingPlayer_Params
    {
    public:
        Engine::AActor*                                              batterActor;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlay_NetMulticast_PlayByPlayEvent_Params
    {
    public:
        int32_t                                                      eventIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Player;                                                  //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlay_IsQueuedOrPlaying_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlayBaseball_OnBaseballEvent_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlayBaseball_BatChange_Params
    {
    public:
        SportsScramble::EBaseballInstrumentType                      newBatType;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlayBaseball_BallChange_Params
    {
    public:
        SportsScramble::EBaseballBallType                            newBallType;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlayTennis_SendPlayByPlayEvent_Params
    {
    public:
        SportsScramble::ETennisPlayByPlayEvent                       playByPlayEvent;                                         //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Player;                                                  //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class APlayByPlayTennis_RacquetChange_Params
    {
    public:
        Engine::AActor*                                              Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FTennisInstrumentProperties                  instrumentProps;                                         //  0x0008(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBallManager_SetMaxBalls_Params
    {
    public:
        int32_t                                                      maxBalls;                                                //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseAI_PlaySpawnAnimation_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballBatterAI_PlayBatSound_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        BallSpeed;                                               //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_SetState_Params
    {
    public:
        SportsScramble::ECatcherAIState                              newState;                                                //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_SetGloveMode_Params
    {
    public:
        SportsScramble::ECatcherGloveMode                            gloveMode;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramSkill                                  Skill;                                                   //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_OnBallDropped_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_OnBallCaught_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_GetGloveMode_Params
    {
    public:
        SportsScramble::AScramSportManagerBaseball*                  pBaseball;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ECatcherGloveMode                            ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballCatcherAI_BallCaught_Params
    {
    public:
        Engine::AActor*                                              Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Position;                                                //  0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBaseballBallType                            BallType;                                                //  0x0014(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         Imbued;                                                  //  0x0015(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballFielderAI_OnBaseballEvent_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballFielderAI_NetMulticast_SetDesiredAnimState_Params
    {
    public:
        SportsScramble::EBaseballFielderAnimState                    animState;                                               //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballPitcherAI_PlayMittSound_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        BallSpeed;                                               //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballPitcherAI_GetScrambleBallClass_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballRunnerAI_OnSpawn_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballRunnerAI_OnDespawn_Params
    {
    public:
        CoreUObject::FVector                                         Location;                                                //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballRunnerAI_HasReachedHome_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramBaseballRunnerAI_GetDestinationBase_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScrambleTarget_GetAiValue_Params
    {
    public:
        SportsScramble::EScrambleTargetAiValue                       Value;                                                   //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATextureSamplerSettings_SampleTexture_Params
    {
    public:
        CoreUObject::FVector                                         worldPos;                                                //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FColor                                          DefaultColor;                                            //  0x000C(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FColor                                          ReturnValue;                                             //  0x0010(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramCameraCover_EnqueueVignette_Params
    {
    public:
        SportsScramble::FCoverVignette                               vignette;                                                //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrajectoryInfluencerActor_SetInfluencerEnabled_Params
    {
    public:
        bool                                                         Enabled;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramCourt_SetScramCourtMatchType_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramCourtMatchType                         matchType;                                               //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramCourt_GetScramCourtMatchType_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramCourtMatchType                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballAI_SetTeam2_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballAI_SetTeam1_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballAI_SetPositionIndex_Params
    {
    public:
        int32_t                                                      Index;                                                   //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballAI_GetTeam_Params
    {
    public:
        SportsScramble::EScramDodgeballTeam                          ReturnValue;                                             //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballAI_GetPositionIndex_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballGlove_PlayHaptic_Params
    {
    public:
        Engine::UHapticFeedbackEffect_Base*                          haptic;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Scale;                                                   //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballGlove_ItemThrown_Params
    {
    public:
        Engine::AActor*                                              Item;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Speed;                                                   //  0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballGlove_ItemPassed_Params
    {
    public:
        Engine::AActor*                                              Item;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballGlove_ItemCaught_Params
    {
    public:
        Engine::AActor*                                              Item;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Speed;                                                   //  0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramInviteManager_HasAcceptedShellInvite_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramInviteManager_GetInviteManager_Params
    {
    public:
        SportsScramble::AScramInviteManager*                         ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramLauncher_TryCalculateTrajectory_Params
    {
    public:
        SportsScramble::FScramTrajectory                             outTrajectory;                                           //  0x0000(0x01F0)  (Parm, OutParm, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         launchOrigin;                                            //  0x01F0(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        horizontalVariance;                                      //  0x01FC(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        verticalVariance;                                        //  0x0200(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0204(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramLauncher_SetScrambleMods_Params
    {
    public:
        Engine::UDataTable*                                          DataTable;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramLauncher_SetMinSpaceBetweenLeftRightMargins_Params
    {
    public:
        float                                                        minSpace;                                                //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramLauncher_LaunchWithTrajectory_Params
    {
    public:
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0000(0x01F0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  ReturnValue;                                             //  0x01F0(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramLauncher_Launch_Params
    {
    public:
        float                                                        horizontalVariance;                                      //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        verticalVariance;                                        //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_SetAvatarLook_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FAvatarLook                                  AvatarLook;                                              //  0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_UpdateTennisBallTrajectory_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FTennisBallNetworkUpdate                     Update;                                                  //  0x0010(0x0260)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_UpdateStickDrivenCatcherGlove_Params
    {
    public:
        SportsScramble::ABaseballThrowingGlove*                      pGlove;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        leftRight;                                               //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        upDown;                                                  //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_UpdateDodgeballBallTrajectory_Params
    {
    public:
        SportsScramble::ADodgeballBall*                              pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::FDodgeballShot                               newShot;                                                 //  0x0200(0x0003)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_UpdateBowlingBallTrajectory_Params
    {
    public:
        SportsScramble::ABowlingBall*                                pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::FBowlingThrow                                newThrow;                                                //  0x0200(0x0004)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_UpdateBaseballBallTrajectory_Params
    {
    public:
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FBaseballNetworkUpdate                       Update;                                                  //  0x0010(0x0200)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_StartFollowingTrajectoryWithSlowDown_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectoryToFollow;                                      //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
        float                                                        TimeScale;                                               //  0x0200(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Delay;                                                   //  0x0204(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Duration;                                                //  0x0208(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        maxStepDown;                                             //  0x020C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_StartFollowingTrajectory_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0005[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectoryToFollow;                                      //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SportManagerReady_Params
    {
    public:
        SportsScramble::AScramSportManagerBase*                      pSportManager;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SpawnPitcherScrambleOptions_Params
    {
    public:
        SportsScramble::ABaseballMitt*                               pMitt;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SetTennisBallRallyCount_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      rallyCount;                                              //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SetPlayerPreferences_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FScramPlayerPreferences                      preferences;                                             //  0x0008(0x000C)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SetPlayerPausedRemote_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         paused;                                                  //  0x0009(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SetFutureBallHit_Params
    {
    public:
        SportsScramble::FFutureBallHit                               FutureBallHit;                                           //  0x0000(0x0030)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SetAvatarLook_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FAvatarLook                                  AvatarLook;                                              //  0x0008(0x0020)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ServeTriggerSpawnBall_Params
    {
    public:
        SportsScramble::AScramPlayerServeTrigger*                    pServeTrigger;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  BallClass;                                               //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      SpawnTransform;                                          //  0x0010(0x0030)  (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ServeBallSpawned_Params
    {
    public:
        SportsScramble::AScramPlayerServeTrigger*                    pServeTrigger;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ServeBallGrabbed_Params
    {
    public:
        SportsScramble::AScramPlayerServeTrigger*                    pServeTrigger;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_SendPlayByPlayEvent_Params
    {
    public:
        int32_t                                                      eventIndex;                                              //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0006[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pPlayer;                                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RequestAvatarLook_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteGameDone_Params
    {
    public:
        SportsScramble::AScramSportManagerBase*                      pSportManager;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteApplicationWillTerminate_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteApplicationWillEnterBackground_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteApplicationWillDeactivate_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteApplicationHasReactivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_RemoteApplicationHasEnteredForeground_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ReceiveHeartbeat_Params
    {
    public:
        uint16_t                                                     remotePendingNetGeneration;                              //  0x0000(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint16_t                                                     remoteEstablishedNetGeneration;                          //  0x0002(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_PingHandShake_Params
    {
    public:
        float                                                        clientPingTime;                                          //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_MultiplayerGameResume_Params
    {
    public:
        bool                                                         isCalledByHost;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_MultiplayerGamePause_Params
    {
    public:
        bool                                                         isCalledByHost;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_HandshakeActorReady_Params
    {
    public:
        SportsScramble::AScramHandshakeActor*                        pHandshakeActor;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_GrabberRelease_Params
    {
    public:
        Engine::AActor*                                              pGrabberActor;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_GrabberGrab_Params
    {
    public:
        Engine::AActor*                                              pGrabberActor;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              pGrabbableActor;                                         //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         snap;                                                    //  0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_DrawDebugSphere_Params
    {
    public:
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FVector_NetQuantize10                                Center;                                                  //  0x0008(0x000C)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        Radius;                                                  //  0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Segments;                                                //  0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FColor                                          Color;                                                   //  0x001C(0x0004)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LifeTime;                                                //  0x0020(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_DestroyPrimitive_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         playOut;                                                 //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0007[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ClearTennisBallTrajectoryOwnership_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_ClearPausedTrajectory_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Tennis_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0008[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ETennisEvent                                 TennisEvent;                                             //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Object_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0009[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        pObjectParameter;                                        //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Null_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0010[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Collision_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0011[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              pOtherActor;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitLocation;                                             //  0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitNormal;                                               //  0x0024(0x000C)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Bowling_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0012[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBowlingEvent                                BowlingEvent;                                            //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0013[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pBowlingBall;                                            //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BroadcastScramEvent_Baseball_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0014[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBaseballEvent                               BaseballEvent;                                           //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0015[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BaseballCatcherCaught_Params
    {
    public:
        Engine::AActor*                                              pCatcher;                                                //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Server_BaseballBallPitched_Params
    {
    public:
        SportsScramble::ABaseballThrowingGlove*                      pGlove;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ThrowSpeed;                                              //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_UpdateTennisBallTrajectory_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0016[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FTennisBallNetworkUpdate                     Update;                                                  //  0x0010(0x0260)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_UpdateStickDrivenCatcherGlove_Params
    {
    public:
        SportsScramble::ABaseballThrowingGlove*                      pGlove;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        leftRight;                                               //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        upDown;                                                  //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_UpdateBowlingBallTrajectory_Params
    {
    public:
        SportsScramble::ABowlingBall*                                pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0017[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::FBowlingThrow                                newThrow;                                                //  0x0200(0x0004)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_UpdateBaseballBallTrajectory_Params
    {
    public:
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0018[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FBaseballNetworkUpdate                       Update;                                                  //  0x0010(0x0200)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_StartFollowingTrajectoryWithSlowDown_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0019[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectoryToFollow;                                      //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
        float                                                        TimeScale;                                               //  0x0200(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Delay;                                                   //  0x0204(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Duration;                                                //  0x0208(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        maxStepDown;                                             //  0x020C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_StartFollowingTrajectory_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0020[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::FScramTrajectory                             trajectoryToFollow;                                      //  0x0010(0x01F0)  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetTimeScale_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        TimeScale;                                               //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetTennisBallRallyCount_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      rallyCount;                                              //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetPlayerPreferences_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FScramPlayerPreferences                      preferences;                                             //  0x0008(0x000C)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetPlayerPausedRemote_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         paused;                                                  //  0x0009(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetFutureBallHit_Params
    {
    public:
        SportsScramble::FFutureBallHit                               FutureBallHit;                                           //  0x0000(0x0030)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_SetAvatarLook_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FAvatarLook                                  AvatarLook;                                              //  0x0008(0x0020)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_ServeBallSpawned_Params
    {
    public:
        SportsScramble::AScramPlayerServeTrigger*                    pServeTrigger;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_ServeBallGrabbed_Params
    {
    public:
        SportsScramble::AScramPlayerServeTrigger*                    pServeTrigger;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  pBall;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteGameDone_Params
    {
    public:
        SportsScramble::AScramSportManagerBase*                      pSportManager;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteApplicationWillTerminate_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteApplicationWillEnterBackground_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteApplicationWillDeactivate_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteApplicationHasReactivated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_RemoteApplicationHasEnteredForeground_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_ReceiveHeartbeat_Params
    {
    public:
        uint16_t                                                     remotePendingNetGeneration;                              //  0x0000(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint16_t                                                     remoteEstablishedNetGeneration;                          //  0x0002(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_PingHandShake_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_GrabberRelease_Params
    {
    public:
        Engine::AActor*                                              pGrabberActor;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_GrabberGrab_Params
    {
    public:
        Engine::AActor*                                              pGrabberActor;                                           //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              pGrabbableActor;                                         //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         snap;                                                    //  0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_DrawDebugSphere_Params
    {
    public:
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::FVector_NetQuantize10                                Center;                                                  //  0x0008(0x000C)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        Radius;                                                  //  0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Segments;                                                //  0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FColor                                          Color;                                                   //  0x001C(0x0004)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LifeTime;                                                //  0x0020(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_DestroyPrimitive_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         playOut;                                                 //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0021[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_ClearTennisBallTrajectoryOwnership_Params
    {
    public:
        SportsScramble::ATennisBall*                                 pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_ClearPausedTrajectory_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        pPrimitive;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Tennis_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0022[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ETennisEvent                                 TennisEvent;                                             //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Object_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0023[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        pObjectParameter;                                        //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Null_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0024[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Collision_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0025[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              pOtherActor;                                             //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitLocation;                                             //  0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitNormal;                                               //  0x0024(0x000C)  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Bowling_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0026[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBowlingEvent                                BowlingEvent;                                            //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0027[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pBowlingBall;                                            //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramNetworkHelperComponent_Client_BroadcastScramEvent_Baseball_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0028[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PlayerIndex;                                             //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBaseballEvent                               BaseballEvent;                                           //  0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0029[0x3];                                   //  0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPauseCapsule_ShowCapsule_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPauseCapsule_HideCapsule_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPauseManager_QueuePauseEvent_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  PauseEvent;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SetWorldTimeDilation_Params
    {
    public:
        float                                                        timeDilation;                                            //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SetScriptedFadeOutOpacity_Params
    {
    public:
        float                                                        Opacity;                                                 //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SetNetVisible_Params
    {
    public:
        bool                                                         netVisible;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SetAvatarMaterials_Params
    {
    public:
        SportsScramble::FAvatarLook                                  AvatarLook;                                              //  0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SetAnchor_Params
    {
    public:
        CoreUObject::FTransform                                      anchor;                                                  //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FBox                                            minPlayArea;                                             //  0x0030(0x001C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FBox                                            maxPlayArea;                                             //  0x004C(0x001C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FBox                                            maxHazardArea;                                           //  0x0068(0x001C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_UpdateTransforms_Params
    {
    public:
        SportsScramble::FPlayerTransforms                            Transforms;                                              //  0x0000(0x00C0)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        uint32_t                                                     updateCounter;                                           //  0x00C0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_UpdatePlayAreaDiagonal_Params
    {
    public:
        float                                                        newPlayAreaDiagonal;                                     //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_SpawnHands_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_SetTennisReturnData_Params
    {
    public:
        SportsScramble::FScramPartialTransform                       remoteTransform;                                         //  0x0000(0x0020)  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        returnTime;                                              //  0x0020(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_SetPlayerReadyForMatch_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_SetNetVisible_Params
    {
    public:
        bool                                                         netVisible;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Server_ClientSelectedAvatar_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_SavePreferences_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_ResetAnchor_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_RecenterDetected_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_PlayerResume_Params
    {
    public:
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         multiplayer;                                             //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_PlayerPause_Params
    {
    public:
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         multiplayer;                                             //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnRep_NetVisible_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnRep_ClientTransforms_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnRep_ClientPlayAreaDiagonal_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnRecenter_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnPlayerOutOfBoundary_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnTransform;                                         //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_OnPlayerEnterBoundary_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_NetSetPreferences_Params
    {
    public:
        SportsScramble::FScramPlayerPreferences                      preferences;                                             //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_LocalAvatarSelected_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_LoadPreferences_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_IsPlayerRestricted_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_IsPlayerPaused_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_IsPlayerFadedOut_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_IsInitComplete_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_HasBegunPlay_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetWorldTimeDilation_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetScriptedFadeOutOpacity_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetPreferredHandedness_Params
    {
    public:
        SportsScramble::EScramHandedness                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetPreferences_Params
    {
    public:
        SportsScramble::FScramPlayerPreferences                      ReturnValue;                                             //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetPlayAreaTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetOrthogonalAnchor_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetHand_Params
    {
    public:
        SportsScramble::EScramHandedness                             Handedness;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::AScramPlayerHand*                            ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetDominantStroke_Params
    {
    public:
        SportsScramble::EScramStroke                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetDominantHandedness_Params
    {
    public:
        SportsScramble::EScramHandedness                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_GetAnchor_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_ForceChangeGrabbable_Params
    {
    public:
        SportsScramble::AScramPrimitiveGrabbable*                    NewGrabbableClass;                                       //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPlayerHand*                            SpecificHand;                                            //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPrimitiveGrabbable*                    ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_EnsureHasHands_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_DestroyAllGrabbables_Params
    {
    public:
        bool                                                         playOut;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_DeferredInit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_ConstrainToPlayArea_Params
    {
    public:
        CoreUObject::FVector                                         Point;                                                   //  0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Radius;                                                  //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_Client_ServerSelectedAvatar_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_ChangeAvatarBlueprint_Params
    {
    public:
        SportsScramble::AScramAvatar*                                avatarClass;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         PlaySpawnAnimation;                                      //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayer_CanBeSeen_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerBoundary_ResetPlayerAnchor_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerBoundary_ResetHazardLine_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_UnpauseLocalHeartbeat_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_StopLocalHeartbeat_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_StopHeartbeat_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_StartHeartbeat_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_ServerSetSportPreferences_Params
    {
    public:
        SportsScramble::FScramSportPreferences                       clientPreferences;                                       //  0x0000(0x0003)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_ResumeHeartbeatEvents_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_RestartHeartbeat_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_PauseLocalHeartbeat_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_HasStartedHeartbeat_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_DEBUGForceHeartbeatTimeout_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerController_ClientRequestSportPreferences_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_SpawnAndGrabActor_Params
    {
    public:
        Engine::AActor*                                              GrabbableClass;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_ServerGrabSpawnedActor_Params
    {
    public:
        Engine::AActor*                                              GrabbableActor;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_Server_SpawnAndGrabActor_Params
    {
    public:
        Engine::AActor*                                              ActorClass;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      SpawnTransform;                                          //  0x0010(0x0030)  (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_OnRep_ClientSpawnedActor_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_OnGrabbableHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GrabberIsTracked_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GetPlayer_Params
    {
    public:
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GetGrabberVerticalStroke_Params
    {
    public:
        SportsScramble::EScramStroke                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GetGrabberStroke_Params
    {
    public:
        SportsScramble::EScramStroke                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GetGrabberHorizontalStroke_Params
    {
    public:
        SportsScramble::EScramStroke                                 ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_GetGrabberHandedness_Params
    {
    public:
        SportsScramble::EScramHandedness                             ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_ForceReleaseCurrentGrabbable_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_ForceGrab_Params
    {
    public:
        Engine::AActor*                                              GrabbableActor;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_DestroyCurrentGrabbable_Params
    {
    public:
        bool                                                         playOut;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_DeferredInit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerHand_CurrentGrabbableActor_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerTrigger_OnPlayerStay_Params
    {
    public:
        SportsScramble::AScramPlayer*                                Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerTrigger_OnPlayerExit_Params
    {
    public:
        SportsScramble::AScramPlayer*                                Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerTrigger_OnPlayerEnter_Params
    {
    public:
        SportsScramble::AScramPlayer*                                Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_Show_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_SetPlayerServing_Params
    {
    public:
        bool                                                         shouldServe;                                             //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_SetAllowRespawn_Params
    {
    public:
        bool                                                         canSpawn;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_ServeBallSpawned_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_ServeBallGrabbed_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_RespawnBall_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_ResetServeTrigger_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_OnRep_ClientBall_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_Hide_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_HandleServeTrajectory_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_HandlePostHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_HandleBallGrabbed_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_GetPlayerServing_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_GetBall_Params
    {
    public:
        SportsScramble::AScramBall*                                  ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_GetAllowRespawn_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramPlayerServeTrigger_DespawnCurrentBall_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_StopSavingSportState_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_SetSelectableBallClass_Params
    {
    public:
        Engine::AActor*                                              BallClass;                                               //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_ServerReady_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_SaveSportState_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_OnHeartbeatSustained_Params
    {
    public:
        SportsScramble::AScramPlayerController*                      pPlayerController;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_OnHeartbeatDisconnected_Params
    {
    public:
        SportsScramble::AScramPlayerController*                      pPlayerController;                                       //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_OnGameDone_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_LocalGameDone_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_GetPlayer_Params
    {
    public:
        int32_t                                                      Index;                                                   //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBase_GetOtherPlayer_Params
    {
    public:
        Engine::AActor*                                              Player;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SetScrambleBallProperties_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FBaseballBallScrambleProperties> Properties;                                              //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SetBattingSkillOverride_Params
    {
    public:
        bool                                                         shouldOverride;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramSkill                                  skillLevel;                                              //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SetBall_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SetAllowPitch_Params
    {
    public:
        bool                                                         allowPitch;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SendBaseballEvent_Params
    {
    public:
        SportsScramble::EBaseballEvent                               BaseballEvent;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_SaveBaseballState_Params
    {
    public:
        int32_t                                                      VisitorsScore;                                           //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      HomeScore;                                               //  0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Inning;                                                  //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         TopOfInning;                                             //  0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         FirstPitchOfInning;                                      //  0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x2];                                   //  0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      Outs;                                                    //  0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Strikes;                                                 //  0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABaseballInstrument*                         BatterInstrument;                                        //  0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FMittSpawnInfo>           PitcherScrambleOptions;                                  //  0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_RestartGame_Params
    {
    public:
        bool                                                         RestoringGame;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_OnStrikeZoneHit_Params
    {
    public:
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramStrikeResult                           Result;                                                  //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_OnRunnerSpawned_Params
    {
    public:
        SportsScramble::AScramBaseballRunnerAI*                      runner;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_OnBallDeleted_Params
    {
    public:
        SportsScramble::ABaseballBall*                               Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_LoadBaseballState_Params
    {
    public:
        int32_t                                                      VisitorsScore;                                           //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      HomeScore;                                               //  0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Inning;                                                  //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         TopOfInning;                                             //  0x000C(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         FirstPitchOfInning;                                      //  0x000D(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x2];                                   //  0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      Outs;                                                    //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Strikes;                                                 //  0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ABaseballInstrument*                         BatterInstrument;                                        //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FMittSpawnInfo>           PitcherScrambleOptions;                                  //  0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetUnclassifiedBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetScrambleBallProperties_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::FBaseballBallScrambleProperties> ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetPitcher_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetPitchedBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetGameRunning_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetFieldedBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetBatterRunAdvantage_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetBatter_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_GetBalls_Params
    {
    public:
        BasicTypes::TArray<SportsScramble::ABaseballBall*>           ReturnValue;                                             //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_DeleteBall_Params
    {
    public:
        SportsScramble::ABaseballBall*                               pBall;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_BaseballEvent_Params
    {
    public:
        SportsScramble::EBaseballEvent                               BaseballEvent;                                           //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FVector                                         Location;                                                //  0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBaseball_AssignStrikeZone_Params
    {
    public:
        SportsScramble::AScramStrikeZone*                            strikeZone;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_SendBowlingEvent_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBowlingEvent                                BowlingEvent;                                            //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              BallActor;                                               //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_SaveBowlingState_Params
    {
    public:
        SportsScramble::FBowlingScrambleState                        ScrambleState;                                           //  0x0000(0x0080)  (Parm, OutParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FBowlingFrameSet>         TraditionalFrameSets;                                    //  0x0080(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_RestartGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_LoadBowlingState_Params
    {
    public:
        SportsScramble::FBowlingScrambleState                        ScrambleState;                                           //  0x0000(0x0080)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FBowlingFrameSet>         TraditionalFrameSets;                                    //  0x0080(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerBowling_BowlingEvent_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EBowlingEvent                                BowlingEvent;                                            //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerDodgeball_StartGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerDodgeball_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerDodgeball_DodgeballEvent_Params
    {
    public:
        SportsScramble::EDodgeballEvent                              DodgeballEvent;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::AActor*                                              Actor;                                                   //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_TennisEvent_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ETennisEvent                                 TennisEvent;                                             //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_SetAllowServe_Params
    {
    public:
        int32_t                                                      Player;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         allowServe;                                              //  0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_SendDebugString_Params
    {
    public:
        BasicTypes::FString                                          S;                                                       //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_SaveTennisState_Params
    {
    public:
        SportsScramble::ATennisBall*                                 Ball;                                                    //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ATennisInstrument*                           player1Instrument;                                       //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ATennisInstrument*                           player2Instrument;                                       //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              activeArenaScramble;                                     //  0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_RestartMatch_Params
    {
    public:
        bool                                                         resetServer;                                             //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_ReplaceBallInPlay_Params
    {
    public:
        Engine::AActor*                                              Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_LoadTennisState_Params
    {
    public:
        SportsScramble::ATennisBall*                                 Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ATennisInstrument*                           player1Instrument;                                       //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ATennisInstrument*                           player2Instrument;                                       //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              activeArenaScramble;                                     //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetServingPlayer_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetReceivingPlayer_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetPlayerPoints_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetPlayerGames_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetPlayerDoubleFaults_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetPlayerAces_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetOpponentPoints_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetOpponentGames_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetNextPlayerToHitBall_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramSportManagerTennis_GetBallInPlay_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTennisAI_SetInstrumentProperties_Params
    {
    public:
        SportsScramble::FTennisInstrumentProperties                  instrumentProperties;                                    //  0x0000(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTennisAI_PlayRacquetSound_Params
    {
    public:
        SportsScramble::ATennisBall*                                 Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        BallSpeed;                                               //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_TimeLineIsRunning_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_StopTimeLine_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_StartTimeLine_Params
    {
    public:
        bool                                                         Forward;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        StartTime;                                               //  0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_SetTarget_Params
    {
    public:
        Engine::USceneComponent*                                     Target;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_SampleAtTime_Params
    {
    public:
        float                                                        SampleTime;                                              //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_ResumeTimeLine_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_GetTimeLineLength_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTimeLineComponent_GetRemainingTime_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTrajectoryUtils_GetInitialLinearVelocity_Params
    {
    public:
        SportsScramble::FScramTrajectory                             trajectory;                                              //  0x0000(0x01F0)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         ReturnValue;                                             //  0x01F0(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTrajectoryInfluencerComponent_SetInfluencerEnabled_Params
    {
    public:
        bool                                                         Enabled;                                                 //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTrajectoryInfluencerBaseball_RemoveSkillFlag_Params
    {
    public:
        SportsScramble::EScramSkill                                  Skill;                                                   //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTrajectoryInfluencerBaseball_HasSkillFlag_Params
    {
    public:
        SportsScramble::EScramSkill                                  Skill;                                                   //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramTrajectoryInfluencerBaseball_AddSkillFlag_Params
    {
    public:
        SportsScramble::EScramSkill                                  Skill;                                                   //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophy_WasTrophyEarned_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophy_OnPlayerStopLookAtTrophy_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophy_OnPlayerLookAtTrophy_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophy_CalculateDisplayTransform_Params
    {
    public:
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_TryMakeActiveTrophyGlove_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_SetLaserPointerVisibility_Params
    {
    public:
        bool                                                         IsVisible;                                               //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_SetLaserLength_Params
    {
    public:
        float                                                        Length;                                                  //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_SetEnableGrab_Params
    {
    public:
        bool                                                         Enabled;                                                 //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_OnShouldGrab_Params
    {
    public:
        SportsScramble::ATrophyGrabbable*                            Trophy;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_IsTriggerPressed_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_IsTriggerDownThisFrame_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_IsActiveGlove_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_InputRotateTrophyYaw_Params
    {
    public:
        float                                                        AxisValue;                                               //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_InputRotateTrophyPitch_Params
    {
    public:
        float                                                        AxisValue;                                               //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_GetTrophyGrabPoint_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_BindInputYaw_Params
    {
    public:
        BasicTypes::FName                                            AxisName;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyGlove_BindInputPitch_Params
    {
    public:
        BasicTypes::FName                                            AxisName;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_WasTrophyEarned_Params
    {
    public:
        BasicTypes::FName                                            TrophyID;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_WasAvatarEarned_Params
    {
    public:
        BasicTypes::FName                                            avatarID;                                                //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_TryGetTrophyEarnedDate_Params
    {
    public:
        CoreUObject::FDateTime                                       date;                                                    //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            TrophyID;                                                //  0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_SpawnTrophyNotificationFX_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_ResetAllTrophy_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_OnNotifyTrophyEarned_Params
    {
    public:
        BasicTypes::FName                                            Name;                                                    //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_OnNotifyOculusUpdate_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_InitializeTrophyAwardListeners_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_GetEarnedTrophyCount_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_EarnTrophy_Params
    {
    public:
        BasicTypes::FName                                            TrophyName;                                              //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_DeferNotifications_Params
    {
    public:
        float                                                        Duration;                                                //  0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramTrophyManager_ClearAwardListeners_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_ShowDebugMessage_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          Message;                                                 //  0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LifeTime;                                                //  0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_SetShaderCacheModeFast_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_SetShaderCacheModeBackground_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_SetOnlineSessionCustomSetting_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      SettingValue;                                            //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_SetInstancedVisibility_Params
    {
    public:
        Engine::UStaticMeshComponent*                                Target;                                                  //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         Visibility;                                              //  0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_SampleTexture_Params
    {
    public:
        Engine::UTexture2D*                                          Texture;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        U;                                                       //  0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        V;                                                       //  0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FLinearColor                                    pixelColor;                                              //  0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ESuccessFailure                              Branch;                                                  //  0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_RandomSharedSport_Params
    {
    public:
        SportsScramble::FScramSportPreferences                       A;                                                       //  0x0000(0x0003)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        SportsScramble::FScramSportPreferences                       B;                                                       //  0x0003(0x0003)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
        SportsScramble::EScramSport                                  ReturnValue;                                             //  0x0006(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_PickDestinationPointOnSpline_Params
    {
    public:
        Engine::AActor*                                              SplineFollower;                                          //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::USplineComponent*                                    Spline;                                                  //  0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LookAheadDistance;                                       //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_PauseShaderCacheCompilation_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_MakeActorsFaceLocation_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              subClass;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_LaunchOtherApp_Params
    {
    public:
        BasicTypes::FString                                          appID;                                                   //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_IsShipping_Params
    {
    public:
        SportsScramble::EYesNo                                       Branch;                                                  //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_IsShaderCacheReady_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_IsHitFloor_Params
    {
    public:
        SportsScramble::AScramPrimitiveActor*                        Primitive;                                               //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitLocation;                                             //  0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_IsHitEnvironmental_Params
    {
    public:
        Engine::AActor*                                              hitActor;                                                //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_IsChargeShotPossible_Params
    {
    public:
        SportsScramble::ATennisInstrument*                           Instrument;                                              //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ATennisBall*                                 Ball;                                                    //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_HasBinaryShaderCache_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GoToStore_Params
    {
    public:
        BasicTypes::FString                                          uriPath;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetSkipLogos_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetSingleActorExec_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              ActorClass;                                              //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetSingleActor_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              ActorClass;                                              //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetScramPlayer_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetScramNetworkVersion_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetScramGameMode_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramGameMode*                              ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetRemoteScramPlayer_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetPlayerTransform_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         OffsetLocation;                                          //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        OffsetRotation;                                          //  0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0020(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetOnlineSessionCustomSetting_Params
    {
    public:
        OnlineSubsystemUtils::FBlueprintSessionResult                Result;                                                  //  0x0000(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        BasicTypes::FName                                            SettingName;                                             //  0x00B8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x00C0(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetNumShaderCompilesRemaining_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetNumberOfLines_Params
    {
    public:
        BasicTypes::FText                                            Text;                                                    //  0x0000(0x0018)  (Parm, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetMatchmakingPool_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetLocalScramPlayer_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetLengthOfLongestLine_Params
    {
    public:
        BasicTypes::FText                                            Text;                                                    //  0x0000(0x0018)  (Parm, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetIsShipping_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetIsEditor_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetIsAndroid_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetEarlyAccess_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetDemoMode_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetDefaultObject_Params
    {
    public:
        CoreUObject::UObject*                                        ObjectClass;                                             //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetDebugMode_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetAttachedActorsExec_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<Engine::AActor*>                          OutActors;                                               //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_GetAppropriateTransform_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_ControllerIsConnected_Params
    {
    public:
        SportsScramble::EYesNo                                       Branch;                                                  //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramUtils_ClearDebugMessages_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_SetVoiceChatMuted_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         muted;                                                   //  0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_Server_SetClientVoiceChatDesired_Params
    {
    public:
        bool                                                         clientVoiceChatDesired;                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_Server_InitializeVoiceChat_Params
    {
    public:
        bool                                                         clientVoiceChatDesired;                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_KillVoiceChat_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_DeferredInit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_Client_SetServerVoiceChatDesired_Params
    {
    public:
        bool                                                         serverVoiceChatDesired;                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramVoiceChat_Client_InitializeVoiceChat_Params
    {
    public:
        bool                                                         serverVoiceChatDesired;                                  //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASkiBallTrigger_SetIsPositive_Params
    {
    public:
        bool                                                         positive;                                                //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USpectateSessionCallbackProxy_SpectateSession_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::APlayerController*                                   PlayerController;                                        //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        OnlineSubsystemUtils::FBlueprintSessionResult                SearchResult;                                            //  0x0010(0x00B8)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
        SportsScramble::USpectateSessionCallbackProxy*               ReturnValue;                                             //  0x00C8(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USplineMoverComponent_StartOnSpline_Params
    {
    public:
        Engine::USplineComponent*                                    SplineComponent;                                         //  0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::USceneComponent*                                     SceneComponent;                                          //  0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Distance;                                                //  0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USplineMoverComponent_Restart_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class USplineMoverComponent_GetCurrentSpeed_Params
    {
    public:
        float                                                        ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UStartOculusMatchmakingCallbackProxy_StartOculusMatchmaking_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::FString                                          poolKey;                                                 //  0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Timeout;                                                 //  0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::UStartOculusMatchmakingCallbackProxy*        ReturnValue;                                             //  0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UStartOculusMatchmakingCallbackProxy_MatchmakingClientConnect_Params
    {
    public:
        Engine::APlayerController*                                   PlayerController;                                        //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASwapIndicator_OnHandednessSet_Params
    {
    public:
        SportsScramble::EScramHandedness                             Handedness;                                              //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASwapIndicator_OnConfirmSwap_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ASwapIndicator_OnBeginSwap_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisAvatar_OnBallHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_OnShotChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_OnRallyCountChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_GetTennisBallProperties_Params
    {
    public:
        SportsScramble::FTennisBallProperties                        ReturnValue;                                             //  0x0000(0x0128)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_GetTarget_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_GetShot_Params
    {
    public:
        SportsScramble::FTennisShot                                  ReturnValue;                                             //  0x0000(0x0003)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_GetSender_Params
    {
    public:
        Engine::AActor*                                              ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisBall_GetRallyCount_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATennisInstrument_GetTennisInstrumentProperties_Params
    {
    public:
        SportsScramble::FTennisInstrumentProperties                  ReturnValue;                                             //  0x0000(0x00B8)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UTimeDisplayWidget_FormatTime_Params
    {
    public:
        float                                                        Seconds;                                                 //  0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FString                                          ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_UpdateProgress_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_SaveProgressToSaveData_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_LoadProgressFromSaveData_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_IncreaseProgress_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyAwardListenerBase_AwardTrophy_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_WasTrophyEarned_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_RespawnTrophy_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OverrideInitialRotation_Params
    {
    public:
        CoreUObject::FRotator                                        overrideRotation;                                        //  0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OverrideInitialPosition_Params
    {
    public:
        CoreUObject::FVector                                         overridePosition;                                        //  0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OnTrophyRespawnToOriginalPosition_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OnTrophyReleased_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OnTrophyGrabbed_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OnStopPointingAt_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_OnStartPointingAt_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_GetInitialRotation_Params
    {
    public:
        CoreUObject::FRotator                                        ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATrophyGrabbable_GetInitialPosition_Params
    {
    public:
        CoreUObject::FVector                                         ReturnValue;                                             //  0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABaseballThrowingGlove_OnBowlingGloveRelease_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABattingAvatar_OnSwung_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ABattingAvatar_OnHit_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      pPayload;                                                //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramActor_PlayManagedSoundAtLocation_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FRotator                                        Rotation;                                                //  0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
        float                                                        VolumeMultiplier;                                        //  0x0020(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PitchMultiplier;                                         //  0x0024(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        StartTime;                                               //  0x0028(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x4];                                   //  0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::USoundAttenuation*                                   AttenuationSettings;                                     //  0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::USoundConcurrency*                                   ConcurrencySettings;                                     //  0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramActor_HasBegunPlay_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramActor_AttachSound2D_Params
    {
    public:
        Engine::USoundBase*                                          Sound;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        VolumeMultiplier;                                        //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        PitchMultiplier;                                         //  0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        StartTime;                                               //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x4];                                   //  0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        Engine::USoundConcurrency*                                   ConcurrencySettings;                                     //  0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         IsUiSound;                                               //  0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramAvatar_PlaySpawnAnimation_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramAvatar_GetPlayerIndex_Params
    {
    public:
        int32_t                                                      ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramAvatar_GetPlayer_Params
    {
    public:
        SportsScramble::AScramPlayer*                                ReturnValue;                                             //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramAvatar_GetGlobalColor_Params
    {
    public:
        BasicTypes::FName                                            globalColorName;                                         //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FLinearColor                                    ReturnValue;                                             //  0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramHandshakeActor_ServerReady_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramMeshActor_HasBegunPlay_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballPawnAI_StartGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballPawnAI_SetDelayBeforeThrowing_Params
    {
    public:
        SportsScramble::FMinMaxFloat                                 delayBeforeThrow;                                        //  0x0000(0x0008)  (Parm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballPawnAI_KnockedOut_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramDodgeballPawnAI_BallThrown_Params
    {
    public:
        Engine::AActor*                                              Ball;                                                    //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         Location;                                                //  0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        Speed;                                                   //  0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEquipmentSet_PostEquipmentSpawn_Params
    {
    public:
        SportsScramble::AScramPrimitiveGrabbable*                    DominantHandSpawnedEquipment;                            //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramPrimitiveGrabbable*                    OffHandSpawnedEquipment;                                 //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramEventObjectPayload_CreateObjectPayload_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::UObject*                                        Object;                                                  //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventObjectPayload*                    ReturnValue;                                             //  0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramEventCollisionPayload_CreateCollisionPayload_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        Engine::AActor*                                              OtherActor;                                              //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitLocation;                                             //  0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        CoreUObject::FVector                                         HitNormal;                                               //  0x001C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventCollisionPayload*                 ReturnValue;                                             //  0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEventManager_UnbindEventFromObjectScramEvent_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEventManager_UnbindEventFromGlobalScramEvent_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0001[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEventManager_BroadcastScramEvent_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0002[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         replicate;                                               //  0x0018(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEventManager_BindEventToObjectScramEvent_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0003[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramEventManager_BindEventToGlobalScramEvent_Params
    {
    public:
        SportsScramble::EScramEvent                                  ScramEvent;                                              //  0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0004[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_StopGameInvitePings_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_StartOculusAchievementSync_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_ShowDebugMessage_Params
    {
    public:
        BasicTypes::FString                                          Message;                                                 //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        LifeTime;                                                //  0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_SetUseVoiceChat_Params
    {
    public:
        bool                                                         useVoice;                                                //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_SetAvatarLook_Params
    {
    public:
        SportsScramble::AScramPlayer*                                pPlayer;                                                 //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::FAvatarLook                                  AvatarLook;                                              //  0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_SaveGameData_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_RemoveShelfActor_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_RefreshGameInvites_Params
    {
    public:
        BasicTypes::UScriptDelegate                                  Event;                                                   //  0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_LocalNetworkVersionOverride_Params
    {
    public:
        uint32_t                                                     ReturnValue;                                             //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_LoadGameData_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_InitializePendingGameInvitesComplete_Params
    {
    public:
        bool                                                         wasSuccessful;                                           //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::TArray<SportsScramble::FScramGameInvite>         invites;                                                 //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_InitializePendingGameInvites_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_HasSportStateSaved_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_HasPendingGameInvites_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_GetUseVoiceChat_Params
    {
    public:
        bool                                                         ReturnValue;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_GetSaveData_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::UScramSaveData*                              ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_DoesUseVoiceChat_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_DismissPendingGameInvite_Params
    {
    public:
        SportsScramble::FScramGameInvite                             invite;                                                  //  0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_DismissAllPendingGameInvites_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_ClearSavedSportState_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_ClearDebugMessages_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_BroadcastLocalAvatarLook_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramGameInstance_AddShelfActor_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_WipeSaveData_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_WipeHighScoreData_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_UnlockTraining_Params
    {
    public:
        BasicTypes::FName                                            TrainingName;                                            //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_SaveNamedValue_Params
    {
    public:
        BasicTypes::FName                                            Name;                                                    //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      Value;                                                   //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_SaveHighScore_Params
    {
    public:
        BasicTypes::FName                                            GameName;                                                //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        score;                                                   //  0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_GetTrainingProgression_Params
    {
    public:
        BasicTypes::FName                                            TrainingName;                                            //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::ETrainingProgression                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_GetNamedValue_Params
    {
    public:
        BasicTypes::FName                                            Name;                                                    //  0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_GetHighScore_Params
    {
    public:
        BasicTypes::FName                                            GameName;                                                //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UScramSaveData_CompleteTraining_Params
    {
    public:
        BasicTypes::FName                                            TrainingName;                                            //  0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_SetLocalizationCulture_Params
    {
    public:
        BasicTypes::FString                                          Culture;                                                 //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_ServerTravel_Params
    {
    public:
        BasicTypes::FString                                          URL;                                                     //  0x0000(0x0010)  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         Absolute;                                                //  0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ShouldSkipGameNotify;                                    //  0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0012(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_ResetMatch_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_GetLocalizationCulture_Params
    {
    public:
        BasicTypes::FString                                          ReturnValue;                                             //  0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_GetClientSportPreferences_Params
    {
    public:
        SportsScramble::FScramSportPreferences                       ReturnValue;                                             //  0x0000(0x0003)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_DisallowMultiplayerLogins_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_ClientSportPreferencesReceived_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_AllowMatchmakingLogins_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameMode_AllowFriendLogin_Params
    {
    public:
        SportsScramble::FScramFriend                                 ScramFriend;                                             //  0x0000(0x0038)  (ConstParm, Parm, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_StartMatch_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_ShowPausedActors_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_ShowAllActors_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_SetActiveBallClass_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  activeBallClass;                                         //  0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_OnPauseCapsuleRemoved_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_OnPauseCapsuleAdded_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_OnActorSpawned_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_IsLocalGameStatePaused_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_IsGameStatePaused_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_IsActorHidden_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_HidePausedActors_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_HideAllActors_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetSportManager_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramSportManagerBase*                      ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetSport_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EScramSport                                  ReturnValue;                                             //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetSmoothedPingTime_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetScramServerWorldTime_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetPingTime_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        float                                                        ReturnValue;                                             //  0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetPauseCapsuleTransform_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        CoreUObject::FTransform                                      ReturnValue;                                             //  0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_GetActiveBallClass_Params
    {
    public:
        CoreUObject::UObject*                                        pWorldContextObject;                                     //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::AScramBall*                                  ReturnValue;                                             //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_BlueprintCall_OnMultiplayerGameResume_Params
    {
    public:
        bool                                                         isCalledByHost;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class AScramGameState_BlueprintCall_OnMultiplayerGamePaused_Params
    {
    public:
        bool                                                         isCalledByHost;                                          //  0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        SportsScramble::EGamePauseReason                             reason;                                                  //  0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class UUpdateSessionCallbackProxyAdvanced_UpdateSession_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        BasicTypes::TArray<SportsScramble::FSessionPropertyKeyPair>  ExtraSettings;                                           //  0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
        int32_t                                                      PublicConnections;                                       //  0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        int32_t                                                      PrivateConnections;                                      //  0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bUseLAN;                                                 //  0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bAllowInvites;                                           //  0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bAllowJoinInProgress;                                    //  0x0022(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bRefreshOnlineData;                                      //  0x0023(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        bool                                                         bIsDedicatedServer;                                      //  0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        SportsScramble::UUpdateSessionCallbackProxyAdvanced*         ReturnValue;                                             //  0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballBall_OnShotChanged_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballBall_GetShot_Params
    {
    public:
        SportsScramble::FDodgeballShot                               ReturnValue;                                             //  0x0000(0x0003)  (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ADodgeballBall_GetDodgeballBallProperties_Params
    {
    public:
        SportsScramble::FDodgeballBallProperties                     ReturnValue;                                             //  0x0000(0x00D8)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
