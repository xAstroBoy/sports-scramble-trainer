#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "GameResult_ENUMS.h"
#include "BasicTypes_FName.h"
#include "TN_ReturnWall_ScoreType_ENUMS.h"
#include "Engine_ENUMS.h"
#include "SportsScramble_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class AActor; };
namespace CG::Challenge_ScramSportManager_TN { class AChallenge_ScramSportManager_TN_C; };
namespace CG::SportsScramble { class AScramTennisAI; };
namespace CG::TN_Instrument_Base { class ATN_Instrument_Base_C; };
namespace CG::TN_Ball_Base { class ATN_Ball_Base_C; };
namespace CG::ScrambleEvent_Base { class AScrambleEvent_Base_C; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::SportsScramble { class AScramBall; };
namespace CG::TennisScrambleTarget { class ATennisScrambleTarget_C; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TN_Challenge_Base
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_AddActorToGameElementList_Params
    {
    public:
        Engine::AActor*                                              Actor;                                                   //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         Callback;                                                //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_Shutdown_Params
    {
    public:
        bool                                                         ShutdownBegun;                                           //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_UnbindEvent_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_ShowAllWhackTargets_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_ResetArenaScoreboards_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_UpdateArenaScoreboards_Params
    {
    public:
        int32_t                                                      Player1Score;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Player2Score;                                            //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Player1Games;                                            //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Player2Games;                                            //  0x000C(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         Player1Serve;                                            //  0x0010(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         Player2Serve;                                            //  0x0011(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         UpdateScoreOnly;                                         //  0x0012(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x1];                                   //  0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_GetArenaScoreboards_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SpawnChallengeSportManager_Params
    {
    public:
        Challenge_ScramSportManager_TN::AChallenge_ScramSportManager_TN_C* ChallengeSportMgr;                                       //  0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0001[0x8];                                   //  0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_CalculateEndTennisMatch_Params
    {
    public:
        GameResult::EGameResult                                      Result;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SpawnFloorLightUpGroup_Params
    {
    public:
        bool                                                         Player2;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         OutOnly;                                                 //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         InOnly;                                                  //  0x0002(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         Demo;                                                    //  0x0003(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0xC];                                   //  0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SpawnSportManager_Params
    {
    public:
        bool                                                         UseScrambler;                                            //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         UseStartOfMatchInfoPanels;                               //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0003[0x6];                                   //  0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        BasicTypes::FName                                            ScrambleSchedule;                                        //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SpawnAIOpponent_Params
    {
    public:
        Engine::AActor*                                              AIActorClass;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::AScramTennisAI*                              ScramTennisAI;                                           //  0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SpawnReturnWallAndLauncher_Params
    {
    public:
        TN_ReturnWall_ScoreType::ETN_ReturnWall_ScoreType            ReurnWallType;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0xF];                                   //  0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SwapInstrumentIcon_Params
    {
    public:
        TN_Instrument_Base::ATN_Instrument_Base_C*                   InstrumentClass;                                         //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_SwapBallIcon_Params
    {
    public:
        TN_Ball_Base::ATN_Ball_Base_C*                               BallClass;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         AnnounceBall;                                            //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0005[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_Get_TN_CHG_BallList_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_Get_TN_CHG_InstrumentList_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_RefreshActivePayloads_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_IsStreakContinued_Params
    {
    public:
        Engine::AActor*                                              PayloadActor;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         StreakContinues;                                         //  0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0006[0x3];                                   //  0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_UpdateScore_Params
    {
    public:
        int32_t                                                      NewScore;                                                //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0007[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_CalculateEndScore_Params
    {
    public:
        bool                                                         Countdown;                                               //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0008[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        int32_t                                                      CurrentScore;                                            //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      TargetScore;                                             //  0x0008(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0009[0x4];                                   //  0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_ScrambleTargetBallHit_Params
    {
    public:
        float                                                        HitLocationX;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        HitLocationY;                                            //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_PBP_ScrambleTargetHit_Params
    {
    public:
        ScrambleEvent_Base::AScrambleEvent_Base_C*                   EventClass;                                              //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ProcessLightNormalShot_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ProcessChargeShot_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_ScrambleTargetInstrumentChangeMissed_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TRN_InstrumentHit_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_DestroyAllBalls_1_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ProcessSliceShot_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_PickNew_CHG_WhackTarget_Params
    {
    public:
        Engine::AActor*                                              OldTarget;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_Spawn_CHG_WhackTargets_Params
    {
    public:
        bool                                                         LowerOnGameEnd;                                          //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0010[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_SpawnServeLauncher_Params
    {
    public:
        bool                                                         TeeBall;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         MoveSpawnedBalls;                                        //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0011[0x6];                                   //  0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_SpawnCenterLaucher_Params
    {
    public:
        float                                                        InitialHeight;                                           //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0012[0xC];                                   //  0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_LaunchedBallMissed_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_LaunchedBallHit_Params
    {
    public:
        float                                                        HitLocationX;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        HitLocationY;                                            //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_SpawnFloorLightUp_Params
    {
    public:
        bool                                                         OutOnly;                                                 //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         InOnly;                                                  //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         BothInOut;                                               //  0x0002(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0013[0xD];                                   //  0x0003(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_SpawnLeftRightLauchers_Params
    {
    public:
        bool                                                         SpawnLeftLauncher;                                       //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         SpawnRightLauncher;                                      //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0014[0x6];                                   //  0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_BallAccuracySound_Params
    {
    public:
        bool                                                         In;                                                      //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_CheckInBounds_Params
    {
    public:
        float                                                        XLocation;                                               //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        float                                                        YLocation;                                               //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         PlaySound;                                               //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         InBounds;                                                //  0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_InitializeBase_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_SportManager_MatchComplete_Params
    {
    public:
        GameResult::EGameResult                                      Result;                                                  //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ReturnWallLauncherBall_Params
    {
    public:
        Engine::AActor*                                              NewBallActor;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ReturnWallHit_Params
    {
    public:
        int32_t                                                      Streak;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ReceiveEndPlay_Params
    {
    public:
        Engine::EEndPlayReason                                       EndPlayReason;                                           //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_NewLauncherBall_Params
    {
    public:
        Engine::AActor*                                              NewBallActor;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_BallHasBeenHit_Params
    {
    public:
        CoreUObject::UObject*                                        WorldContextObject;                                      //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        SportsScramble::UScramEventBasePayload*                      Payload;                                                 //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TNG_BallSpawned_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TNG_BallHit_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_WallTargetHit_Params
    {
    public:
        Engine::AActor*                                              PayloadActor;                                            //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        Engine::AActor*                                              BallTargetActor;                                         //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      RegionHit;                                               //  0x0010(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TNG_BallGrabbed_Params
    {
    public:
        SportsScramble::AScramBall*                                  Ball;                                                    //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_BallShotTypeChange_Params
    {
    public:
        SportsScramble::ETennisShotType                              ShotType;                                                //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TNG_ScrambleTargetHit_Params
    {
    public:
        TennisScrambleTarget::ATennisScrambleTarget_C*               TargetActor;                                             //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        ScrambleEvent_Base::AScrambleEvent_Base_C*                   EventClass;                                              //  0x0008(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      TargetId;                                                //  0x0010(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ChangeBallClass_Params
    {
    public:
        SportsScramble::AScramBall*                                  BallClass;                                               //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_EndOfGame_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_TimerExpired_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_TimerTriggered_Params
    {
    public:
        int32_t                                                      CurrentTime;                                             //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_CHG_WallTargetShrinking_Params
    {
    public:
        Engine::AActor*                                              TargetActor;                                             //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_TriggerCountdown_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_StartIntroCadence_Params
    {
    public:
        bool                                                         UseChallengeMusic;                                       //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         UseCountdown;                                            //  0x0001(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         UseThreeCategory;                                        //  0x0002(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_ShowInstrumentAndBallIcons_Params
    {
    public:
        bool                                                         InstrumentBothHands;                                     //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TriggerAlternativeCadence_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_AnnouncerShowInstrumentIcon_Params
    {
    public:
        TN_Ball_Base::ATN_Ball_Base_C*                               OptionalBallClass;                                       //  0x0000(0x0008)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         AnnounceBall;                                            //  0x0008(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_AnnouncerPresentation_Params
    {
    public:
        bool                                                         InstrumentBothHands;                                     //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_TN_AnnouncerAcceleratorChallenge_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_Challenge_Base_C_ExecuteUbergraph_TN_Challenge_Base_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0015[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
