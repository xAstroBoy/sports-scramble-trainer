#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FString.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TN_MiniGameScoreboard
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_OverrideScoreText_Params
    {
    public:
        BasicTypes::FString                                          InputString;                                             //  0x0000(0x0010)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
        bool                                                         Callback;                                                //  0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x7];                                   //  0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideClock_Params
    {
    public:
        bool                                                         ClockHidden;                                             //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_StartClock_Params
    {
    public:
        int32_t                                                      Duration;                                                //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         Countdown;                                               //  0x0004(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         AutoStart;                                               //  0x0005(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         TimerStarted;                                            //  0x0006(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0001[0x1];                                   //  0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_PauseClock_Params
    {
    public:
        int32_t                                                      DisplayedTime;                                           //  0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_ResetClock_Params
    {
    public:
        bool                                                         ClockReset;                                              //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0002[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_ResumeClock_Params
    {
    public:
        bool                                                         ClockResumed;                                            //  0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_SetScore_Params
    {
    public:
        int32_t                                                      NewScore;                                                //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         ScoreUpdated;                                            //  0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0003[0x3];                                   //  0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_SetPoints_Params
    {
    public:
        int32_t                                                      Points;                                                  //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        uint8_t                                                      UnknownData_0004[0x4];                                   //  0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_SetNewClockTime_Params
    {
    public:
        int32_t                                                      NewTime;                                                 //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_SetScoreRange_Params
    {
    public:
        int32_t                                                      CurrentScore;                                            //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      GoalScore;                                               //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideScore_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_SetClockTime_Params
    {
    public:
        int32_t                                                      NewTime;                                                 //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_TimeTranslation__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_TimeTranslation__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_ScoreTranslation__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_ScoreTranslation__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_0__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_0__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_1__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_Timeline_1__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_ClockUpdateLoop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_RevealTime_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_RevealScore_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideTime_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideScoreAnimated_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_RevealNewClockTime_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_RevealNewScoring_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideNewClockTime_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_HideNewScoring_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_StartNewClock_Params
    {
    public:
        int32_t                                                      Duration;                                                //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        bool                                                         Countdown;                                               //  0x0004(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        bool                                                         AutoStart;                                               //  0x0005(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_UpdateNewClockLoop_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_ExecuteUbergraph_TN_MiniGameScoreboard_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_TriggerTimeReached__DelegateSignature_Params
    {
    public:
        int32_t                                                      CurrentTime;                                             //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_MiniGameScoreboard_C_TargetTimeReached__DelegateSignature_Params
    {
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
