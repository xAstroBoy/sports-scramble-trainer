#pragma once
#pragma warning(disable: 4267)

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FText.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TN_NetMatchScoreboard
{
    // --------------------------------------------------
    // # Classes
    // --------------------------------------------------
    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_UpdateNewText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_UpdateRuleType_Params
    {
    public:
        bool                                                         TraditionalScoring;                                      //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0000[0x3];                                   //  0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Initialize_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_UserConstructionScript_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Pop__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Pop__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Reveal_Scores__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Reveal_Scores__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Reveal_Text__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_Timeline_Reveal_Text__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ShowHideDebug__FinishedFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ShowHideDebug__UpdateFunc_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ReceiveBeginPlay_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_UpdateScore_Params
    {
    public:
        int32_t                                                      Player1;                                                 //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      Player2;                                                 //  0x0004(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_DisplayScoreboard_Params
    {
    public:
        BasicTypes::FText                                            TextMajor;                                               //  0x0000(0x0018)  (BlueprintVisible, BlueprintReadOnly, Parm)
        BasicTypes::FText                                            TextMinor;                                               //  0x0018(0x0018)  (BlueprintVisible, BlueprintReadOnly, Parm)
        bool                                                         UpdateScoreOnDelay;                                      //  0x0030(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
        uint8_t                                                      UnknownData_0001[0x3];                                   //  0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
        float                                                        Delay;                                                   //  0x0034(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      NewScoreP1;                                              //  0x0038(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
        int32_t                                                      NewScoreP2;                                              //  0x003C(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_HideScoreBoard_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_SetScoreToZero_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_UpdateText_Params
    {
    public:
        BasicTypes::FText                                            TopText;                                                 //  0x0000(0x0018)  (BlueprintVisible, BlueprintReadOnly, Parm)
        BasicTypes::FText                                            BottomText;                                              //  0x0018(0x0018)  (BlueprintVisible, BlueprintReadOnly, Parm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_SpawnScoreVFX_Params
    {
    public:
        bool                                                         P1;                                                      //  0x0000(0x0001)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_DisplayDebugText_Params
    {
    public:
        BasicTypes::FText                                            DebugText;                                               //  0x0000(0x0018)  (BlueprintVisible, BlueprintReadOnly, Parm)
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_HideNormalTennisScoring_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ShowScores_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_HideScores_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ShowText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_HideText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_RevealDebugText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_HideDebugText_Params
    {
    };

    /**
     * 
     * Size -> 0x0000
     */
    class ATN_NetMatchScoreboard_C_ExecuteUbergraph_TN_NetMatchScoreboard_Params
    {
    public:
        int32_t                                                      EntryPoint;                                              //  0x0000(0x0004)  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
    };

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
