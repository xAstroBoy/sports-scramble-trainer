#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FName.h"
#include "BallLauncherParameters_FBallLauncherParameters.h"
#include "TN_Train_Base_ATN_Train_Base_C.h"
#include "Engine_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USoundBase; };
namespace CG::Engine { class AActor; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TN_Train_01_BasicHitting
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Training/Tennis/TN_Train_01_BasicHitting.TN_Train_01_BasicHitting_C
     * Size -> 0x00F8 (FullSize[0x0692] - InheritedSize[0x059A])
     */
    class ATN_Train_01_BasicHitting_C : public TN_Train_Base::ATN_Train_Base_C
    {
    public:
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Audio_TryBasicHitting;                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_SwitchAtAnyTime;                                   //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_Nice;                                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_TryItNow;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_SwitchHands;                                       //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_LeftHand;                                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_RightHand;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        int32_t                                                      maxBalls;                                                //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        DelayBetweenLauncherBalls;                               //  Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BasicTypes::FName>                        LivingRoom_RightHanded_2;                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BasicTypes::TArray<BallLauncherParameters::FBallLauncherParameters> LaunchTargets;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        BallLauncherParameters::FBallLauncherParameters              ActiveLaunchParameters;                                  //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          AnnouncerAudio01;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         LeftHandedHitter;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         InstrumentHandSwap;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void StopComponentAudio();
        void InitializeTrainingRoom();
        void UnbindEvents();
        void SetUpInfoText();
        void UserConstructionScript();
        void ReceiveBeginPlay();
        void StartCountdown();
        void CountDownCompleted();
        void TN_LaunchedBallHit(float HitLocationX, float HitLocationY);
        void TN_LaunchedBallMissed();
        void LaunchNextBall(Engine::AActor* Ball);
        void StartLaunchingBalls();
        void StartTraining();
        void NotifyTrainingContinue(Engine::AActor* DestroyedActor);
        void AnnouncerExitSequenceComplete();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void TutorialStep01();
        void InstrumentRelease(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void ExecuteUbergraph_TN_Train_01_BasicHitting(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Training/Tennis/TN_Train_01_BasicHitting.TN_Train_01_BasicHitting_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
