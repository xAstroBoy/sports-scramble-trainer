#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "Engine_ENUMS.h"
#include "BasicTypes_FText.h"
#include "Engine_FTimerHandle.h"
#include "Engine_AActor.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UStaticMeshComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::UMG { class UWidgetComponent; };
namespace CG::Engine { class UTimelineComponent; };
namespace CG::TennisArenaScoreboardWidget { class UTennisArenaScoreboardWidget_C; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::TN_Scoreboard_TennisBall { class ATN_Scoreboard_TennisBall_C; };
namespace CG::CoreUObject { class UObject; };
namespace CG::SportsScramble { class UScramEventBasePayload; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TennisArenaScoreboard
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Environments/Tennis/TennisArenaScoreboard.TennisArenaScoreboard_C
     * Size -> 0x00B0 (FullSize[0x03D8] - InheritedSize[0x0328])
     */
    class ATennisArenaScoreboard_C : public Engine::AActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UStaticMeshComponent*                                Cover2;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                Cover1;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BallLoc2;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     BallLoc1;                                                //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UStaticMeshComponent*                                Tennisscramble_Scoreboard_Base;                          //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        UMG::UWidgetComponent*                                       Widget;                                                  //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_Cover2_Alpha_0FB27A7A4B2C921A2C7A1A8B4B1EE516;  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_Cover2__Direction_0FB27A7A4B2C921A2C7A1A8B4B1EE516; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_Cover2;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        Timeline_Cover1_Alpha_E2B441B0427A658A2EBD19A8CDC64408;  //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::ETimelineDirection                                   Timeline_Cover1__Direction_E2B441B0427A658A2EBD19A8CDC64408; //  ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0001[0x3];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        Engine::UTimelineComponent*                                  Timeline_Cover1;                                         //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        TennisArenaScoreboardWidget::UTennisArenaScoreboardWidget_C* ArenaScoreboardWidget;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        bool                                                         ShowAdvantage;                                           //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        bool                                                         TraditionalScoring;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor
        uint8_t                                                      UnknownData_0002[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::FText                                            AdText;                                                  //  Edit, BlueprintVisible, DisableEditOnInstance
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        TN_Scoreboard_TennisBall::ATN_Scoreboard_TennisBall_C*       BallLeft;                                                //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        TN_Scoreboard_TennisBall::ATN_Scoreboard_TennisBall_C*       BallRight;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::FTimerHandle                                         RightSpawnDelay;                                         //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash
        Engine::FTimerHandle                                         LeftSpawnDelay;                                          //  Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash

    public:
        void SetLocText();
        void SpawnBallIndicator(bool LeftSide);
        void UpdateNetworkNames();
        void UpdateRuleType(bool TraditionalScoring);
        void UpdateServeIndicator(bool Player1Serve, bool Player2Serve);
        void UpdateScore(int32_t Player1Score, int32_t Player2Score, int32_t Player1Games, int32_t Player2Games, bool Player1Serve, bool Player2Serve, bool UpdateScoreOnly);
        void Initialize();
        void UserConstructionScript();
        void Timeline_Cover1__FinishedFunc();
        void Timeline_Cover1__UpdateFunc();
        void Timeline_Cover2__FinishedFunc();
        void Timeline_Cover2__UpdateFunc();
        void ReceiveBeginPlay();
        void ShowP1Serve();
        void HideP1Serve();
        void ShowP2Serve();
        void HideP2Serve();
        void ShowLeftSideServe();
        void RightSideDestroyed(Engine::AActor* DestroyedActor);
        void ShowRightSideServe();
        void LeftSideDestroyed(Engine::AActor* DestroyedActor);
        void SpawnRight();
        void SpawnLeft();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void TravelCapsuleOpen(CoreUObject::UObject* WorldContextObject, SportsScramble::UScramEventBasePayload* Payload);
        void ExecuteUbergraph_TennisArenaScoreboard(int32_t EntryPoint);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Environments/Tennis/TennisArenaScoreboard.TennisArenaScoreboard_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
