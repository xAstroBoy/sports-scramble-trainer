#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "Engine_FPointerToUberGraphFrame.h"
#include "BasicTypes_TArray.h"
#include "BasicTypes_FText.h"
#include "BasicTypes_FName.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "SportsScramble_AScramActor.h"
#include "Engine_ENUMS.h"
#include "ResultsData_FResultsData.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UAudioComponent; };
namespace CG::Engine { class USceneComponent; };
namespace CG::InfoDisplay { class AInfoDisplay_C; };
namespace CG::Announcer_BP { class AAnnouncer_BP_C; };
namespace CG::Engine { class AActor; };
namespace CG::Countdown { class ACountdown_C; };
namespace CG::Engine { class USoundBase; };
namespace CG::ScramGameInstance { class UScramGameInstance_C; };
namespace CG::Announcer_AnimBP { class UAnnouncer_AnimBP_C; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TrainingBase
{
    /**
     * BlueprintGeneratedClass /Game/Blueprints/Training/TrainingBase.TrainingBase_C
     * Size -> 0x00D1 (FullSize[0x0419] - InheritedSize[0x0348])
     */
    class ATrainingBase_C : public SportsScramble::AScramActor
    {
    public:
        Engine::FPointerToUberGraphFrame                             UberGraphFrame;                                          //  ZeroConstructor, Transient, DuplicateTransient
        Engine::UAudioComponent*                                     Audio_321_Countdown;                                     //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_ChallengeMusic_Looping;                            //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::UAudioComponent*                                     Audio_ChallengeMusic_1_Min;                              //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        Engine::USceneComponent*                                     Root;                                                    //  BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash
        InfoDisplay::AInfoDisplay_C*                                 InfoPanel;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Announcer_BP::AAnnouncer_BP_C*                               Announcer;                                               //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<Engine::AActor*>                          GameElements;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance
        Countdown::ACountdown_C*                                     CountdownActor;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Engine::USoundBase*                                          Audio_TryAgain;                                          //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::FText                                            InstructionalText01;                                     //  Edit, BlueprintVisible, DisableEditOnInstance
        BasicTypes::FText                                            InstructionalText02;                                     //  Edit, BlueprintVisible, DisableEditOnInstance
        Engine::USoundBase*                                          SFX_StartOfMatchMusic;                                   //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      TargetScore;                                             //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        int32_t                                                      CurrentScore;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        BasicTypes::TArray<BasicTypes::FName>                        AnnouncerAudioList;                                      //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance
        ScramGameInstance::UScramGameInstance_C*                     GameInstance;                                            //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        Announcer_AnimBP::UAnnouncer_AnimBP_C*                       AnnouncerAnimBP;                                         //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        float                                                        LoopingMusicDelay;                                       //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash
        uint8_t                                                      UnknownData_0000[0x4];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::UScriptMulticastDelegate                         TrainingComplete;                                        //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable
        bool                                                         UnlockUnlimitedTraining;                                 //  Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor

    public:
        void StopFlashButtons();
        void FlashButtons();
        void HasPlayerCompletedTrainingRoomPreviously(bool* AlreadyCompleted);
        void DestroyAllBalls();
        void TrainingBaseInitialize();
        void CleanUpGameElements();
        void SpawnCountDown(Countdown::ACountdown_C** CountdownActor);
        void SpawnAnnouncerActor(BasicTypes::TArray<BasicTypes::FName>* AnnouncerAudioList);
        void SpawnPopupInfo(const BasicTypes::FText& Text, float DisplayTime);
        void UserConstructionScript();
        void AnnouncerReady();
        void ClosingAnnouncerComplete();
        void DisplayStartOfMatchInfo(bool FadeInOutMusic);
        void ReceiveBeginPlay();
        void EndOfGame();
        void MusicFadeOut();
        void MusicFadeIn();
        void NotifyTrainingContinue(Engine::AActor* DestroyedActor);
        void AnnouncerPairedComplete();
        void AnnouncerExitSequenceComplete();
        void HandleSuccess();
        void HandleFailure();
        void ReceiveEndPlay(Engine::EEndPlayReason EndPlayReason);
        void ExecuteUbergraph_TrainingBase(int32_t EntryPoint);
        void TrainingComplete__DelegateSignature(const ResultsData::FResultsData& Results);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("BlueprintGeneratedClass /Game/Blueprints/Training/TrainingBase.TrainingBase_C");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
