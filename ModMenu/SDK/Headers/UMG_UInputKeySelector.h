#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "SlateCore_FButtonStyle.h"
#include "SlateCore_FTextBlockStyle.h"
#include "Slate_FInputChord.h"
#include "SlateCore_FSlateFontInfo.h"
#include "SlateCore_FMargin.h"
#include "CoreUObject_FLinearColor.h"
#include "BasicTypes_FText.h"
#include "BasicTypes_TArray.h"
#include "InputCore_FKey.h"
#include "BasicTypes_UScriptMulticastDelegate.h"
#include "UMG_UWidget.h"
#include "UMG_ENUMS.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.InputKeySelector
     * Size -> 0x0570 (FullSize[0x0678] - InheritedSize[0x0108])
     */
    class UInputKeySelector : public UMG::UWidget
    {
    public:
        SlateCore::FButtonStyle                                      WidgetStyle;                                             //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        SlateCore::FTextBlockStyle                                   TextStyle;                                               //  Edit, BlueprintVisible, NativeAccessSpecifierPublic
        Slate::FInputChord                                           SelectedKey;                                             //  BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::FSlateFontInfo                                    Font;                                                    //  Deprecated, HasGetValueTypeHash, NativeAccessSpecifierPublic
        SlateCore::FMargin                                           Margin;                                                  //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
        CoreUObject::FLinearColor                                    ColorAndOpacity;                                         //  ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        BasicTypes::FText                                            KeySelectionText;                                        //  Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
        BasicTypes::FText                                            NoKeySpecifiedText;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
        bool                                                         bAllowModifierKeys;                                      //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        bool                                                         bAllowGamepadKeys;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x6];                                   //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<InputCore::FKey>                          EscapeKeys;                                              //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnKeySelected;                                           //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        BasicTypes::UScriptMulticastDelegate                         OnIsSelectingKeyChanged;                                 //  ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetTextBlockVisibility(UMG::ESlateVisibility InVisibility);
        void SetSelectedKey(const Slate::FInputChord& InSelectedKey);
        void SetNoKeySpecifiedText(const BasicTypes::FText& InNoKeySpecifiedText);
        void SetKeySelectionText(const BasicTypes::FText& InKeySelectionText);
        void SetEscapeKeys(BasicTypes::TArray<InputCore::FKey> InKeys);
        void SetAllowModifierKeys(bool bInAllowModifierKeys);
        void SetAllowGamepadKeys(bool bInAllowGamepadKeys);
        void OnKeySelected__DelegateSignature(const Slate::FInputChord& SelectedKey);
        void OnIsSelectingKeyChanged__DelegateSignature();
        bool GetIsSelectingKey();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.InputKeySelector");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
