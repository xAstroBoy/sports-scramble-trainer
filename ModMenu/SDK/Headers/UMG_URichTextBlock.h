#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "BasicTypes_FText.h"
#include "BasicTypes_TArray.h"
#include "UMG_UTextLayoutWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::Engine { class UDataTable; };
namespace CG::UMG { class URichTextBlockDecorator; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.RichTextBlock
     * Size -> 0x0248 (FullSize[0x0370] - InheritedSize[0x0128])
     */
    class URichTextBlock : public UMG::UTextLayoutWidget
    {
    public:
        BasicTypes::FText                                            Text;                                                    //  Edit, Protected, NativeAccessSpecifierProtected
        Engine::UDataTable*                                          TextStyleSet;                                            //  Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
        BasicTypes::TArray<UMG::URichTextBlockDecorator*>            DecoratorClasses;                                        //  Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0000[0x1F8];                                 //  MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
        BasicTypes::TArray<UMG::URichTextBlockDecorator*>            InstanceDecorators;                                      //  ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected
        uint8_t                                                      UnknownData_0001[0x10];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetText(const BasicTypes::FText& InText);
        UMG::URichTextBlockDecorator* GetDecoratorByClass(UMG::URichTextBlockDecorator* DecoratorClass);
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.RichTextBlock");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
