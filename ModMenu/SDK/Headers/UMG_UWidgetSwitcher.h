#pragma once

/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include <cstdint>
#include <vector>
#include <string>
#include "UMG_UPanelWidget.h"

// --------------------------------------------------
// # Forwards
// --------------------------------------------------
namespace CG::UMG { class UWidget; };
namespace CG::CoreUObject { class UClass; };

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    /**
     * Class /Script/UMG.WidgetSwitcher
     * Size -> 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
     */
    class UWidgetSwitcher : public UMG::UPanelWidget
    {
    public:
        int32_t                                                      ActiveWidgetIndex;                                       //  Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
        uint8_t                                                      UnknownData_0000[0x14];                                  //  MISSED OFFSET (PADDING)

    public:
        void SetActiveWidgetIndex(int32_t Index);
        void SetActiveWidget(UMG::UWidget* Widget);
        UMG::UWidget* GetWidgetAtIndex(int32_t Index);
        int32_t GetNumWidgets();
        int32_t GetActiveWidgetIndex();
        UMG::UWidget* GetActiveWidget();
        static inline CoreUObject::UClass* StaticClass()
        {
            static CoreUObject::UClass* ptr = nullptr;
            if (!ptr)
                ptr = CoreUObject::UObject::FindClass("Class /Script/UMG.WidgetSwitcher");
            return ptr;
        }
    };
}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
