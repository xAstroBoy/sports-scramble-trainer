/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/OculusMR_ENUMS.h"
#include "Headers/OculusMR_PARAMS.h"
#include "Headers/OculusMR_AOculusMR_BoundaryActor.h"
#include "Headers/OculusMR_UOculusMR_BoundaryMeshComponent.h"
#include "Headers/OculusMR_AOculusMR_CastingCameraActor.h"
#include "Headers/OculusMR_UOculusMR_PlaneMeshComponent.h"
#include "Headers/OculusMR_UOculusMR_Settings.h"
#include "Headers/OculusMR_UOculusMR_State.h"
#include "Headers/OculusMR_UOculusMRFunctionLibrary.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::OculusMR
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x002B54A0
     *         Name   -> Function /Script/OculusMR.OculusMR_PlaneMeshComponent.SetCustomMeshTriangles
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle> Triangles                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UOculusMR_PlaneMeshComponent::SetCustomMeshTriangles(BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle> Triangles)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_PlaneMeshComponent.SetCustomMeshTriangles");
        
        UOculusMR_PlaneMeshComponent_SetCustomMeshTriangles_Params params {};
        params.Triangles = Triangles;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5220
     *         Name   -> Function /Script/OculusMR.OculusMR_PlaneMeshComponent.ClearCustomMeshTriangles
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UOculusMR_PlaneMeshComponent::ClearCustomMeshTriangles()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_PlaneMeshComponent.ClearCustomMeshTriangles");
        
        UOculusMR_PlaneMeshComponent_ClearCustomMeshTriangles_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B50F0
     *         Name   -> Function /Script/OculusMR.OculusMR_PlaneMeshComponent.AddCustomMeshTriangles
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle> Triangles                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_PlaneMeshComponent::AddCustomMeshTriangles(BasicTypes::TArray<OculusMR::FOculusMR_PlaneMeshTriangle> Triangles)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_PlaneMeshComponent.AddCustomMeshTriangles");
        
        UOculusMR_PlaneMeshComponent_AddCustomMeshTriangles_Params params {};
        params.Triangles = Triangles;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B56E0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SetUseDynamicLighting
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SetUseDynamicLighting(bool val)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SetUseDynamicLighting");
        
        UOculusMR_Settings_SetUseDynamicLighting_Params params {};
        params.val = val;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B55E0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SetIsCasting
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SetIsCasting(bool val)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SetIsCasting");
        
        UOculusMR_Settings_SetIsCasting_Params params {};
        params.val = val;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5560
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SetDepthQuality
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_DepthQuality                   val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SetDepthQuality(OculusMR::EOculusMR_DepthQuality val)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SetDepthQuality");
        
        UOculusMR_Settings_SetDepthQuality_Params params {};
        params.val = val;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5420
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SetCompositionMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_CompositionMethod              val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SetCompositionMethod(OculusMR::EOculusMR_CompositionMethod val)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SetCompositionMethod");
        
        UOculusMR_Settings_SetCompositionMethod_Params params {};
        params.val = val;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B53A0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SetCapturingCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_CameraDeviceEnum               val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SetCapturingCamera(OculusMR::EOculusMR_CameraDeviceEnum val)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SetCapturingCamera");
        
        UOculusMR_Settings_SetCapturingCamera_Params params {};
        params.val = val;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5380
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.SaveToIni
     *         Flags  -> (Final, Native, Public, BlueprintCallable, Const)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::SaveToIni()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.SaveToIni");
        
        UOculusMR_Settings_SaveToIni_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5360
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.LoadFromIni
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::LoadFromIni()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.LoadFromIni");
        
        UOculusMR_Settings_LoadFromIni_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5340
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetUseDynamicLighting
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UOculusMR_Settings::GetUseDynamicLighting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetUseDynamicLighting");
        
        UOculusMR_Settings_GetUseDynamicLighting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B52C0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetIsCasting
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UOculusMR_Settings::GetIsCasting()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetIsCasting");
        
        UOculusMR_Settings_GetIsCasting_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B52A0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetDepthQuality
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_DepthQuality                   ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OculusMR::EOculusMR_DepthQuality UOculusMR_Settings::GetDepthQuality()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetDepthQuality");
        
        UOculusMR_Settings_GetDepthQuality_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5280
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetCompositionMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_CompositionMethod              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OculusMR::EOculusMR_CompositionMethod UOculusMR_Settings::GetCompositionMethod()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetCompositionMethod");
        
        UOculusMR_Settings_GetCompositionMethod_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5260
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetCapturingCamera
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::EOculusMR_CameraDeviceEnum               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OculusMR::EOculusMR_CameraDeviceEnum UOculusMR_Settings::GetCapturingCamera()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetCapturingCamera");
        
        UOculusMR_Settings_GetCapturingCamera_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5240
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.GetBindToTrackedCameraIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UOculusMR_Settings::GetBindToTrackedCameraIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.GetBindToTrackedCameraIndex");
        
        UOculusMR_Settings_GetBindToTrackedCameraIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B51A0
     *         Name   -> Function /Script/OculusMR.OculusMR_Settings.BindToTrackedCameraIndexIfAvailable
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InTrackedCameraIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMR_Settings::BindToTrackedCameraIndexIfAvailable(int32_t InTrackedCameraIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMR_Settings.BindToTrackedCameraIndexIfAvailable");
        
        UOculusMR_Settings_BindToTrackedCameraIndexIfAvailable_Params params {};
        params.InTrackedCameraIndex = InTrackedCameraIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5670
     *         Name   -> Function /Script/OculusMR.OculusMRFunctionLibrary.SetTrackingReferenceComponent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOculusMRFunctionLibrary::STATIC_SetTrackingReferenceComponent(Engine::USceneComponent* Component)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMRFunctionLibrary.SetTrackingReferenceComponent");
        
        UOculusMRFunctionLibrary_SetTrackingReferenceComponent_Params params {};
        params.Component = Component;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x002B5310
     *         Name   -> Function /Script/OculusMR.OculusMRFunctionLibrary.GetTrackingReferenceComponent
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USceneComponent*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::USceneComponent* UOculusMRFunctionLibrary::STATIC_GetTrackingReferenceComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMRFunctionLibrary.GetTrackingReferenceComponent");
        
        UOculusMRFunctionLibrary_GetTrackingReferenceComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x002B52E0
     *         Name   -> Function /Script/OculusMR.OculusMRFunctionLibrary.GetOculusMRSettings
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         OculusMR::UOculusMR_Settings*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OculusMR::UOculusMR_Settings* UOculusMRFunctionLibrary::STATIC_GetOculusMRSettings()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OculusMR.OculusMRFunctionLibrary.GetOculusMRSettings");
        
        UOculusMRFunctionLibrary_GetOculusMRSettings_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
