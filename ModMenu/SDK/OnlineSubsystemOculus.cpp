/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include "../pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/OnlineSubsystemOculus_PARAMS.h"
#include "Headers/OnlineSubsystemOculus_UOculusIdentityCallbackProxy.h"
#include "Headers/OnlineSubsystemOculus_UOculusEntitlementCallbackProxy.h"
#include "Headers/OnlineSubsystemOculus_UOculusFindSessionsCallbackProxy.h"
#include "Headers/OnlineSubsystemOculus_UOculusUpdateSessionCallbackProxy.h"
#include "Headers/OnlineSubsystemOculus_UOculusNetDriver.h"
#include "Headers/OnlineSubsystemOculus_UOculusCreateSessionCallbackProxy.h"
#include "Headers/OnlineSubsystemOculus_UOculusNetConnection.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::OnlineSubsystemOculus
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x001E6A80
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusIdentityCallbackProxy.GetOculusIdentity
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            LocalUserNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         OnlineSubsystemOculus::UOculusIdentityCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusIdentityCallbackProxy* UOculusIdentityCallbackProxy::STATIC_GetOculusIdentity(int32_t LocalUserNum)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusIdentityCallbackProxy.GetOculusIdentity");
        
        UOculusIdentityCallbackProxy_GetOculusIdentity_Params params {};
        params.LocalUserNum = LocalUserNum;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x001E6B90
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusEntitlementCallbackProxy.VerifyEntitlement
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         OnlineSubsystemOculus::UOculusEntitlementCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusEntitlementCallbackProxy* UOculusEntitlementCallbackProxy::STATIC_VerifyEntitlement()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusEntitlementCallbackProxy.VerifyEntitlement");
        
        UOculusEntitlementCallbackProxy_VerifyEntitlement_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x001E6A00
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusFindSessionsCallbackProxy.FindModeratedSessions
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         OnlineSubsystemOculus::UOculusFindSessionsCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusFindSessionsCallbackProxy* UOculusFindSessionsCallbackProxy::STATIC_FindModeratedSessions(int32_t MaxResults)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusFindSessionsCallbackProxy.FindModeratedSessions");
        
        UOculusFindSessionsCallbackProxy_FindModeratedSessions_Params params {};
        params.MaxResults = MaxResults;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x001E68E0
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusFindSessionsCallbackProxy.FindMatchmakingSessions
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            MaxResults                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OculusMatchmakingPool                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         OnlineSubsystemOculus::UOculusFindSessionsCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusFindSessionsCallbackProxy* UOculusFindSessionsCallbackProxy::STATIC_FindMatchmakingSessions(int32_t MaxResults, const BasicTypes::FString& OculusMatchmakingPool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusFindSessionsCallbackProxy.FindMatchmakingSessions");
        
        UOculusFindSessionsCallbackProxy_FindMatchmakingSessions_Params params {};
        params.MaxResults = MaxResults;
        params.OculusMatchmakingPool = OculusMatchmakingPool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x001E6B00
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusUpdateSessionCallbackProxy.SetSessionEnqueue
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bShouldEnqueueInMatchmakingPool                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         OnlineSubsystemOculus::UOculusUpdateSessionCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusUpdateSessionCallbackProxy* UOculusUpdateSessionCallbackProxy::STATIC_SetSessionEnqueue(bool bShouldEnqueueInMatchmakingPool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusUpdateSessionCallbackProxy.SetSessionEnqueue");
        
        UOculusUpdateSessionCallbackProxy_SetSessionEnqueue_Params params {};
        params.bShouldEnqueueInMatchmakingPool = bShouldEnqueueInMatchmakingPool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x001E67C0
     *         Name   -> Function /Script/OnlineSubsystemOculus.OculusCreateSessionCallbackProxy.CreateSession
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            PublicConnections                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                OculusMatchmakingPool                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         OnlineSubsystemOculus::UOculusCreateSessionCallbackProxy* ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    OnlineSubsystemOculus::UOculusCreateSessionCallbackProxy* UOculusCreateSessionCallbackProxy::STATIC_CreateSession(int32_t PublicConnections, const BasicTypes::FString& OculusMatchmakingPool)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/OnlineSubsystemOculus.OculusCreateSessionCallbackProxy.CreateSession");
        
        UOculusCreateSessionCallbackProxy_CreateSession_Params params {};
        params.PublicConnections = PublicConnections;
        params.OculusMatchmakingPool = OculusMatchmakingPool;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
