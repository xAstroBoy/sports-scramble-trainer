/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include "../pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/TimeManagement_ENUMS.h"
#include "Headers/TimeManagement_PARAMS.h"
#include "Headers/TimeManagement_UFixedFrameRateCustomTimeStep.h"
#include "Headers/TimeManagement_UTimeManagementBlueprintLibrary.h"
#include "Headers/TimeManagement_UTimeSynchronizationSource.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::TimeManagement
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x00E48320
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.TransformTime
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameTime                            SourceTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            SourceRate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            DestinationRate                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UTimeManagementBlueprintLibrary::STATIC_TransformTime(const CoreUObject::FFrameTime& SourceTime, const CoreUObject::FFrameRate& SourceRate, const CoreUObject::FFrameRate& DestinationRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.TransformTime");
        
        UTimeManagementBlueprintLibrary_TransformTime_Params params {};
        params.SourceTime = SourceTime;
        params.SourceRate = SourceRate;
        params.DestinationRate = DestinationRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E48260
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Subtract_FrameNumberInteger
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Subtract_FrameNumberInteger(const CoreUObject::FFrameNumber& A, int32_t B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Subtract_FrameNumberInteger");
        
        UTimeManagementBlueprintLibrary_Subtract_FrameNumberInteger_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E48260
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Subtract_FrameNumberFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          B                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Subtract_FrameNumberFrameNumber(const CoreUObject::FFrameNumber& A, const CoreUObject::FFrameNumber& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Subtract_FrameNumberFrameNumber");
        
        UTimeManagementBlueprintLibrary_Subtract_FrameNumberFrameNumber_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E48110
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.SnapFrameTimeToRate
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameTime                            SourceTime                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            SourceRate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            SnapToRate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UTimeManagementBlueprintLibrary::STATIC_SnapFrameTimeToRate(const CoreUObject::FFrameTime& SourceTime, const CoreUObject::FFrameRate& SourceRate, const CoreUObject::FFrameRate& SnapToRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.SnapFrameTimeToRate");
        
        UTimeManagementBlueprintLibrary_SnapFrameTimeToRate_Params params {};
        params.SourceTime = SourceTime;
        params.SourceRate = SourceRate;
        params.SnapToRate = SnapToRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E48030
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Multiply_SecondsFrameRate
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            FrameRate                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameTime                            ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameTime UTimeManagementBlueprintLibrary::STATIC_Multiply_SecondsFrameRate(float TimeInSeconds, const CoreUObject::FFrameRate& FrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Multiply_SecondsFrameRate");
        
        UTimeManagementBlueprintLibrary_Multiply_SecondsFrameRate_Params params {};
        params.TimeInSeconds = TimeInSeconds;
        params.FrameRate = FrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47F70
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Multiply_FrameNumberInteger
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Multiply_FrameNumberInteger(const CoreUObject::FFrameNumber& A, int32_t B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Multiply_FrameNumberInteger");
        
        UTimeManagementBlueprintLibrary_Multiply_FrameNumberInteger_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47E70
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.IsValid_MultipleOf
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameRate                            InFrameRate                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameRate                            OtherFramerate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTimeManagementBlueprintLibrary::STATIC_IsValid_MultipleOf(const CoreUObject::FFrameRate& InFrameRate, const CoreUObject::FFrameRate& OtherFramerate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.IsValid_MultipleOf");
        
        UTimeManagementBlueprintLibrary_IsValid_MultipleOf_Params params {};
        params.InFrameRate = InFrameRate;
        params.OtherFramerate = OtherFramerate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47DD0
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.IsValid_Framerate
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameRate                            InFrameRate                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UTimeManagementBlueprintLibrary::STATIC_IsValid_Framerate(const CoreUObject::FFrameRate& InFrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.IsValid_Framerate");
        
        UTimeManagementBlueprintLibrary_IsValid_Framerate_Params params {};
        params.InFrameRate = InFrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47D90
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.GetTimecode
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FTimecode                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FTimecode UTimeManagementBlueprintLibrary::STATIC_GetTimecode()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.GetTimecode");
        
        UTimeManagementBlueprintLibrary_GetTimecode_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47CD0
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Divide_FrameNumberInteger
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Divide_FrameNumberInteger(const CoreUObject::FFrameNumber& A, int32_t B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Divide_FrameNumberInteger");
        
        UTimeManagementBlueprintLibrary_Divide_FrameNumberInteger_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47BA0
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_TimecodeToString
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FTimecode                             InTimecode                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bForceSignDisplay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UTimeManagementBlueprintLibrary::STATIC_Conv_TimecodeToString(const CoreUObject::FTimecode& InTimecode, bool bForceSignDisplay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_TimecodeToString");
        
        UTimeManagementBlueprintLibrary_Conv_TimecodeToString_Params params {};
        params.InTimecode = InTimecode;
        params.bForceSignDisplay = bForceSignDisplay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47AF0
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_QualifiedFrameTimeToSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FQualifiedFrameTime                   InFrameTime                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UTimeManagementBlueprintLibrary::STATIC_Conv_QualifiedFrameTimeToSeconds(const CoreUObject::FQualifiedFrameTime& InFrameTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_QualifiedFrameTimeToSeconds");
        
        UTimeManagementBlueprintLibrary_Conv_QualifiedFrameTimeToSeconds_Params params {};
        params.InFrameTime = InFrameTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47A50
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_FrameRateToSeconds
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameRate                            InFrameRate                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UTimeManagementBlueprintLibrary::STATIC_Conv_FrameRateToSeconds(const CoreUObject::FFrameRate& InFrameRate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_FrameRateToSeconds");
        
        UTimeManagementBlueprintLibrary_Conv_FrameRateToSeconds_Params params {};
        params.InFrameRate = InFrameRate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E479C0
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_FrameNumberToInteger
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          InFrameNumber                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UTimeManagementBlueprintLibrary::STATIC_Conv_FrameNumberToInteger(const CoreUObject::FFrameNumber& InFrameNumber)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Conv_FrameNumberToInteger");
        
        UTimeManagementBlueprintLibrary_Conv_FrameNumberToInteger_Params params {};
        params.InFrameNumber = InFrameNumber;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47900
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Add_FrameNumberInteger
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Add_FrameNumberInteger(const CoreUObject::FFrameNumber& A, int32_t B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Add_FrameNumberInteger");
        
        UTimeManagementBlueprintLibrary_Add_FrameNumberInteger_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00E47900
     *         Name   -> Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Add_FrameNumberFrameNumber
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::FFrameNumber                          A                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          B                                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FFrameNumber                          ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FFrameNumber UTimeManagementBlueprintLibrary::STATIC_Add_FrameNumberFrameNumber(const CoreUObject::FFrameNumber& A, const CoreUObject::FFrameNumber& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/TimeManagement.TimeManagementBlueprintLibrary.Add_FrameNumberFrameNumber");
        
        UTimeManagementBlueprintLibrary_Add_FrameNumberFrameNumber_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
