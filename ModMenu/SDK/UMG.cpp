/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    09/09/2024                  |
 * ----------------------------------------
 */

#include "../pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/UMG_ENUMS.h"
#include "Headers/UMG_PARAMS.h"
#include "Headers/UMG_UVisual.h"
#include "Headers/UMG_UWidget.h"
#include "Headers/UMG_UUserWidget.h"
#include "Headers/UMG_UAsyncTaskDownloadImage.h"
#include "Headers/UMG_UPanelWidget.h"
#include "Headers/UMG_UContentWidget.h"
#include "Headers/UMG_UBackgroundBlur.h"
#include "Headers/UMG_UPanelSlot.h"
#include "Headers/UMG_UBackgroundBlurSlot.h"
#include "Headers/UMG_UPropertyBinding.h"
#include "Headers/UMG_UBoolBinding.h"
#include "Headers/UMG_UBorder.h"
#include "Headers/UMG_UBorderSlot.h"
#include "Headers/UMG_UBrushBinding.h"
#include "Headers/UMG_UButton.h"
#include "Headers/UMG_UButtonSlot.h"
#include "Headers/UMG_UCanvasPanel.h"
#include "Headers/UMG_UCanvasPanelSlot.h"
#include "Headers/UMG_UCheckBox.h"
#include "Headers/UMG_UCheckedStateBinding.h"
#include "Headers/UMG_UCircularThrobber.h"
#include "Headers/UMG_UColorBinding.h"
#include "Headers/UMG_UComboBox.h"
#include "Headers/UMG_UComboBoxString.h"
#include "Headers/UMG_UDragDropOperation.h"
#include "Headers/UMG_UDynamicEntryBox.h"
#include "Headers/UMG_UEditableText.h"
#include "Headers/UMG_UEditableTextBox.h"
#include "Headers/UMG_UExpandableArea.h"
#include "Headers/UMG_UFloatBinding.h"
#include "Headers/UMG_UGridPanel.h"
#include "Headers/UMG_UGridSlot.h"
#include "Headers/UMG_UHorizontalBox.h"
#include "Headers/UMG_UHorizontalBoxSlot.h"
#include "Headers/UMG_UImage.h"
#include "Headers/UMG_UInputKeySelector.h"
#include "Headers/UMG_UInt32Binding.h"
#include "Headers/UMG_UInvalidationBox.h"
#include "Headers/UMG_INativeUserListEntry.h"
#include "Headers/UMG_IUserListEntry.h"
#include "Headers/UMG_IUserObjectListEntry.h"
#include "Headers/UMG_UListViewBase.h"
#include "Headers/UMG_UListView.h"
#include "Headers/UMG_UListViewDesignerPreviewItem.h"
#include "Headers/UMG_UOverlay.h"
#include "Headers/UMG_UOverlaySlot.h"
#include "Headers/UMG_UProgressBar.h"
#include "Headers/UMG_URetainerBox.h"
#include "Headers/UMG_URichTextBlock.h"
#include "Headers/UMG_URichTextBlockDecorator.h"
#include "Headers/UMG_USlider.h"
#include "Headers/UMG_USpacer.h"
#include "Headers/UMG_USpinBox.h"
#include "Headers/UMG_UTextBinding.h"
#include "Headers/UMG_UTextBlock.h"
#include "Headers/UMG_UThrobber.h"
#include "Headers/UMG_UTileView.h"
#include "Headers/UMG_UTreeView.h"
#include "Headers/UMG_UUMGSequencePlayer.h"
#include "Headers/UMG_UUniformGridPanel.h"
#include "Headers/UMG_UUniformGridSlot.h"
#include "Headers/UMG_UVerticalBox.h"
#include "Headers/UMG_UVerticalBoxSlot.h"
#include "Headers/UMG_UViewport.h"
#include "Headers/UMG_UVisibilityBinding.h"
#include "Headers/UMG_UWidgetAnimation.h"
#include "Headers/UMG_UWidgetBinding.h"
#include "Headers/UMG_UWidgetBlueprintGeneratedClass.h"
#include "Headers/UMG_UWidgetBlueprintLibrary.h"
#include "Headers/UMG_UWindowTitleBarAreaSlot.h"
#include "Headers/UMG_UWrapBox.h"
#include "Headers/UMG_UWrapBoxSlot.h"
#include "Headers/UMG_UScaleBoxSlot.h"
#include "Headers/UMG_UScrollBar.h"
#include "Headers/UMG_UScrollBox.h"
#include "Headers/UMG_UScrollBoxSlot.h"
#include "Headers/UMG_USizeBox.h"
#include "Headers/UMG_USizeBoxSlot.h"
#include "Headers/UMG_USlateBlueprintLibrary.h"
#include "Headers/UMG_USlateVectorArtData.h"
#include "Headers/UMG_UMenuAnchor.h"
#include "Headers/UMG_URichTextBlockImageDecorator.h"
#include "Headers/UMG_USafeZone.h"
#include "Headers/UMG_USafeZoneSlot.h"
#include "Headers/UMG_UScaleBox.h"
#include "Headers/UMG_UWidgetComponent.h"
#include "Headers/UMG_UWidgetInteractionComponent.h"
#include "Headers/UMG_UWidgetLayoutLibrary.h"
#include "Headers/UMG_UWidgetNavigation.h"
#include "Headers/UMG_UWidgetSwitcher.h"
#include "Headers/UMG_UWidgetSwitcherSlot.h"
#include "Headers/UMG_UWidgetTree.h"
#include "Headers/UMG_UWindowTitleBarArea.h"
#include "Headers/UMG_UMouseCursorBinding.h"
#include "Headers/UMG_UMovieScene2DTransformSection.h"
#include "Headers/UMG_UMovieScene2DTransformTrack.h"
#include "Headers/UMG_UMovieSceneMarginSection.h"
#include "Headers/UMG_UMovieSceneMarginTrack.h"
#include "Headers/UMG_UMovieSceneWidgetMaterialTrack.h"
#include "Headers/UMG_UTextLayoutWidget.h"
#include "Headers/UMG_UMultiLineEditableText.h"
#include "Headers/UMG_UMultiLineEditableTextBox.h"
#include "Headers/UMG_UNamedSlot.h"
#include "Headers/UMG_INamedSlotInterface.h"
#include "Headers/UMG_UNativeWidgetHost.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::UMG
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x01005680
     *         Name   -> Function /Script/UMG.Widget.SetVisibility
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::ESlateVisibility                              InVisibility                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetVisibility(UMG::ESlateVisibility InVisibility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetVisibility");
        
        UWidget_SetVisibility_Params params {};
        params.InVisibility = InVisibility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010054E0
     *         Name   -> Function /Script/UMG.Widget.SetUserFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetUserFocus(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetUserFocus");
        
        UWidget_SetUserFocus_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005400
     *         Name   -> Function /Script/UMG.Widget.SetToolTipText
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InToolTipText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetToolTipText(const BasicTypes::FText& InToolTipText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetToolTipText");
        
        UWidget_SetToolTipText_Params params {};
        params.InToolTipText = InToolTipText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005380
     *         Name   -> Function /Script/UMG.Widget.SetToolTip
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetToolTip(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetToolTip");
        
        UWidget_SetToolTip_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005300
     *         Name   -> Function /Script/UMG.Widget.SetRenderTranslation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Translation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderTranslation(const CoreUObject::FVector2D& Translation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderTranslation");
        
        UWidget_SetRenderTranslation_Params params {};
        params.Translation = Translation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005280
     *         Name   -> Function /Script/UMG.Widget.SetRenderTransformPivot
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Pivot                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderTransformPivot(const CoreUObject::FVector2D& Pivot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderTransformPivot");
        
        UWidget_SetRenderTransformPivot_Params params {};
        params.Pivot = Pivot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010051A0
     *         Name   -> Function /Script/UMG.Widget.SetRenderTransform
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::FWidgetTransform                              InTransform                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderTransform(const UMG::FWidgetTransform& InTransform)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderTransform");
        
        UWidget_SetRenderTransform_Params params {};
        params.InTransform = InTransform;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005120
     *         Name   -> Function /Script/UMG.Widget.SetRenderShear
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Shear                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderShear(const CoreUObject::FVector2D& Shear)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderShear");
        
        UWidget_SetRenderShear_Params params {};
        params.Shear = Shear;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010050A0
     *         Name   -> Function /Script/UMG.Widget.SetRenderScale
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderScale(const CoreUObject::FVector2D& Scale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderScale");
        
        UWidget_SetRenderScale_Params params {};
        params.Scale = Scale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005020
     *         Name   -> Function /Script/UMG.Widget.SetRenderOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InOpacity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderOpacity(float InOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderOpacity");
        
        UWidget_SetRenderOpacity_Params params {};
        params.InOpacity = InOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004FA0
     *         Name   -> Function /Script/UMG.Widget.SetRenderAngle
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              Angle                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetRenderAngle(float Angle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetRenderAngle");
        
        UWidget_SetRenderAngle_Params params {};
        params.Angle = Angle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004E90
     *         Name   -> Function /Script/UMG.Widget.SetNavigationRule
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EUINavigation                           Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::EUINavigationRule                       Rule                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  WidgetToFocus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetNavigationRule(SlateCore::EUINavigation Direction, SlateCore::EUINavigationRule Rule, const BasicTypes::FName& WidgetToFocus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetNavigationRule");
        
        UWidget_SetNavigationRule_Params params {};
        params.Direction = Direction;
        params.Rule = Rule;
        params.WidgetToFocus = WidgetToFocus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004CE0
     *         Name   -> Function /Script/UMG.Widget.SetKeyboardFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidget::SetKeyboardFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetKeyboardFocus");
        
        UWidget_SetKeyboardFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004C50
     *         Name   -> Function /Script/UMG.Widget.SetIsEnabled
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInIsEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetIsEnabled(bool bInIsEnabled)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetIsEnabled");
        
        UWidget_SetIsEnabled_Params params {};
        params.bInIsEnabled = bInIsEnabled;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010045A0
     *         Name   -> Function /Script/UMG.Widget.SetCursor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::EMouseCursor                          InCursor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetCursor(CoreUObject::EMouseCursor InCursor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetCursor");
        
        UWidget_SetCursor_Params params {};
        params.InCursor = InCursor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004520
     *         Name   -> Function /Script/UMG.Widget.SetClipping
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EWidgetClipping                         InClipping                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetClipping(SlateCore::EWidgetClipping InClipping)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetClipping");
        
        UWidget_SetClipping_Params params {};
        params.InClipping = InClipping;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010042A0
     *         Name   -> Function /Script/UMG.Widget.SetAllNavigationRules
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EUINavigationRule                       Rule                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  WidgetToFocus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::SetAllNavigationRules(SlateCore::EUINavigationRule Rule, const BasicTypes::FName& WidgetToFocus)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.SetAllNavigationRules");
        
        UWidget_SetAllNavigationRules_Params params {};
        params.Rule = Rule;
        params.WidgetToFocus = WidgetToFocus;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004260
     *         Name   -> Function /Script/UMG.Widget.ResetCursor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidget::ResetCursor()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.ResetCursor");
        
        UWidget_ResetCursor_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004240
     *         Name   -> Function /Script/UMG.Widget.RemoveFromParent
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidget::RemoveFromParent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.RemoveFromParent");
        
        UWidget_RemoveFromParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.OnReply__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidget::OnReply__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.OnReply__DelegateSignature");
        
        UWidget_OnReply__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.OnPointerEvent__DelegateSignature
     *         Flags  -> (Public, Delegate, HasOutParms)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidget::OnPointerEvent__DelegateSignature(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.OnPointerEvent__DelegateSignature");
        
        UWidget_OnPointerEvent__DelegateSignature_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010039E0
     *         Name   -> Function /Script/UMG.Widget.IsVisible
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::IsVisible()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.IsVisible");
        
        UWidget_IsVisible_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010039B0
     *         Name   -> Function /Script/UMG.Widget.IsHovered
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::IsHovered()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.IsHovered");
        
        UWidget_IsHovered_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003960
     *         Name   -> Function /Script/UMG.Widget.InvalidateLayoutAndVolatility
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidget::InvalidateLayoutAndVolatility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.InvalidateLayoutAndVolatility");
        
        UWidget_InvalidateLayoutAndVolatility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010038D0
     *         Name   -> Function /Script/UMG.Widget.HasUserFocusedDescendants
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasUserFocusedDescendants(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasUserFocusedDescendants");
        
        UWidget_HasUserFocusedDescendants_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003840
     *         Name   -> Function /Script/UMG.Widget.HasUserFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasUserFocus(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasUserFocus");
        
        UWidget_HasUserFocus_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003780
     *         Name   -> Function /Script/UMG.Widget.HasMouseCaptureByUser
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            PointerIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasMouseCaptureByUser(int32_t UserIndex, int32_t PointerIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasMouseCaptureByUser");
        
        UWidget_HasMouseCaptureByUser_Params params {};
        params.UserIndex = UserIndex;
        params.PointerIndex = PointerIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003750
     *         Name   -> Function /Script/UMG.Widget.HasMouseCapture
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasMouseCapture()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasMouseCapture");
        
        UWidget_HasMouseCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003720
     *         Name   -> Function /Script/UMG.Widget.HasKeyboardFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasKeyboardFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasKeyboardFocus");
        
        UWidget_HasKeyboardFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010036F0
     *         Name   -> Function /Script/UMG.Widget.HasFocusedDescendants
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasFocusedDescendants()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasFocusedDescendants");
        
        UWidget_HasFocusedDescendants_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010036C0
     *         Name   -> Function /Script/UMG.Widget.HasAnyUserFocus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::HasAnyUserFocus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.HasAnyUserFocus");
        
        UWidget_HasAnyUserFocus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetWidget__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidget::GetWidget__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetWidget__DelegateSignature");
        
        UWidget_GetWidget__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003620
     *         Name   -> Function /Script/UMG.Widget.GetVisibility
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::ESlateVisibility                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::ESlateVisibility UWidget::GetVisibility()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetVisibility");
        
        UWidget_GetVisibility_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetText__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UWidget::GetText__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetText__DelegateSignature");
        
        UWidget_GetText__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetSlateVisibility__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         UMG::ESlateVisibility                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::ESlateVisibility UWidget::GetSlateVisibility__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetSlateVisibility__DelegateSignature");
        
        UWidget_GetSlateVisibility__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetSlateColor__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         SlateCore::FSlateColor                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateColor UWidget::GetSlateColor__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetSlateColor__DelegateSignature");
        
        UWidget_GetSlateColor__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetSlateBrush__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UWidget::GetSlateBrush__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetSlateBrush__DelegateSignature");
        
        UWidget_GetSlateBrush__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003340
     *         Name   -> Function /Script/UMG.Widget.GetRenderOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UWidget::GetRenderOpacity()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetRenderOpacity");
        
        UWidget_GetRenderOpacity_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003310
     *         Name   -> Function /Script/UMG.Widget.GetParent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UPanelWidget*                                 ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UPanelWidget* UWidget::GetParent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetParent");
        
        UWidget_GetParent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010032E0
     *         Name   -> Function /Script/UMG.Widget.GetOwningPlayer
     *         Flags  -> (BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::APlayerController*                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::APlayerController* UWidget::GetOwningPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetOwningPlayer");
        
        UWidget_GetOwningPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010032B0
     *         Name   -> Function /Script/UMG.Widget.GetOwningLocalPlayer
     *         Flags  -> (BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ULocalPlayer*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ULocalPlayer* UWidget::GetOwningLocalPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetOwningLocalPlayer");
        
        UWidget_GetOwningLocalPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetMouseCursor__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         CoreUObject::EMouseCursor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::EMouseCursor UWidget::GetMouseCursor__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetMouseCursor__DelegateSignature");
        
        UWidget_GetMouseCursor__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetLinearColor__DelegateSignature
     *         Flags  -> (Public, Delegate, HasDefaults)
     * Parameters:
     *         CoreUObject::FLinearColor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FLinearColor UWidget::GetLinearColor__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetLinearColor__DelegateSignature");
        
        UWidget_GetLinearColor__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010030F0
     *         Name   -> Function /Script/UMG.Widget.GetIsEnabled
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::GetIsEnabled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetIsEnabled");
        
        UWidget_GetIsEnabled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetInt32__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UWidget::GetInt32__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetInt32__DelegateSignature");
        
        UWidget_GetInt32__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetFloat__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UWidget::GetFloat__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetFloat__DelegateSignature");
        
        UWidget_GetFloat__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002A90
     *         Name   -> Function /Script/UMG.Widget.GetDesiredSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidget::GetDesiredSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetDesiredSize");
        
        UWidget_GetDesiredSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002A60
     *         Name   -> Function /Script/UMG.Widget.GetClipping
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SlateCore::EWidgetClipping                         ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SlateCore::EWidgetClipping UWidget::GetClipping()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetClipping");
        
        UWidget_GetClipping_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetCheckBoxState__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         SlateCore::ECheckBoxState                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SlateCore::ECheckBoxState UWidget::GetCheckBoxState__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetCheckBoxState__DelegateSignature");
        
        UWidget_GetCheckBoxState__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002A20
     *         Name   -> Function /Script/UMG.Widget.GetCachedGeometry
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SlateCore::FGeometry                               ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    SlateCore::FGeometry UWidget::GetCachedGeometry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.GetCachedGeometry");
        
        UWidget_GetCachedGeometry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GetBool__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidget::GetBool__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GetBool__DelegateSignature");
        
        UWidget_GetBool__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GenerateWidgetForString__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         BasicTypes::FString                                Item                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidget::GenerateWidgetForString__DelegateSignature(const BasicTypes::FString& Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GenerateWidgetForString__DelegateSignature");
        
        UWidget_GenerateWidgetForString__DelegateSignature_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.Widget.GenerateWidgetForObject__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidget::GenerateWidgetForObject__DelegateSignature(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.Widget.GenerateWidgetForObject__DelegateSignature");
        
        UWidget_GenerateWidgetForObject__DelegateSignature_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002220
     *         Name   -> Function /Script/UMG.Widget.ForceVolatile
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidget::ForceVolatile(bool bForce)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.ForceVolatile");
        
        UWidget_ForceVolatile_Params params {};
        params.bForce = bForce;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01002200
     *         Name   -> Function /Script/UMG.Widget.ForceLayoutPrepass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidget::ForceLayoutPrepass()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Widget.ForceLayoutPrepass");
        
        UWidget_ForceLayoutPrepass_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE310
     *         Name   -> Function /Script/UMG.UserWidget.UnregisterInputComponent
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::UnregisterInputComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.UnregisterInputComponent");
        
        UUserWidget_UnregisterInputComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.Tick
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         float                                              InDeltaTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::Tick(const SlateCore::FGeometry& MyGeometry, float InDeltaTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.Tick");
        
        UUserWidget_Tick_Params params {};
        params.MyGeometry = MyGeometry;
        params.InDeltaTime = InDeltaTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE240
     *         Name   -> Function /Script/UMG.UserWidget.StopListeningForInputAction
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EInputEvent                                EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::StopListeningForInputAction(const BasicTypes::FName& ActionName, Engine::EInputEvent EventType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.StopListeningForInputAction");
        
        UUserWidget_StopListeningForInputAction_Params params {};
        params.ActionName = ActionName;
        params.EventType = EventType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE220
     *         Name   -> Function /Script/UMG.UserWidget.StopListeningForAllInputActions
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::StopListeningForAllInputActions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.StopListeningForAllInputActions");
        
        UUserWidget_StopListeningForAllInputActions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE200
     *         Name   -> Function /Script/UMG.UserWidget.StopAnimationsAndLatentActions
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::StopAnimationsAndLatentActions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.StopAnimationsAndLatentActions");
        
        UUserWidget_StopAnimationsAndLatentActions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE180
     *         Name   -> Function /Script/UMG.UserWidget.StopAnimation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::StopAnimation(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.StopAnimation");
        
        UUserWidget_StopAnimation_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE160
     *         Name   -> Function /Script/UMG.UserWidget.StopAllAnimations
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::StopAllAnimations()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.StopAllAnimations");
        
        UUserWidget_StopAllAnimations_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDA40
     *         Name   -> Function /Script/UMG.UserWidget.SetPositionInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRemoveDPIScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetPositionInViewport(const CoreUObject::FVector2D& Position, bool bRemoveDPIScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetPositionInViewport");
        
        UUserWidget_SetPositionInViewport_Params params {};
        params.Position = Position;
        params.bRemoveDPIScale = bRemoveDPIScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD970
     *         Name   -> Function /Script/UMG.UserWidget.SetPlaybackSpeed
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PlaybackSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetPlaybackSpeed(UMG::UWidgetAnimation* InAnimation, float PlaybackSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetPlaybackSpeed");
        
        UUserWidget_SetPlaybackSpeed_Params params {};
        params.InAnimation = InAnimation;
        params.PlaybackSpeed = PlaybackSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD8E0
     *         Name   -> Function /Script/UMG.UserWidget.SetPadding
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetPadding");
        
        UUserWidget_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD860
     *         Name   -> Function /Script/UMG.UserWidget.SetOwningPlayer
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         LocalPlayerController                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetOwningPlayer(Engine::APlayerController* LocalPlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetOwningPlayer");
        
        UUserWidget_SetOwningPlayer_Params params {};
        params.LocalPlayerController = LocalPlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD6A0
     *         Name   -> Function /Script/UMG.UserWidget.SetNumLoopsToPlay
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetNumLoopsToPlay(UMG::UWidgetAnimation* InAnimation, int32_t NumLoopsToPlay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetNumLoopsToPlay");
        
        UUserWidget_SetNumLoopsToPlay_Params params {};
        params.InAnimation = InAnimation;
        params.NumLoopsToPlay = NumLoopsToPlay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD0C0
     *         Name   -> Function /Script/UMG.UserWidget.SetInputActionPriority
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         int32_t                                            NewPriority                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetInputActionPriority(int32_t NewPriority)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetInputActionPriority");
        
        UUserWidget_SetInputActionPriority_Params params {};
        params.NewPriority = NewPriority;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD030
     *         Name   -> Function /Script/UMG.UserWidget.SetInputActionBlocking
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         bool                                               bShouldBlock                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetInputActionBlocking(bool bShouldBlock)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetInputActionBlocking");
        
        UUserWidget_SetInputActionBlocking_Params params {};
        params.bShouldBlock = bShouldBlock;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCE20
     *         Name   -> Function /Script/UMG.UserWidget.SetForegroundColor
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             InForegroundColor                                          (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetForegroundColor(const SlateCore::FSlateColor& InForegroundColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetForegroundColor");
        
        UUserWidget_SetForegroundColor_Params params {};
        params.InForegroundColor = InForegroundColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCA80
     *         Name   -> Function /Script/UMG.UserWidget.SetDesiredSizeInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetDesiredSizeInViewport(const CoreUObject::FVector2D& Size)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetDesiredSizeInViewport");
        
        UUserWidget_SetDesiredSizeInViewport_Params params {};
        params.Size = Size;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC980
     *         Name   -> Function /Script/UMG.UserWidget.SetColorAndOpacity
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InColorAndOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetColorAndOpacity(const CoreUObject::FLinearColor& InColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetColorAndOpacity");
        
        UUserWidget_SetColorAndOpacity_Params params {};
        params.InColorAndOpacity = InColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC5B0
     *         Name   -> Function /Script/UMG.UserWidget.SetAnchorsInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::FAnchors                                    Anchors                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetAnchorsInViewport(const Slate::FAnchors& Anchors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetAnchorsInViewport");
        
        UUserWidget_SetAnchorsInViewport_Params params {};
        params.Anchors = Anchors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC530
     *         Name   -> Function /Script/UMG.UserWidget.SetAlignmentInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Alignment                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::SetAlignmentInViewport(const CoreUObject::FVector2D& Alignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.SetAlignmentInViewport");
        
        UUserWidget_SetAlignmentInViewport_Params params {};
        params.Alignment = Alignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC4B0
     *         Name   -> Function /Script/UMG.UserWidget.ReverseAnimation
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::ReverseAnimation(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.ReverseAnimation");
        
        UUserWidget_ReverseAnimation_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC490
     *         Name   -> Function /Script/UMG.UserWidget.RemoveFromViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::RemoveFromViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.RemoveFromViewport");
        
        UUserWidget_RemoveFromViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC470
     *         Name   -> Function /Script/UMG.UserWidget.RegisterInputComponent
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::RegisterInputComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.RegisterInputComponent");
        
        UUserWidget_RegisterInputComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.PreConstruct
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         bool                                               IsDesignTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::PreConstruct(bool IsDesignTime)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.PreConstruct");
        
        UUserWidget_PreConstruct_Params params {};
        params.IsDesignTime = IsDesignTime;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC3F0
     *         Name   -> Function /Script/UMG.UserWidget.PlaySound
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USoundBase*                                SoundToPlay                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::PlaySound(Engine::USoundBase* SoundToPlay)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.PlaySound");
        
        UUserWidget_PlaySound_Params params {};
        params.SoundToPlay = SoundToPlay;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC240
     *         Name   -> Function /Script/UMG.UserWidget.PlayAnimationTo
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              EndAtTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::EUMGSequencePlayMode                          PlayMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PlaybackSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::PlayAnimationTo(UMG::UWidgetAnimation* InAnimation, float StartAtTime, float EndAtTime, int32_t NumLoopsToPlay, UMG::EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.PlayAnimationTo");
        
        UUserWidget_PlayAnimationTo_Params params {};
        params.InAnimation = InAnimation;
        params.StartAtTime = StartAtTime;
        params.EndAtTime = EndAtTime;
        params.NumLoopsToPlay = NumLoopsToPlay;
        params.PlayMode = PlayMode;
        params.PlaybackSpeed = PlaybackSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC0B0
     *         Name   -> Function /Script/UMG.UserWidget.PlayAnimation
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::EUMGSequencePlayMode                          PlayMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              PlaybackSpeed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::PlayAnimation(UMG::UWidgetAnimation* InAnimation, float StartAtTime, int32_t NumLoopsToPlay, UMG::EUMGSequencePlayMode PlayMode, float PlaybackSpeed)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.PlayAnimation");
        
        UUserWidget_PlayAnimation_Params params {};
        params.InAnimation = InAnimation;
        params.StartAtTime = StartAtTime;
        params.NumLoopsToPlay = NumLoopsToPlay;
        params.PlayMode = PlayMode;
        params.PlaybackSpeed = PlaybackSpeed;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC010
     *         Name   -> Function /Script/UMG.UserWidget.PauseAnimation
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UUserWidget::PauseAnimation(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.PauseAnimation");
        
        UUserWidget_PauseAnimation_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnTouchStarted
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           InTouchEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnTouchStarted(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& InTouchEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnTouchStarted");
        
        UUserWidget_OnTouchStarted_Params params {};
        params.MyGeometry = MyGeometry;
        params.InTouchEvent = InTouchEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnTouchMoved
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           InTouchEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnTouchMoved(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& InTouchEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnTouchMoved");
        
        UUserWidget_OnTouchMoved_Params params {};
        params.MyGeometry = MyGeometry;
        params.InTouchEvent = InTouchEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnTouchGesture
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           GestureEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnTouchGesture(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& GestureEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnTouchGesture");
        
        UUserWidget_OnTouchGesture_Params params {};
        params.MyGeometry = MyGeometry;
        params.GestureEvent = GestureEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnTouchForceChanged
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           InTouchEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnTouchForceChanged(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& InTouchEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnTouchForceChanged");
        
        UUserWidget_OnTouchForceChanged_Params params {};
        params.MyGeometry = MyGeometry;
        params.InTouchEvent = InTouchEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnTouchEnded
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           InTouchEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnTouchEnded(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& InTouchEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnTouchEnded");
        
        UUserWidget_OnTouchEnded_Params params {};
        params.MyGeometry = MyGeometry;
        params.InTouchEvent = InTouchEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnRemovedFromFocusPath
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FFocusEvent                             InFocusEvent                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnRemovedFromFocusPath(const SlateCore::FFocusEvent& InFocusEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnRemovedFromFocusPath");
        
        UUserWidget_OnRemovedFromFocusPath_Params params {};
        params.InFocusEvent = InFocusEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnPreviewMouseButtonDown
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnPreviewMouseButtonDown(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnPreviewMouseButtonDown");
        
        UUserWidget_OnPreviewMouseButtonDown_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnPreviewKeyDown
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FKeyEvent                               InKeyEvent                                                 (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnPreviewKeyDown(const SlateCore::FGeometry& MyGeometry, const SlateCore::FKeyEvent& InKeyEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnPreviewKeyDown");
        
        UUserWidget_OnPreviewKeyDown_Params params {};
        params.MyGeometry = MyGeometry;
        params.InKeyEvent = InKeyEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnPaint
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent, Const)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnPaint(UMG::FPaintContext* Context)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnPaint");
        
        UUserWidget_OnPaint_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseWheel
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMouseWheel(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseWheel");
        
        UUserWidget_OnMouseWheel_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseMove
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMouseMove(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseMove");
        
        UUserWidget_OnMouseMove_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseLeave
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnMouseLeave(const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseLeave");
        
        UUserWidget_OnMouseLeave_Params params {};
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseEnter
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnMouseEnter(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseEnter");
        
        UUserWidget_OnMouseEnter_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseCaptureLost
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::OnMouseCaptureLost()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseCaptureLost");
        
        UUserWidget_OnMouseCaptureLost_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseButtonUp
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMouseButtonUp(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseButtonUp");
        
        UUserWidget_OnMouseButtonUp_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseButtonDown
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           MouseEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMouseButtonDown(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& MouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseButtonDown");
        
        UUserWidget_OnMouseButtonDown_Params params {};
        params.MyGeometry = MyGeometry;
        params.MouseEvent = MouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMouseButtonDoubleClick
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               InMyGeometry                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           InMouseEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMouseButtonDoubleClick(const SlateCore::FGeometry& InMyGeometry, const SlateCore::FPointerEvent& InMouseEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMouseButtonDoubleClick");
        
        UUserWidget_OnMouseButtonDoubleClick_Params params {};
        params.InMyGeometry = InMyGeometry;
        params.InMouseEvent = InMouseEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnMotionDetected
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FMotionEvent                            InMotionEvent                                              (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnMotionDetected(const SlateCore::FGeometry& MyGeometry, const SlateCore::FMotionEvent& InMotionEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnMotionDetected");
        
        UUserWidget_OnMotionDetected_Params params {};
        params.MyGeometry = MyGeometry;
        params.InMotionEvent = InMotionEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnKeyUp
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FKeyEvent                               InKeyEvent                                                 (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnKeyUp(const SlateCore::FGeometry& MyGeometry, const SlateCore::FKeyEvent& InKeyEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnKeyUp");
        
        UUserWidget_OnKeyUp_Params params {};
        params.MyGeometry = MyGeometry;
        params.InKeyEvent = InKeyEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnKeyDown
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FKeyEvent                               InKeyEvent                                                 (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnKeyDown(const SlateCore::FGeometry& MyGeometry, const SlateCore::FKeyEvent& InKeyEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnKeyDown");
        
        UUserWidget_OnKeyDown_Params params {};
        params.MyGeometry = MyGeometry;
        params.InKeyEvent = InKeyEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnKeyChar
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FCharacterEvent                         InCharacterEvent                                           (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnKeyChar(const SlateCore::FGeometry& MyGeometry, const SlateCore::FCharacterEvent& InCharacterEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnKeyChar");
        
        UUserWidget_OnKeyChar_Params params {};
        params.MyGeometry = MyGeometry;
        params.InCharacterEvent = InCharacterEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnInitialized
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::OnInitialized()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnInitialized");
        
        UUserWidget_OnInitialized_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnFocusReceived
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FFocusEvent                             InFocusEvent                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnFocusReceived(const SlateCore::FGeometry& MyGeometry, const SlateCore::FFocusEvent& InFocusEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnFocusReceived");
        
        UUserWidget_OnFocusReceived_Params params {};
        params.MyGeometry = MyGeometry;
        params.InFocusEvent = InFocusEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnFocusLost
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FFocusEvent                             InFocusEvent                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnFocusLost(const SlateCore::FFocusEvent& InFocusEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnFocusLost");
        
        UUserWidget_OnFocusLost_Params params {};
        params.InFocusEvent = InFocusEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDrop
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           PointerEvent                                               (Parm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::OnDrop(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation* Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDrop");
        
        UUserWidget_OnDrop_Params params {};
        params.MyGeometry = MyGeometry;
        params.PointerEvent = PointerEvent;
        params.Operation = Operation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDragOver
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           PointerEvent                                               (Parm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::OnDragOver(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation* Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDragOver");
        
        UUserWidget_OnDragOver_Params params {};
        params.MyGeometry = MyGeometry;
        params.PointerEvent = PointerEvent;
        params.Operation = Operation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDragLeave
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (Parm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnDragLeave(const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation* Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDragLeave");
        
        UUserWidget_OnDragLeave_Params params {};
        params.PointerEvent = PointerEvent;
        params.Operation = Operation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDragEnter
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           PointerEvent                                               (Parm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnDragEnter(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation* Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDragEnter");
        
        UUserWidget_OnDragEnter_Params params {};
        params.MyGeometry = MyGeometry;
        params.PointerEvent = PointerEvent;
        params.Operation = Operation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDragDetected
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnDragDetected(const SlateCore::FGeometry& MyGeometry, const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation** Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDragDetected");
        
        UUserWidget_OnDragDetected_Params params {};
        params.MyGeometry = MyGeometry;
        params.PointerEvent = PointerEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Operation != nullptr)
            *Operation = params.Operation;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnDragCancelled
     *         Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           Operation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnDragCancelled(const SlateCore::FPointerEvent& PointerEvent, UMG::UDragDropOperation* Operation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnDragCancelled");
        
        UUserWidget_OnDragCancelled_Params params {};
        params.PointerEvent = PointerEvent;
        params.Operation = Operation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBF80
     *         Name   -> Function /Script/UMG.UserWidget.OnAnimationStarted
     *         Flags  -> (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         UMG::UWidgetAnimation*                             Animation                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnAnimationStarted(UMG::UWidgetAnimation* Animation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnAnimationStarted");
        
        UUserWidget_OnAnimationStarted_Params params {};
        params.Animation = Animation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBEF0
     *         Name   -> Function /Script/UMG.UserWidget.OnAnimationFinished
     *         Flags  -> (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
     * Parameters:
     *         UMG::UWidgetAnimation*                             Animation                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnAnimationFinished(UMG::UWidgetAnimation* Animation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnAnimationFinished");
        
        UUserWidget_OnAnimationFinished_Params params {};
        params.Animation = Animation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnAnalogValueChanged
     *         Flags  -> (Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FGeometry                               MyGeometry                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         SlateCore::FAnalogInputEvent                       InAnalogInputEvent                                         (Parm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UUserWidget::OnAnalogValueChanged(const SlateCore::FGeometry& MyGeometry, const SlateCore::FAnalogInputEvent& InAnalogInputEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnAnalogValueChanged");
        
        UUserWidget_OnAnalogValueChanged_Params params {};
        params.MyGeometry = MyGeometry;
        params.InAnalogInputEvent = InAnalogInputEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.OnAddedToFocusPath
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         SlateCore::FFocusEvent                             InFocusEvent                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::OnAddedToFocusPath(const SlateCore::FFocusEvent& InFocusEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.OnAddedToFocusPath");
        
        UUserWidget_OnAddedToFocusPath_Params params {};
        params.InFocusEvent = InFocusEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBD80
     *         Name   -> Function /Script/UMG.UserWidget.ListenForInputAction
     *         Flags  -> (Final, Native, Protected, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EInputEvent                                EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bConsume                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::UScriptDelegate                        Callback                                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::ListenForInputAction(const BasicTypes::FName& ActionName, Engine::EInputEvent EventType, bool bConsume, const BasicTypes::UScriptDelegate& Callback)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.ListenForInputAction");
        
        UUserWidget_ListenForInputAction_Params params {};
        params.ActionName = ActionName;
        params.EventType = EventType;
        params.bConsume = bConsume;
        params.Callback = Callback;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBD50
     *         Name   -> Function /Script/UMG.UserWidget.IsPlayingAnimation
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsPlayingAnimation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsPlayingAnimation");
        
        UUserWidget_IsPlayingAnimation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBCC0
     *         Name   -> Function /Script/UMG.UserWidget.IsListeningForInputAction
     *         Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FName                                  ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsListeningForInputAction(const BasicTypes::FName& ActionName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsListeningForInputAction");
        
        UUserWidget_IsListeningForInputAction_Params params {};
        params.ActionName = ActionName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB850
     *         Name   -> Function /Script/UMG.UserWidget.IsInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsInViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsInViewport");
        
        UUserWidget_IsInViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.IsInteractable
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsInteractable()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsInteractable");
        
        UUserWidget_IsInteractable_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBC90
     *         Name   -> Function /Script/UMG.UserWidget.IsAnyAnimationPlaying
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsAnyAnimationPlaying()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsAnyAnimationPlaying");
        
        UUserWidget_IsAnyAnimationPlaying_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBC00
     *         Name   -> Function /Script/UMG.UserWidget.IsAnimationPlayingForward
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsAnimationPlayingForward(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsAnimationPlayingForward");
        
        UUserWidget_IsAnimationPlayingForward_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBB70
     *         Name   -> Function /Script/UMG.UserWidget.IsAnimationPlaying
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::IsAnimationPlaying(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.IsAnimationPlaying");
        
        UUserWidget_IsAnimationPlaying_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB940
     *         Name   -> Function /Script/UMG.UserWidget.GetOwningPlayerPawn
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::APawn*                                     ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::APawn* UUserWidget::GetOwningPlayerPawn()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.GetOwningPlayerPawn");
        
        UUserWidget_GetOwningPlayerPawn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB850
     *         Name   -> Function /Script/UMG.UserWidget.GetIsVisible
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::GetIsVisible()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.GetIsVisible");
        
        UUserWidget_GetIsVisible_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB750
     *         Name   -> Function /Script/UMG.UserWidget.GetAnimationCurrentTime
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidgetAnimation*                             InAnimation                                                (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UUserWidget::GetAnimationCurrentTime(UMG::UWidgetAnimation* InAnimation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.GetAnimationCurrentTime");
        
        UUserWidget_GetAnimationCurrentTime_Params params {};
        params.InAnimation = InAnimation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB710
     *         Name   -> Function /Script/UMG.UserWidget.GetAnchorsInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Slate::FAnchors                                    ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Slate::FAnchors UUserWidget::GetAnchorsInViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.GetAnchorsInViewport");
        
        UUserWidget_GetAnchorsInViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB6D0
     *         Name   -> Function /Script/UMG.UserWidget.GetAlignmentInViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UUserWidget::GetAlignmentInViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.GetAlignmentInViewport");
        
        UUserWidget_GetAlignmentInViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.Destruct
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::Destruct()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.Destruct");
        
        UUserWidget_Destruct_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserWidget.Construct
     *         Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::Construct()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.Construct");
        
        UUserWidget_Construct_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB5F0
     *         Name   -> Function /Script/UMG.UserWidget.CancelLatentActions
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UUserWidget::CancelLatentActions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.CancelLatentActions");
        
        UUserWidget_CancelLatentActions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB570
     *         Name   -> Function /Script/UMG.UserWidget.AddToViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ZOrder                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUserWidget::AddToViewport(int32_t ZOrder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.AddToViewport");
        
        UUserWidget_AddToViewport_Params params {};
        params.ZOrder = ZOrder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB4E0
     *         Name   -> Function /Script/UMG.UserWidget.AddToPlayerScreen
     *         Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ZOrder                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UUserWidget::AddToPlayerScreen(int32_t ZOrder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserWidget.AddToPlayerScreen");
        
        UUserWidget_AddToPlayerScreen_Params params {};
        params.ZOrder = ZOrder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE48E0
     *         Name   -> Function /Script/UMG.AsyncTaskDownloadImage.DownloadImage
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UAsyncTaskDownloadImage*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UAsyncTaskDownloadImage* UAsyncTaskDownloadImage::STATIC_DownloadImage(const BasicTypes::FString& URL)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.AsyncTaskDownloadImage.DownloadImage");
        
        UAsyncTaskDownloadImage_DownloadImage_Params params {};
        params.URL = URL;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3BE0
     *         Name   -> Function /Script/UMG.PanelWidget.RemoveChildAt
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPanelWidget::RemoveChildAt(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.RemoveChildAt");
        
        UPanelWidget_RemoveChildAt_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3B50
     *         Name   -> Function /Script/UMG.PanelWidget.RemoveChild
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPanelWidget::RemoveChild(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.RemoveChild");
        
        UPanelWidget_RemoveChild_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF36E0
     *         Name   -> Function /Script/UMG.PanelWidget.HasChild
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPanelWidget::HasChild(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.HasChild");
        
        UPanelWidget_HasChild_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF36B0
     *         Name   -> Function /Script/UMG.PanelWidget.HasAnyChildren
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UPanelWidget::HasAnyChildren()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.HasAnyChildren");
        
        UPanelWidget_HasAnyChildren_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF34A0
     *         Name   -> Function /Script/UMG.PanelWidget.GetChildrenCount
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UPanelWidget::GetChildrenCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.GetChildrenCount");
        
        UPanelWidget_GetChildrenCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3410
     *         Name   -> Function /Script/UMG.PanelWidget.GetChildIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UPanelWidget::GetChildIndex(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.GetChildIndex");
        
        UPanelWidget_GetChildIndex_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3380
     *         Name   -> Function /Script/UMG.PanelWidget.GetChildAt
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UPanelWidget::GetChildAt(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.GetChildAt");
        
        UPanelWidget_GetChildAt_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2EF0
     *         Name   -> Function /Script/UMG.PanelWidget.ClearChildren
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UPanelWidget::ClearChildren()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.ClearChildren");
        
        UPanelWidget_ClearChildren_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2DD0
     *         Name   -> Function /Script/UMG.PanelWidget.AddChild
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UPanelSlot*                                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UPanelSlot* UPanelWidget::AddChild(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.PanelWidget.AddChild");
        
        UPanelWidget_AddChild_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA790
     *         Name   -> Function /Script/UMG.ContentWidget.SetContent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UPanelSlot*                                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UPanelSlot* UContentWidget::SetContent(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ContentWidget.SetContent");
        
        UContentWidget_SetContent_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE98A0
     *         Name   -> Function /Script/UMG.ContentWidget.GetContentSlot
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UPanelSlot*                                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UPanelSlot* UContentWidget::GetContentSlot()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ContentWidget.GetContentSlot");
        
        UContentWidget_GetContentSlot_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9870
     *         Name   -> Function /Script/UMG.ContentWidget.GetContent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UContentWidget::GetContent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ContentWidget.GetContent");
        
        UContentWidget_GetContent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6A80
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetVerticalAlignment");
        
        UBackgroundBlur_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE62F0
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetPadding");
        
        UBackgroundBlur_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5F50
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetLowQualityFallbackBrush
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateBrush                             InBrush                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetLowQualityFallbackBrush(const SlateCore::FSlateBrush& InBrush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetLowQualityFallbackBrush");
        
        UBackgroundBlur_SetLowQualityFallbackBrush_Params params {};
        params.InBrush = InBrush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5BA0
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetHorizontalAlignment");
        
        UBackgroundBlur_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5590
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetBlurStrength
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InStrength                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetBlurStrength(float InStrength)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetBlurStrength");
        
        UBackgroundBlur_SetBlurStrength_Params params {};
        params.InStrength = InStrength;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5510
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetBlurRadius
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InBlurRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetBlurRadius(int32_t InBlurRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetBlurRadius");
        
        UBackgroundBlur_SetBlurRadius_Params params {};
        params.InBlurRadius = InBlurRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5370
     *         Name   -> Function /Script/UMG.BackgroundBlur.SetApplyAlphaToBlur
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInApplyAlphaToBlur                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlur::SetApplyAlphaToBlur(bool bInApplyAlphaToBlur)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlur.SetApplyAlphaToBlur");
        
        UBackgroundBlur_SetApplyAlphaToBlur_Params params {};
        params.bInApplyAlphaToBlur = bInApplyAlphaToBlur;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6B00
     *         Name   -> Function /Script/UMG.BackgroundBlurSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlurSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlurSlot.SetVerticalAlignment");
        
        UBackgroundBlurSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6380
     *         Name   -> Function /Script/UMG.BackgroundBlurSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlurSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlurSlot.SetPadding");
        
        UBackgroundBlurSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5C20
     *         Name   -> Function /Script/UMG.BackgroundBlurSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBackgroundBlurSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BackgroundBlurSlot.SetHorizontalAlignment");
        
        UBackgroundBlurSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4EC0
     *         Name   -> Function /Script/UMG.BoolBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UBoolBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BoolBinding.GetValue");
        
        UBoolBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6B80
     *         Name   -> Function /Script/UMG.Border.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetVerticalAlignment");
        
        UBorder_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6410
     *         Name   -> Function /Script/UMG.Border.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetPadding");
        
        UBorder_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5CA0
     *         Name   -> Function /Script/UMG.Border.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetHorizontalAlignment");
        
        UBorder_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5B20
     *         Name   -> Function /Script/UMG.Border.SetDesiredSizeScale
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InScale                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetDesiredSizeScale(const CoreUObject::FVector2D& InScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetDesiredSizeScale");
        
        UBorder_SetDesiredSizeScale_Params params {};
        params.InScale = InScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5AA0
     *         Name   -> Function /Script/UMG.Border.SetContentColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InContentColorAndOpacity                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetContentColorAndOpacity(const CoreUObject::FLinearColor& InContentColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetContentColorAndOpacity");
        
        UBorder_SetContentColorAndOpacity_Params params {};
        params.InContentColorAndOpacity = InContentColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE58A0
     *         Name   -> Function /Script/UMG.Border.SetBrushFromTexture
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture2D*                                Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetBrushFromTexture(Engine::UTexture2D* Texture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetBrushFromTexture");
        
        UBorder_SetBrushFromTexture_Params params {};
        params.Texture = Texture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE58A0
     *         Name   -> Function /Script/UMG.Border.SetBrushFromMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInterface*                        Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetBrushFromMaterial(Engine::UMaterialInterface* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetBrushFromMaterial");
        
        UBorder_SetBrushFromMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5820
     *         Name   -> Function /Script/UMG.Border.SetBrushFromAsset
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USlateBrushAsset*                          Asset                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetBrushFromAsset(Engine::USlateBrushAsset* Asset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetBrushFromAsset");
        
        UBorder_SetBrushFromAsset_Params params {};
        params.Asset = Asset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE57A0
     *         Name   -> Function /Script/UMG.Border.SetBrushColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InBrushColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetBrushColor(const CoreUObject::FLinearColor& InBrushColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetBrushColor");
        
        UBorder_SetBrushColor_Params params {};
        params.InBrushColor = InBrushColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5610
     *         Name   -> Function /Script/UMG.Border.SetBrush
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateBrush                             InBrush                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorder::SetBrush(const SlateCore::FSlateBrush& InBrush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.SetBrush");
        
        UBorder_SetBrush_Params params {};
        params.InBrush = InBrush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4B50
     *         Name   -> Function /Script/UMG.Border.GetDynamicMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UBorder::GetDynamicMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Border.GetDynamicMaterial");
        
        UBorder_GetDynamicMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6C00
     *         Name   -> Function /Script/UMG.BorderSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorderSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BorderSlot.SetVerticalAlignment");
        
        UBorderSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE64A0
     *         Name   -> Function /Script/UMG.BorderSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorderSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BorderSlot.SetPadding");
        
        UBorderSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5D20
     *         Name   -> Function /Script/UMG.BorderSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UBorderSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BorderSlot.SetHorizontalAlignment");
        
        UBorderSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4EF0
     *         Name   -> Function /Script/UMG.BrushBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UBrushBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.BrushBinding.GetValue");
        
        UBrushBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6A00
     *         Name   -> Function /Script/UMG.Button.SetTouchMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EButtonTouchMethod                      InTouchMethod                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetTouchMethod(SlateCore::EButtonTouchMethod InTouchMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetTouchMethod");
        
        UButton_SetTouchMethod_Params params {};
        params.InTouchMethod = InTouchMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6920
     *         Name   -> Function /Script/UMG.Button.SetStyle
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FButtonStyle                            InStyle                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetStyle(const SlateCore::FButtonStyle& InStyle)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetStyle");
        
        UButton_SetStyle_Params params {};
        params.InStyle = InStyle;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE66C0
     *         Name   -> Function /Script/UMG.Button.SetPressMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EButtonPressMethod                      InPressMethod                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetPressMethod(SlateCore::EButtonPressMethod InPressMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetPressMethod");
        
        UButton_SetPressMethod_Params params {};
        params.InPressMethod = InPressMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5A20
     *         Name   -> Function /Script/UMG.Button.SetColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InColorAndOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetColorAndOpacity(const CoreUObject::FLinearColor& InColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetColorAndOpacity");
        
        UButton_SetColorAndOpacity_Params params {};
        params.InColorAndOpacity = InColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE59A0
     *         Name   -> Function /Script/UMG.Button.SetClickMethod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EButtonClickMethod                      InClickMethod                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetClickMethod(SlateCore::EButtonClickMethod InClickMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetClickMethod");
        
        UButton_SetClickMethod_Params params {};
        params.InClickMethod = InClickMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5490
     *         Name   -> Function /Script/UMG.Button.SetBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InBackgroundColor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButton::SetBackgroundColor(const CoreUObject::FLinearColor& InBackgroundColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.SetBackgroundColor");
        
        UButton_SetBackgroundColor_Params params {};
        params.InBackgroundColor = InBackgroundColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5130
     *         Name   -> Function /Script/UMG.Button.IsPressed
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UButton::IsPressed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Button.IsPressed");
        
        UButton_IsPressed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6C80
     *         Name   -> Function /Script/UMG.ButtonSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButtonSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ButtonSlot.SetVerticalAlignment");
        
        UButtonSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6530
     *         Name   -> Function /Script/UMG.ButtonSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButtonSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ButtonSlot.SetPadding");
        
        UButtonSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5DA0
     *         Name   -> Function /Script/UMG.ButtonSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UButtonSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ButtonSlot.SetHorizontalAlignment");
        
        UButtonSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4770
     *         Name   -> Function /Script/UMG.CanvasPanel.AddChildToCanvas
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UCanvasPanelSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UCanvasPanelSlot* UCanvasPanel::AddChildToCanvas(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanel.AddChildToCanvas");
        
        UCanvasPanel_AddChildToCanvas_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6D00
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetZOrder
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InZOrder                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetZOrder(int32_t InZOrder)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetZOrder");
        
        UCanvasPanelSlot_SetZOrder_Params params {};
        params.InZOrder = InZOrder;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE68A0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InSize                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetSize(const CoreUObject::FVector2D& InSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetSize");
        
        UCanvasPanelSlot_SetSize_Params params {};
        params.InSize = InSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6640
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetPosition
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InPosition                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetPosition(const CoreUObject::FVector2D& InPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetPosition");
        
        UCanvasPanelSlot_SetPosition_Params params {};
        params.InPosition = InPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6260
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetOffsets
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InOffset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetOffsets(const SlateCore::FMargin& InOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetOffsets");
        
        UCanvasPanelSlot_SetOffsets_Params params {};
        params.InOffset = InOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6160
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetMinimum
     *         Flags  -> (Final, Native, Public, HasDefaults)
     * Parameters:
     *         CoreUObject::FVector2D                             InMinimumAnchors                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetMinimum(const CoreUObject::FVector2D& InMinimumAnchors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetMinimum");
        
        UCanvasPanelSlot_SetMinimum_Params params {};
        params.InMinimumAnchors = InMinimumAnchors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE60E0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetMaximum
     *         Flags  -> (Final, Native, Public, HasDefaults)
     * Parameters:
     *         CoreUObject::FVector2D                             InMaximumAnchors                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetMaximum(const CoreUObject::FVector2D& InMaximumAnchors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetMaximum");
        
        UCanvasPanelSlot_SetMaximum_Params params {};
        params.InMaximumAnchors = InMaximumAnchors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5EB0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetLayout
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         UMG::FAnchorData                                   InLayoutData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetLayout(const UMG::FAnchorData& InLayoutData)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetLayout");
        
        UCanvasPanelSlot_SetLayout_Params params {};
        params.InLayoutData = InLayoutData;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5400
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetAutoSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InbAutoSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetAutoSize(bool InbAutoSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetAutoSize");
        
        UCanvasPanelSlot_SetAutoSize_Params params {};
        params.InbAutoSize = InbAutoSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE52E0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetAnchors
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::FAnchors                                    InAnchors                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetAnchors(const Slate::FAnchors& InAnchors)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetAnchors");
        
        UCanvasPanelSlot_SetAnchors_Params params {};
        params.InAnchors = InAnchors;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5260
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.SetAlignment
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InAlignment                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCanvasPanelSlot::SetAlignment(const CoreUObject::FVector2D& InAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.SetAlignment");
        
        UCanvasPanelSlot_SetAlignment_Params params {};
        params.InAlignment = InAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE50D0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetZOrder
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UCanvasPanelSlot::GetZOrder()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetZOrder");
        
        UCanvasPanelSlot_GetZOrder_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4E10
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UCanvasPanelSlot::GetSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetSize");
        
        UCanvasPanelSlot_GetSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4D50
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetPosition
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UCanvasPanelSlot::GetPosition()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetPosition");
        
        UCanvasPanelSlot_GetPosition_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4C10
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetOffsets
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SlateCore::FMargin                                 ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    SlateCore::FMargin UCanvasPanelSlot::GetOffsets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetOffsets");
        
        UCanvasPanelSlot_GetOffsets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4B80
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetLayout
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::FAnchorData                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    UMG::FAnchorData UCanvasPanelSlot::GetLayout()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetLayout");
        
        UCanvasPanelSlot_GetLayout_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4AF0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetAutoSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCanvasPanelSlot::GetAutoSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetAutoSize");
        
        UCanvasPanelSlot_GetAutoSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4AB0
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetAnchors
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Slate::FAnchors                                    ReturnValue                                                (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
     */
    Slate::FAnchors UCanvasPanelSlot::GetAnchors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetAnchors");
        
        UCanvasPanelSlot_GetAnchors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4A70
     *         Name   -> Function /Script/UMG.CanvasPanelSlot.GetAlignment
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UCanvasPanelSlot::GetAlignment()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CanvasPanelSlot.GetAlignment");
        
        UCanvasPanelSlot_GetAlignment_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5E20
     *         Name   -> Function /Script/UMG.CheckBox.SetIsChecked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InIsChecked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCheckBox::SetIsChecked(bool InIsChecked)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckBox.SetIsChecked");
        
        UCheckBox_SetIsChecked_Params params {};
        params.InIsChecked = InIsChecked;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5920
     *         Name   -> Function /Script/UMG.CheckBox.SetCheckedState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::ECheckBoxState                          InCheckedState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCheckBox::SetCheckedState(SlateCore::ECheckBoxState InCheckedState)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckBox.SetCheckedState");
        
        UCheckBox_SetCheckedState_Params params {};
        params.InCheckedState = InCheckedState;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5160
     *         Name   -> Function /Script/UMG.CheckBox.IsPressed
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCheckBox::IsPressed()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckBox.IsPressed");
        
        UCheckBox_IsPressed_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5100
     *         Name   -> Function /Script/UMG.CheckBox.IsChecked
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UCheckBox::IsChecked()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckBox.IsChecked");
        
        UCheckBox_IsChecked_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4B20
     *         Name   -> Function /Script/UMG.CheckBox.GetCheckedState
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         SlateCore::ECheckBoxState                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SlateCore::ECheckBoxState UCheckBox::GetCheckedState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckBox.GetCheckedState");
        
        UCheckBox_GetCheckedState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE50A0
     *         Name   -> Function /Script/UMG.CheckedStateBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         SlateCore::ECheckBoxState                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    SlateCore::ECheckBoxState UCheckedStateBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CheckedStateBinding.GetValue");
        
        UCheckedStateBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6740
     *         Name   -> Function /Script/UMG.CircularThrobber.SetRadius
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InRadius                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCircularThrobber::SetRadius(float InRadius)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CircularThrobber.SetRadius");
        
        UCircularThrobber_SetRadius_Params params {};
        params.InRadius = InRadius;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE65C0
     *         Name   -> Function /Script/UMG.CircularThrobber.SetPeriod
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPeriod                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCircularThrobber::SetPeriod(float InPeriod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CircularThrobber.SetPeriod");
        
        UCircularThrobber_SetPeriod_Params params {};
        params.InPeriod = InPeriod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE61E0
     *         Name   -> Function /Script/UMG.CircularThrobber.SetNumberOfPieces
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InNumberOfPieces                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UCircularThrobber::SetNumberOfPieces(int32_t InNumberOfPieces)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.CircularThrobber.SetNumberOfPieces");
        
        UCircularThrobber_SetNumberOfPieces_Params params {};
        params.InNumberOfPieces = InNumberOfPieces;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4E50
     *         Name   -> Function /Script/UMG.ColorBinding.GetSlateValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         SlateCore::FSlateColor                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateColor UColorBinding::GetSlateValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ColorBinding.GetSlateValue");
        
        UColorBinding_GetSlateValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4BD0
     *         Name   -> Function /Script/UMG.ColorBinding.GetLinearValue
     *         Flags  -> (Final, Native, Public, HasDefaults, Const)
     * Parameters:
     *         CoreUObject::FLinearColor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FLinearColor UColorBinding::GetLinearValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ColorBinding.GetLinearValue");
        
        UColorBinding_GetLinearValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE67C0
     *         Name   -> Function /Script/UMG.ComboBoxString.SetSelectedOption
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Option                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComboBoxString::SetSelectedOption(const BasicTypes::FString& Option)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.SetSelectedOption");
        
        UComboBoxString_SetSelectedOption_Params params {};
        params.Option = Option;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE51B0
     *         Name   -> Function /Script/UMG.ComboBoxString.RemoveOption
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Option                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UComboBoxString::RemoveOption(const BasicTypes::FString& Option)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.RemoveOption");
        
        UComboBoxString_RemoveOption_Params params {};
        params.Option = Option;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5190
     *         Name   -> Function /Script/UMG.ComboBoxString.RefreshOptions
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComboBoxString::RefreshOptions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.RefreshOptions");
        
        UComboBoxString_RefreshOptions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.ComboBoxString.OnSelectionChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         BasicTypes::FString                                SelectedItem                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::ESelectInfo                             SelectionType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComboBoxString::OnSelectionChangedEvent__DelegateSignature(const BasicTypes::FString& SelectedItem, SlateCore::ESelectInfo SelectionType)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.ComboBoxString.OnSelectionChangedEvent__DelegateSignature");
        
        UComboBoxString_OnSelectionChangedEvent__DelegateSignature_Params params {};
        params.SelectedItem = SelectedItem;
        params.SelectionType = SelectionType;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.ComboBoxString.OnOpeningEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComboBoxString::OnOpeningEvent__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.ComboBoxString.OnOpeningEvent__DelegateSignature");
        
        UComboBoxString_OnOpeningEvent__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4D90
     *         Name   -> Function /Script/UMG.ComboBoxString.GetSelectedOption
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UComboBoxString::GetSelectedOption()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.GetSelectedOption");
        
        UComboBoxString_GetSelectedOption_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4D20
     *         Name   -> Function /Script/UMG.ComboBoxString.GetOptionCount
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UComboBoxString::GetOptionCount()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.GetOptionCount");
        
        UComboBoxString_GetOptionCount_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4C50
     *         Name   -> Function /Script/UMG.ComboBoxString.GetOptionAtIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UComboBoxString::GetOptionAtIndex(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.GetOptionAtIndex");
        
        UComboBoxString_GetOptionAtIndex_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE49C0
     *         Name   -> Function /Script/UMG.ComboBoxString.FindOptionIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FString                                Option                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UComboBoxString::FindOptionIndex(const BasicTypes::FString& Option)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.FindOptionIndex");
        
        UComboBoxString_FindOptionIndex_Params params {};
        params.Option = Option;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE48C0
     *         Name   -> Function /Script/UMG.ComboBoxString.ClearSelection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComboBoxString::ClearSelection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.ClearSelection");
        
        UComboBoxString_ClearSelection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE48A0
     *         Name   -> Function /Script/UMG.ComboBoxString.ClearOptions
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UComboBoxString::ClearOptions()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.ClearOptions");
        
        UComboBoxString_ClearOptions_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE4800
     *         Name   -> Function /Script/UMG.ComboBoxString.AddOption
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Option                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UComboBoxString::AddOption(const BasicTypes::FString& Option)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ComboBoxString.AddOption");
        
        UComboBoxString_AddOption_Params params {};
        params.Option = Option;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE96A0
     *         Name   -> Function /Script/UMG.DragDropOperation.Drop
     *         Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDragDropOperation::Drop(const SlateCore::FPointerEvent& PointerEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DragDropOperation.Drop");
        
        UDragDropOperation_Drop_Params params {};
        params.PointerEvent = PointerEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9560
     *         Name   -> Function /Script/UMG.DragDropOperation.Dragged
     *         Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDragDropOperation::Dragged(const SlateCore::FPointerEvent& PointerEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DragDropOperation.Dragged");
        
        UDragDropOperation_Dragged_Params params {};
        params.PointerEvent = PointerEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9420
     *         Name   -> Function /Script/UMG.DragDropOperation.DragCancelled
     *         Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDragDropOperation::DragCancelled(const SlateCore::FPointerEvent& PointerEvent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DragDropOperation.DragCancelled");
        
        UDragDropOperation_DragCancelled_Params params {};
        params.PointerEvent = PointerEvent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA820
     *         Name   -> Function /Script/UMG.DynamicEntryBox.SetEntrySpacing
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InEntrySpacing                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDynamicEntryBox::SetEntrySpacing(const CoreUObject::FVector2D& InEntrySpacing)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.SetEntrySpacing");
        
        UDynamicEntryBox_SetEntrySpacing_Params params {};
        params.InEntrySpacing = InEntrySpacing;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9B90
     *         Name   -> Function /Script/UMG.DynamicEntryBox.Reset
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bDeleteWidgets                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDynamicEntryBox::Reset(bool bDeleteWidgets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.Reset");
        
        UDynamicEntryBox_Reset_Params params {};
        params.bDeleteWidgets = bDeleteWidgets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9B10
     *         Name   -> Function /Script/UMG.DynamicEntryBox.RemoveEntry
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UUserWidget*                                  EntryWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UDynamicEntryBox::RemoveEntry(UMG::UUserWidget* EntryWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.RemoveEntry");
        
        UDynamicEntryBox_RemoveEntry_Params params {};
        params.EntryWidget = EntryWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9960
     *         Name   -> Function /Script/UMG.DynamicEntryBox.GetNumEntries
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UDynamicEntryBox::GetNumEntries()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.GetNumEntries");
        
        UDynamicEntryBox_GetNumEntries_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE97E0
     *         Name   -> Function /Script/UMG.DynamicEntryBox.GetAllEntries
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<UMG::UUserWidget*>              ReturnValue                                                (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<UMG::UUserWidget*> UDynamicEntryBox::GetAllEntries()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.GetAllEntries");
        
        UDynamicEntryBox_GetAllEntries_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9370
     *         Name   -> Function /Script/UMG.DynamicEntryBox.BP_CreateEntryOfClass
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         UMG::UUserWidget*                                  EntryClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UDynamicEntryBox::BP_CreateEntryOfClass(UMG::UUserWidget* EntryClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.BP_CreateEntryOfClass");
        
        UDynamicEntryBox_BP_CreateEntryOfClass_Params params {};
        params.EntryClass = EntryClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9340
     *         Name   -> Function /Script/UMG.DynamicEntryBox.BP_CreateEntry
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UDynamicEntryBox::BP_CreateEntry()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.DynamicEntryBox.BP_CreateEntry");
        
        UDynamicEntryBox_BP_CreateEntry_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB790
     *         Name   -> Function /Script/UMG.EditableText.SetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableText.SetText");
        
        UEditableText_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAF50
     *         Name   -> Function /Script/UMG.EditableText.SetIsReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InbIsReadyOnly                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::SetIsReadOnly(bool InbIsReadyOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableText.SetIsReadOnly");
        
        UEditableText_SetIsReadOnly_Params params {};
        params.InbIsReadyOnly = InbIsReadyOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAE30
     *         Name   -> Function /Script/UMG.EditableText.SetIsPassword
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InbIsPassword                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::SetIsPassword(bool InbIsPassword)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableText.SetIsPassword");
        
        UEditableText_SetIsPassword_Params params {};
        params.InbIsPassword = InbIsPassword;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAA70
     *         Name   -> Function /Script/UMG.EditableText.SetHintText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InHintText                                                 (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::SetHintText(const BasicTypes::FText& InHintText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableText.SetHintText");
        
        UEditableText_SetHintText_Params params {};
        params.InHintText = InHintText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.EditableText.OnEditableTextCommittedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::ETextCommit                             CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::OnEditableTextCommittedEvent__DelegateSignature(const BasicTypes::FText& Text, SlateCore::ETextCommit CommitMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.EditableText.OnEditableTextCommittedEvent__DelegateSignature");
        
        UEditableText_OnEditableTextCommittedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        params.CommitMethod = CommitMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.EditableText.OnEditableTextChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableText::OnEditableTextChangedEvent__DelegateSignature(const BasicTypes::FText& Text)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.EditableText.OnEditableTextChangedEvent__DelegateSignature");
        
        UEditableText_OnEditableTextChangedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9990
     *         Name   -> Function /Script/UMG.EditableText.GetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UEditableText::GetText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableText.GetText");
        
        UEditableText_GetText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB860
     *         Name   -> Function /Script/UMG.EditableTextBox.SetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.SetText");
        
        UEditableTextBox_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAFE0
     *         Name   -> Function /Script/UMG.EditableTextBox.SetIsReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bReadOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::SetIsReadOnly(bool bReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.SetIsReadOnly");
        
        UEditableTextBox_SetIsReadOnly_Params params {};
        params.bReadOnly = bReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAEC0
     *         Name   -> Function /Script/UMG.EditableTextBox.SetIsPassword
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bIsPassword                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::SetIsPassword(bool bIsPassword)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.SetIsPassword");
        
        UEditableTextBox_SetIsPassword_Params params {};
        params.bIsPassword = bIsPassword;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAB40
     *         Name   -> Function /Script/UMG.EditableTextBox.SetHintText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::SetHintText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.SetHintText");
        
        UEditableTextBox_SetHintText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA8B0
     *         Name   -> Function /Script/UMG.EditableTextBox.SetError
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InError                                                    (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::SetError(const BasicTypes::FText& InError)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.SetError");
        
        UEditableTextBox_SetError_Params params {};
        params.InError = InError;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.EditableTextBox.OnEditableTextBoxCommittedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::ETextCommit                             CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::OnEditableTextBoxCommittedEvent__DelegateSignature(const BasicTypes::FText& Text, SlateCore::ETextCommit CommitMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.EditableTextBox.OnEditableTextBoxCommittedEvent__DelegateSignature");
        
        UEditableTextBox_OnEditableTextBoxCommittedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        params.CommitMethod = CommitMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.EditableTextBox.OnEditableTextBoxChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UEditableTextBox::OnEditableTextBoxChangedEvent__DelegateSignature(const BasicTypes::FText& Text)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.EditableTextBox.OnEditableTextBoxChangedEvent__DelegateSignature");
        
        UEditableTextBox_OnEditableTextBoxChangedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9AE0
     *         Name   -> Function /Script/UMG.EditableTextBox.HasError
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UEditableTextBox::HasError()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.HasError");
        
        UEditableTextBox_HasError_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9A20
     *         Name   -> Function /Script/UMG.EditableTextBox.GetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UEditableTextBox::GetText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.GetText");
        
        UEditableTextBox_GetText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9400
     *         Name   -> Function /Script/UMG.EditableTextBox.ClearError
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UEditableTextBox::ClearError()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.EditableTextBox.ClearError");
        
        UEditableTextBox_ClearError_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEADA0
     *         Name   -> Function /Script/UMG.ExpandableArea.SetIsExpanded_Animated
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               IsExpanded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UExpandableArea::SetIsExpanded_Animated(bool IsExpanded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ExpandableArea.SetIsExpanded_Animated");
        
        UExpandableArea_SetIsExpanded_Animated_Params params {};
        params.IsExpanded = IsExpanded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAD10
     *         Name   -> Function /Script/UMG.ExpandableArea.SetIsExpanded
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               IsExpanded                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UExpandableArea::SetIsExpanded(bool IsExpanded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ExpandableArea.SetIsExpanded");
        
        UExpandableArea_SetIsExpanded_Params params {};
        params.IsExpanded = IsExpanded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9900
     *         Name   -> Function /Script/UMG.ExpandableArea.GetIsExpanded
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UExpandableArea::GetIsExpanded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ExpandableArea.GetIsExpanded");
        
        UExpandableArea_GetIsExpanded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9AB0
     *         Name   -> Function /Script/UMG.FloatBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UFloatBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.FloatBinding.GetValue");
        
        UFloatBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB4B0
     *         Name   -> Function /Script/UMG.GridPanel.SetRowFill
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ColumnIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Coefficient                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridPanel::SetRowFill(int32_t ColumnIndex, float Coefficient)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridPanel.SetRowFill");
        
        UGridPanel_SetRowFill_Params params {};
        params.ColumnIndex = ColumnIndex;
        params.Coefficient = Coefficient;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA640
     *         Name   -> Function /Script/UMG.GridPanel.SetColumnFill
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ColumnIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              Coefficient                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridPanel::SetColumnFill(int32_t ColumnIndex, float Coefficient)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridPanel.SetColumnFill");
        
        UGridPanel_SetColumnFill_Params params {};
        params.ColumnIndex = ColumnIndex;
        params.Coefficient = Coefficient;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9220
     *         Name   -> Function /Script/UMG.GridPanel.AddChildToGrid
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UGridSlot*                                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UGridSlot* UGridPanel::AddChildToGrid(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridPanel.AddChildToGrid");
        
        UGridPanel_AddChildToGrid_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB9B0
     *         Name   -> Function /Script/UMG.GridSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetVerticalAlignment");
        
        UGridSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB580
     *         Name   -> Function /Script/UMG.GridSlot.SetRowSpan
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InRowSpan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetRowSpan(int32_t InRowSpan)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetRowSpan");
        
        UGridSlot_SetRowSpan_Params params {};
        params.InRowSpan = InRowSpan;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB430
     *         Name   -> Function /Script/UMG.GridSlot.SetRow
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InRow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetRow(int32_t InRow)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetRow");
        
        UGridSlot_SetRow_Params params {};
        params.InRow = InRow;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB310
     *         Name   -> Function /Script/UMG.GridSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetPadding");
        
        UGridSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB140
     *         Name   -> Function /Script/UMG.GridSlot.SetLayer
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InLayer                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetLayer(int32_t InLayer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetLayer");
        
        UGridSlot_SetLayer_Params params {};
        params.InLayer = InLayer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAC10
     *         Name   -> Function /Script/UMG.GridSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetHorizontalAlignment");
        
        UGridSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA710
     *         Name   -> Function /Script/UMG.GridSlot.SetColumnSpan
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InColumnSpan                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetColumnSpan(int32_t InColumnSpan)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetColumnSpan");
        
        UGridSlot_SetColumnSpan_Params params {};
        params.InColumnSpan = InColumnSpan;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA5C0
     *         Name   -> Function /Script/UMG.GridSlot.SetColumn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InColumn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UGridSlot::SetColumn(int32_t InColumn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.GridSlot.SetColumn");
        
        UGridSlot_SetColumn_Params params {};
        params.InColumn = InColumn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE92B0
     *         Name   -> Function /Script/UMG.HorizontalBox.AddChildToHorizontalBox
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UHorizontalBoxSlot*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UHorizontalBoxSlot* UHorizontalBox::AddChildToHorizontalBox(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.HorizontalBox.AddChildToHorizontalBox");
        
        UHorizontalBox_AddChildToHorizontalBox_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEBA30
     *         Name   -> Function /Script/UMG.HorizontalBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UHorizontalBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.HorizontalBoxSlot.SetVerticalAlignment");
        
        UHorizontalBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB6F0
     *         Name   -> Function /Script/UMG.HorizontalBoxSlot.SetSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::FSlateChildSize                               InSize                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UHorizontalBoxSlot::SetSize(const UMG::FSlateChildSize& InSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.HorizontalBoxSlot.SetSize");
        
        UHorizontalBoxSlot_SetSize_Params params {};
        params.InSize = InSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB3A0
     *         Name   -> Function /Script/UMG.HorizontalBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UHorizontalBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.HorizontalBoxSlot.SetPadding");
        
        UHorizontalBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAC90
     *         Name   -> Function /Script/UMG.HorizontalBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UHorizontalBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.HorizontalBoxSlot.SetHorizontalAlignment");
        
        UHorizontalBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB290
     *         Name   -> Function /Script/UMG.Image.SetOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InOpacity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetOpacity(float InOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetOpacity");
        
        UImage_SetOpacity_Params params {};
        params.InOpacity = InOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA540
     *         Name   -> Function /Script/UMG.Image.SetColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InColorAndOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetColorAndOpacity(const CoreUObject::FLinearColor& InColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetColorAndOpacity");
        
        UImage_SetColorAndOpacity_Params params {};
        params.InColorAndOpacity = InColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA440
     *         Name   -> Function /Script/UMG.Image.SetBrushTintColor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             TintColor                                                  (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushTintColor(const SlateCore::FSlateColor& TintColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushTintColor");
        
        UImage_SetBrushTintColor_Params params {};
        params.TintColor = TintColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA3C0
     *         Name   -> Function /Script/UMG.Image.SetBrushSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             DesiredSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushSize(const CoreUObject::FVector2D& DesiredSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushSize");
        
        UImage_SetBrushSize_Params params {};
        params.DesiredSize = DesiredSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA2F0
     *         Name   -> Function /Script/UMG.Image.SetBrushFromTextureDynamic
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture2DDynamic*                         Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMatchSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromTextureDynamic(Engine::UTexture2DDynamic* Texture, bool bMatchSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromTextureDynamic");
        
        UImage_SetBrushFromTextureDynamic_Params params {};
        params.Texture = Texture;
        params.bMatchSize = bMatchSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA220
     *         Name   -> Function /Script/UMG.Image.SetBrushFromTexture
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UTexture2D*                                Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMatchSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromTexture(Engine::UTexture2D* Texture, bool bMatchSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromTexture");
        
        UImage_SetBrushFromTexture_Params params {};
        params.Texture = Texture;
        params.bMatchSize = bMatchSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA0E0
     *         Name   -> Function /Script/UMG.Image.SetBrushFromSoftTexture
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TSoftObjectPtr<Engine::UTexture2D>     SoftTexture                                                (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bMatchSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromSoftTexture(BasicTypes::TSoftObjectPtr<Engine::UTexture2D> SoftTexture, bool bMatchSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromSoftTexture");
        
        UImage_SetBrushFromSoftTexture_Params params {};
        params.SoftTexture = SoftTexture;
        params.bMatchSize = bMatchSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA050
     *         Name   -> Function /Script/UMG.Image.SetBrushFromMaterial
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInterface*                        Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromMaterial(Engine::UMaterialInterface* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromMaterial");
        
        UImage_SetBrushFromMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9F60
     *         Name   -> Function /Script/UMG.Image.SetBrushFromAtlasInterface
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TScriptInterface<Engine::ISlateTextureAtlasInterface> AtlasRegion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
     *         bool                                               bMatchSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromAtlasInterface(const BasicTypes::TScriptInterface<Engine::ISlateTextureAtlasInterface>& AtlasRegion, bool bMatchSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromAtlasInterface");
        
        UImage_SetBrushFromAtlasInterface_Params params {};
        params.AtlasRegion = AtlasRegion;
        params.bMatchSize = bMatchSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9ED0
     *         Name   -> Function /Script/UMG.Image.SetBrushFromAsset
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::USlateBrushAsset*                          Asset                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrushFromAsset(Engine::USlateBrushAsset* Asset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrushFromAsset");
        
        UImage_SetBrushFromAsset_Params params {};
        params.Asset = Asset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9D40
     *         Name   -> Function /Script/UMG.Image.SetBrush
     *         Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateBrush                             InBrush                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UImage::SetBrush(const SlateCore::FSlateBrush& InBrush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.SetBrush");
        
        UImage_SetBrush_Params params {};
        params.InBrush = InBrush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE98D0
     *         Name   -> Function /Script/UMG.Image.GetDynamicMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UImage::GetDynamicMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Image.GetDynamicMaterial");
        
        UImage_GetDynamicMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB930
     *         Name   -> Function /Script/UMG.InputKeySelector.SetTextBlockVisibility
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::ESlateVisibility                              InVisibility                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetTextBlockVisibility(UMG::ESlateVisibility InVisibility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetTextBlockVisibility");
        
        UInputKeySelector_SetTextBlockVisibility_Params params {};
        params.InVisibility = InVisibility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB600
     *         Name   -> Function /Script/UMG.InputKeySelector.SetSelectedKey
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Slate::FInputChord                                 InSelectedKey                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetSelectedKey(const Slate::FInputChord& InSelectedKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetSelectedKey");
        
        UInputKeySelector_SetSelectedKey_Params params {};
        params.InSelectedKey = InSelectedKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB1C0
     *         Name   -> Function /Script/UMG.InputKeySelector.SetNoKeySpecifiedText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InNoKeySpecifiedText                                       (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetNoKeySpecifiedText(const BasicTypes::FText& InNoKeySpecifiedText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetNoKeySpecifiedText");
        
        UInputKeySelector_SetNoKeySpecifiedText_Params params {};
        params.InNoKeySpecifiedText = InNoKeySpecifiedText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB070
     *         Name   -> Function /Script/UMG.InputKeySelector.SetKeySelectionText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InKeySelectionText                                         (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetKeySelectionText(const BasicTypes::FText& InKeySelectionText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetKeySelectionText");
        
        UInputKeySelector_SetKeySelectionText_Params params {};
        params.InKeySelectionText = InKeySelectionText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEA980
     *         Name   -> Function /Script/UMG.InputKeySelector.SetEscapeKeys
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<InputCore::FKey>                InKeys                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetEscapeKeys(BasicTypes::TArray<InputCore::FKey> InKeys)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetEscapeKeys");
        
        UInputKeySelector_SetEscapeKeys_Params params {};
        params.InKeys = InKeys;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9CB0
     *         Name   -> Function /Script/UMG.InputKeySelector.SetAllowModifierKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInAllowModifierKeys                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetAllowModifierKeys(bool bInAllowModifierKeys)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetAllowModifierKeys");
        
        UInputKeySelector_SetAllowModifierKeys_Params params {};
        params.bInAllowModifierKeys = bInAllowModifierKeys;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9C20
     *         Name   -> Function /Script/UMG.InputKeySelector.SetAllowGamepadKeys
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInAllowGamepadKeys                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::SetAllowGamepadKeys(bool bInAllowGamepadKeys)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.SetAllowGamepadKeys");
        
        UInputKeySelector_SetAllowGamepadKeys_Params params {};
        params.bInAllowGamepadKeys = bInAllowGamepadKeys;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.InputKeySelector.OnKeySelected__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         Slate::FInputChord                                 SelectedKey                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInputKeySelector::OnKeySelected__DelegateSignature(const Slate::FInputChord& SelectedKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.InputKeySelector.OnKeySelected__DelegateSignature");
        
        UInputKeySelector_OnKeySelected__DelegateSignature_Params params {};
        params.SelectedKey = SelectedKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.InputKeySelector.OnIsSelectingKeyChanged__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UInputKeySelector::OnIsSelectingKeyChanged__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.InputKeySelector.OnIsSelectingKeyChanged__DelegateSignature");
        
        UInputKeySelector_OnIsSelectingKeyChanged__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE9930
     *         Name   -> Function /Script/UMG.InputKeySelector.GetIsSelectingKey
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UInputKeySelector::GetIsSelectingKey()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InputKeySelector.GetIsSelectingKey");
        
        UInputKeySelector_GetIsSelectingKey_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF6D0
     *         Name   -> Function /Script/UMG.Int32Binding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UInt32Binding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Int32Binding.GetValue");
        
        UInt32Binding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFA30
     *         Name   -> Function /Script/UMG.InvalidationBox.SetCanCache
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               CanCache                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UInvalidationBox::SetCanCache(bool CanCache)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InvalidationBox.SetCanCache");
        
        UInvalidationBox_SetCanCache_Params params {};
        params.CanCache = CanCache;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF760
     *         Name   -> Function /Script/UMG.InvalidationBox.InvalidateCache
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UInvalidationBox::InvalidateCache()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InvalidationBox.InvalidateCache");
        
        UInvalidationBox_InvalidateCache_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF300
     *         Name   -> Function /Script/UMG.InvalidationBox.GetCanCache
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UInvalidationBox::GetCanCache()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.InvalidationBox.GetCanCache");
        
        UInvalidationBox_GetCanCache_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF7B0
     *         Name   -> Function /Script/UMG.NativeUserListEntry.IsListItemSelected
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool INativeUserListEntry::IsListItemSelected()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.NativeUserListEntry.IsListItemSelected");
        
        INativeUserListEntry_IsListItemSelected_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF780
     *         Name   -> Function /Script/UMG.NativeUserListEntry.IsListItemExpanded
     *         Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool INativeUserListEntry::IsListItemExpanded()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.NativeUserListEntry.IsListItemExpanded");
        
        INativeUserListEntry_IsListItemExpanded_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserListEntry.BP_OnItemSelectionChanged
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         bool                                               bIsSelected                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IUserListEntry::BP_OnItemSelectionChanged(bool bIsSelected)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserListEntry.BP_OnItemSelectionChanged");
        
        IUserListEntry_BP_OnItemSelectionChanged_Params params {};
        params.bIsSelected = bIsSelected;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserListEntry.BP_OnItemExpansionChanged
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         bool                                               bIsExpanded                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IUserListEntry::BP_OnItemExpansionChanged(bool bIsExpanded)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserListEntry.BP_OnItemExpansionChanged");
        
        IUserListEntry_BP_OnItemExpansionChanged_Params params {};
        params.bIsExpanded = bIsExpanded;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserListEntry.BP_OnEntryReleased
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         void                                               ReturnValue
     */
    void IUserListEntry::BP_OnEntryReleased()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserListEntry.BP_OnEntryReleased");
        
        IUserListEntry_BP_OnEntryReleased_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> Function /Script/UMG.UserObjectListEntry.OnListItemObjectSet
     *         Flags  -> (Event, Protected, BlueprintEvent)
     * Parameters:
     *         CoreUObject::UObject*                              ListItemObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void IUserObjectListEntry::OnListItemObjectSet(CoreUObject::UObject* ListItemObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserObjectListEntry.OnListItemObjectSet");
        
        IUserObjectListEntry_OnListItemObjectSet_Params params {};
        params.ListItemObject = ListItemObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF4E0
     *         Name   -> Function /Script/UMG.UserObjectListEntry.GetListItemObject
     *         Flags  -> (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* IUserObjectListEntry::GetListItemObject()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UserObjectListEntry.GetListItemObject");
        
        IUserObjectListEntry_GetListItemObject_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFA10
     *         Name   -> Function /Script/UMG.ListViewBase.ScrollToTop
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListViewBase::ScrollToTop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListViewBase.ScrollToTop");
        
        UListViewBase_ScrollToTop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF9F0
     *         Name   -> Function /Script/UMG.ListViewBase.ScrollToBottom
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListViewBase::ScrollToBottom()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListViewBase.ScrollToBottom");
        
        UListViewBase_ScrollToBottom_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF950
     *         Name   -> Function /Script/UMG.ListViewBase.RegenerateAllEntries
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListViewBase::RegenerateAllEntries()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListViewBase.RegenerateAllEntries");
        
        UListViewBase_RegenerateAllEntries_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF330
     *         Name   -> Function /Script/UMG.ListViewBase.GetDisplayedEntryWidgets
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<UMG::UUserWidget*>              ReturnValue                                                (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<UMG::UUserWidget*> UListViewBase::GetDisplayedEntryWidgets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListViewBase.GetDisplayedEntryWidgets");
        
        UListViewBase_GetDisplayedEntryWidgets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFD30
     *         Name   -> Function /Script/UMG.ListView.SetSelectionMode
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::ESelectionMode                              SelectionMode                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::SetSelectionMode(Slate::ESelectionMode SelectionMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.SetSelectionMode");
        
        UListView_SetSelectionMode_Params params {};
        params.SelectionMode = SelectionMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFCB0
     *         Name   -> Function /Script/UMG.ListView.SetSelectedIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::SetSelectedIndex(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.SetSelectedIndex");
        
        UListView_SetSelectedIndex_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF970
     *         Name   -> Function /Script/UMG.ListView.ScrollIndexIntoView
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::ScrollIndexIntoView(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.ScrollIndexIntoView");
        
        UListView_ScrollIndexIntoView_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF840
     *         Name   -> Function /Script/UMG.ListView.NavigateToIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::NavigateToIndex(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.NavigateToIndex");
        
        UListView_NavigateToIndex_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF810
     *         Name   -> Function /Script/UMG.ListView.IsRefreshPending
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UListView::IsRefreshPending()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.IsRefreshPending");
        
        UListView_IsRefreshPending_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF580
     *         Name   -> Function /Script/UMG.ListView.GetNumItems
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UListView::GetNumItems()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.GetNumItems");
        
        UListView_GetNumItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF510
     *         Name   -> Function /Script/UMG.ListView.GetListItems
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::UObject*>          ReturnValue                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::TArray<CoreUObject::UObject*> UListView::GetListItems()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.GetListItems");
        
        UListView_GetListItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF450
     *         Name   -> Function /Script/UMG.ListView.GetItemAt
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UListView::GetItemAt(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.GetItemAt");
        
        UListView_GetItemAt_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF3C0
     *         Name   -> Function /Script/UMG.ListView.GetIndexForItem
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UListView::GetIndexForItem(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.GetIndexForItem");
        
        UListView_GetIndexForItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF2C0
     *         Name   -> Function /Script/UMG.ListView.ClearListItems
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListView::ClearListItems()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.ClearListItems");
        
        UListView_ClearListItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF240
     *         Name   -> Function /Script/UMG.ListView.BP_SetSelectedItem
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::BP_SetSelectedItem(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_SetSelectedItem");
        
        UListView_BP_SetSelectedItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF190
     *         Name   -> Function /Script/UMG.ListView.BP_SetListItems
     *         Flags  -> (Final, Native, Private, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::UObject*>          InListItems                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::BP_SetListItems(BasicTypes::TArray<CoreUObject::UObject*> InListItems)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_SetListItems");
        
        UListView_BP_SetListItems_Params params {};
        params.InListItems = InListItems;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF0C0
     *         Name   -> Function /Script/UMG.ListView.BP_SetItemSelection
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bSelected                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::BP_SetItemSelection(CoreUObject::UObject* Item, bool bSelected)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_SetItemSelection");
        
        UListView_BP_SetItemSelection_Params params {};
        params.Item = Item;
        params.bSelected = bSelected;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF040
     *         Name   -> Function /Script/UMG.ListView.BP_ScrollItemIntoView
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::BP_ScrollItemIntoView(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_ScrollItemIntoView");
        
        UListView_BP_ScrollItemIntoView_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEFC0
     *         Name   -> Function /Script/UMG.ListView.BP_NavigateToItem
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::BP_NavigateToItem(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_NavigateToItem");
        
        UListView_BP_NavigateToItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEF30
     *         Name   -> Function /Script/UMG.ListView.BP_IsItemVisible
     *         Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UListView::BP_IsItemVisible(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_IsItemVisible");
        
        UListView_BP_IsItemVisible_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEE70
     *         Name   -> Function /Script/UMG.ListView.BP_GetSelectedItems
     *         Flags  -> (Final, Native, Private, HasOutParms, BlueprintCallable, Const)
     * Parameters:
     *         BasicTypes::TArray<CoreUObject::UObject*>          Items                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UListView::BP_GetSelectedItems(BasicTypes::TArray<CoreUObject::UObject*>* Items)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_GetSelectedItems");
        
        UListView_BP_GetSelectedItems_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Items != nullptr)
            *Items = params.Items;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEE40
     *         Name   -> Function /Script/UMG.ListView.BP_GetSelectedItem
     *         Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UListView::BP_GetSelectedItem()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_GetSelectedItem");
        
        UListView_BP_GetSelectedItem_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEE10
     *         Name   -> Function /Script/UMG.ListView.BP_GetNumItemsSelected
     *         Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UListView::BP_GetNumItemsSelected()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_GetNumItemsSelected");
        
        UListView_BP_GetNumItemsSelected_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEDF0
     *         Name   -> Function /Script/UMG.ListView.BP_ClearSelection
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListView::BP_ClearSelection()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_ClearSelection");
        
        UListView_BP_ClearSelection_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEEDD0
     *         Name   -> Function /Script/UMG.ListView.BP_CancelScrollIntoView
     *         Flags  -> (Final, Native, Private, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UListView::BP_CancelScrollIntoView()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.BP_CancelScrollIntoView");
        
        UListView_BP_CancelScrollIntoView_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEED50
     *         Name   -> Function /Script/UMG.ListView.AddItem
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UListView::AddItem(CoreUObject::UObject* Item)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ListView.AddItem");
        
        UListView_AddItem_Params params {};
        params.Item = Item;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2E60
     *         Name   -> Function /Script/UMG.Overlay.AddChildToOverlay
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UOverlaySlot*                                 ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UOverlaySlot* UOverlay::AddChildToOverlay(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Overlay.AddChildToOverlay");
        
        UOverlay_AddChildToOverlay_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF5330
     *         Name   -> Function /Script/UMG.OverlaySlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOverlaySlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.OverlaySlot.SetVerticalAlignment");
        
        UOverlaySlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4910
     *         Name   -> Function /Script/UMG.OverlaySlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOverlaySlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.OverlaySlot.SetPadding");
        
        UOverlaySlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF43F0
     *         Name   -> Function /Script/UMG.OverlaySlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UOverlaySlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.OverlaySlot.SetHorizontalAlignment");
        
        UOverlaySlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4B50
     *         Name   -> Function /Script/UMG.ProgressBar.SetPercent
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InPercent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UProgressBar::SetPercent(float InPercent)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ProgressBar.SetPercent");
        
        UProgressBar_SetPercent_Params params {};
        params.InPercent = InPercent;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4580
     *         Name   -> Function /Script/UMG.ProgressBar.SetIsMarquee
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InbIsMarquee                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UProgressBar::SetIsMarquee(bool InbIsMarquee)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ProgressBar.SetIsMarquee");
        
        UProgressBar_SetIsMarquee_Params params {};
        params.InbIsMarquee = InbIsMarquee;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF42F0
     *         Name   -> Function /Script/UMG.ProgressBar.SetFillColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InColor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UProgressBar::SetFillColorAndOpacity(const CoreUObject::FLinearColor& InColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ProgressBar.SetFillColorAndOpacity");
        
        UProgressBar_SetFillColorAndOpacity_Params params {};
        params.InColor = InColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF5230
     *         Name   -> Function /Script/UMG.RetainerBox.SetTextureParameter
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FName                                  TextureParameter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void URetainerBox::SetTextureParameter(const BasicTypes::FName& TextureParameter)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RetainerBox.SetTextureParameter");
        
        URetainerBox_SetTextureParameter_Params params {};
        params.TextureParameter = TextureParameter;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4BD0
     *         Name   -> Function /Script/UMG.RetainerBox.SetRenderingPhase
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            RenderPhase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            TotalPhases                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void URetainerBox::SetRenderingPhase(int32_t RenderPhase, int32_t TotalPhases)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RetainerBox.SetRenderingPhase");
        
        URetainerBox_SetRenderingPhase_Params params {};
        params.RenderPhase = RenderPhase;
        params.TotalPhases = TotalPhases;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4270
     *         Name   -> Function /Script/UMG.RetainerBox.SetEffectMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInterface*                        EffectMaterial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void URetainerBox::SetEffectMaterial(Engine::UMaterialInterface* EffectMaterial)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RetainerBox.SetEffectMaterial");
        
        URetainerBox_SetEffectMaterial_Params params {};
        params.EffectMaterial = EffectMaterial;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3C70
     *         Name   -> Function /Script/UMG.RetainerBox.RequestRender
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void URetainerBox::RequestRender()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RetainerBox.RequestRender");
        
        URetainerBox_RequestRender_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3560
     *         Name   -> Function /Script/UMG.RetainerBox.GetEffectMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* URetainerBox::GetEffectMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RetainerBox.GetEffectMaterial");
        
        URetainerBox_GetEffectMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF5150
     *         Name   -> Function /Script/UMG.RichTextBlock.SetText
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void URichTextBlock::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RichTextBlock.SetText");
        
        URichTextBlock_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF34D0
     *         Name   -> Function /Script/UMG.RichTextBlock.GetDecoratorByClass
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::URichTextBlockDecorator*                      DecoratorClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::URichTextBlockDecorator*                      ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::URichTextBlockDecorator* URichTextBlock::GetDecoratorByClass(UMG::URichTextBlockDecorator* DecoratorClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.RichTextBlock.GetDecoratorByClass");
        
        URichTextBlock_GetDecoratorByClass_Params params {};
        params.DecoratorClass = DecoratorClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDFE0
     *         Name   -> Function /Script/UMG.Slider.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetValue(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetValue");
        
        USlider_SetValue_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDE90
     *         Name   -> Function /Script/UMG.Slider.SetStepSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetStepSize(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetStepSize");
        
        USlider_SetStepSize_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDD80
     *         Name   -> Function /Script/UMG.Slider.SetSliderHandleColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetSliderHandleColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetSliderHandleColor");
        
        USlider_SetSliderHandleColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDD00
     *         Name   -> Function /Script/UMG.Slider.SetSliderBarColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetSliderBarColor(const CoreUObject::FLinearColor& InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetSliderBarColor");
        
        USlider_SetSliderBarColor_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD290
     *         Name   -> Function /Script/UMG.Slider.SetLocked
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetLocked(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetLocked");
        
        USlider_SetLocked_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCFA0
     *         Name   -> Function /Script/UMG.Slider.SetIndentHandle
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlider::SetIndentHandle(bool InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.SetIndentHandle");
        
        USlider_SetIndentHandle_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBB10
     *         Name   -> Function /Script/UMG.Slider.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USlider::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Slider.GetValue");
        
        USlider_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDC80
     *         Name   -> Function /Script/UMG.Spacer.SetSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InSize                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpacer::SetSize(const CoreUObject::FVector2D& InSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Spacer.SetSize");
        
        USpacer_SetSize_Params params {};
        params.InSize = InSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE060
     *         Name   -> Function /Script/UMG.SpinBox.SetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetValue(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetValue");
        
        USpinBox_SetValue_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD620
     *         Name   -> Function /Script/UMG.SpinBox.SetMinValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetMinValue(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetMinValue");
        
        USpinBox_SetMinValue_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD5A0
     *         Name   -> Function /Script/UMG.SpinBox.SetMinSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetMinSliderValue(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetMinSliderValue");
        
        USpinBox_SetMinSliderValue_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD3A0
     *         Name   -> Function /Script/UMG.SpinBox.SetMaxValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetMaxValue(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetMaxValue");
        
        USpinBox_SetMaxValue_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD320
     *         Name   -> Function /Script/UMG.SpinBox.SetMaxSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetMaxSliderValue(float NewValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetMaxSliderValue");
        
        USpinBox_SetMaxSliderValue_Params params {};
        params.NewValue = NewValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCD20
     *         Name   -> Function /Script/UMG.SpinBox.SetForegroundColor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             InForegroundColor                                          (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::SetForegroundColor(const SlateCore::FSlateColor& InForegroundColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.SetForegroundColor");
        
        USpinBox_SetForegroundColor_Params params {};
        params.InForegroundColor = InForegroundColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.SpinBox.OnSpinBoxValueCommittedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::ETextCommit                             CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::OnSpinBoxValueCommittedEvent__DelegateSignature(float InValue, SlateCore::ETextCommit CommitMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.SpinBox.OnSpinBoxValueCommittedEvent__DelegateSignature");
        
        USpinBox_OnSpinBoxValueCommittedEvent__DelegateSignature_Params params {};
        params.InValue = InValue;
        params.CommitMethod = CommitMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.SpinBox.OnSpinBoxValueChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USpinBox::OnSpinBoxValueChangedEvent__DelegateSignature(float InValue)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.SpinBox.OnSpinBoxValueChangedEvent__DelegateSignature");
        
        USpinBox_OnSpinBoxValueChangedEvent__DelegateSignature_Params params {};
        params.InValue = InValue;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.SpinBox.OnSpinBoxBeginSliderMovement__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USpinBox::OnSpinBoxBeginSliderMovement__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.SpinBox.OnSpinBoxBeginSliderMovement__DelegateSignature");
        
        USpinBox_OnSpinBoxBeginSliderMovement__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBB40
     *         Name   -> Function /Script/UMG.SpinBox.GetValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USpinBox::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.GetValue");
        
        USpinBox_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB910
     *         Name   -> Function /Script/UMG.SpinBox.GetMinValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USpinBox::GetMinValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.GetMinValue");
        
        USpinBox_GetMinValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB8E0
     *         Name   -> Function /Script/UMG.SpinBox.GetMinSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USpinBox::GetMinSliderValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.GetMinSliderValue");
        
        USpinBox_GetMinSliderValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB8B0
     *         Name   -> Function /Script/UMG.SpinBox.GetMaxValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USpinBox::GetMaxValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.GetMaxValue");
        
        USpinBox_GetMaxValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB880
     *         Name   -> Function /Script/UMG.SpinBox.GetMaxSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float USpinBox::GetMaxSliderValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.GetMaxSliderValue");
        
        USpinBox_GetMaxSliderValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB670
     *         Name   -> Function /Script/UMG.SpinBox.ClearMinValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USpinBox::ClearMinValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.ClearMinValue");
        
        USpinBox_ClearMinValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB650
     *         Name   -> Function /Script/UMG.SpinBox.ClearMinSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USpinBox::ClearMinSliderValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.ClearMinSliderValue");
        
        USpinBox_ClearMinSliderValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB630
     *         Name   -> Function /Script/UMG.SpinBox.ClearMaxValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USpinBox::ClearMaxValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.ClearMaxValue");
        
        USpinBox_ClearMaxValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB610
     *         Name   -> Function /Script/UMG.SpinBox.ClearMaxSliderValue
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USpinBox::ClearMaxSliderValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SpinBox.ClearMaxSliderValue");
        
        USpinBox_ClearMaxSliderValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBA80
     *         Name   -> Function /Script/UMG.TextBinding.GetTextValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UTextBinding::GetTextValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBinding.GetTextValue");
        
        UTextBinding_GetTextValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB970
     *         Name   -> Function /Script/UMG.TextBinding.GetStringValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         BasicTypes::FString                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    BasicTypes::FString UTextBinding::GetStringValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBinding.GetStringValue");
        
        UTextBinding_GetStringValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDF10
     *         Name   -> Function /Script/UMG.TextBlock.SetText
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetText");
        
        UTextBlock_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDC00
     *         Name   -> Function /Script/UMG.TextBlock.SetShadowOffset
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InShadowOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetShadowOffset(const CoreUObject::FVector2D& InShadowOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetShadowOffset");
        
        UTextBlock_SetShadowOffset_Params params {};
        params.InShadowOffset = InShadowOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDB80
     *         Name   -> Function /Script/UMG.TextBlock.SetShadowColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          InShadowColorAndOpacity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetShadowColorAndOpacity(const CoreUObject::FLinearColor& InShadowColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetShadowColorAndOpacity");
        
        UTextBlock_SetShadowColorAndOpacity_Params params {};
        params.InShadowColorAndOpacity = InShadowColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD7E0
     *         Name   -> Function /Script/UMG.TextBlock.SetOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InOpacity                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetOpacity(float InOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetOpacity");
        
        UTextBlock_SetOpacity_Params params {};
        params.InOpacity = InOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD520
     *         Name   -> Function /Script/UMG.TextBlock.SetMinDesiredWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMinDesiredWidth                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetMinDesiredWidth(float InMinDesiredWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetMinDesiredWidth");
        
        UTextBlock_SetMinDesiredWidth_Params params {};
        params.InMinDesiredWidth = InMinDesiredWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD210
     *         Name   -> Function /Script/UMG.TextBlock.SetJustification
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::ETextJustify                                InJustification                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetJustification(Slate::ETextJustify InJustification)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetJustification");
        
        UTextBlock_SetJustification_Params params {};
        params.InJustification = InJustification;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCC00
     *         Name   -> Function /Script/UMG.TextBlock.SetFont
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateFontInfo                          InFontInfo                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetFont(const SlateCore::FSlateFontInfo& InFontInfo)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetFont");
        
        UTextBlock_SetFont_Params params {};
        params.InFontInfo = InFontInfo;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC880
     *         Name   -> Function /Script/UMG.TextBlock.SetColorAndOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateColor                             InColorAndOpacity                                          (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetColorAndOpacity(const SlateCore::FSlateColor& InColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetColorAndOpacity");
        
        UTextBlock_SetColorAndOpacity_Params params {};
        params.InColorAndOpacity = InColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC7F0
     *         Name   -> Function /Script/UMG.TextBlock.SetAutoWrapText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InAutoTextWrap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTextBlock::SetAutoWrapText(bool InAutoTextWrap)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.SetAutoWrapText");
        
        UTextBlock_SetAutoWrapText_Params params {};
        params.InAutoTextWrap = InAutoTextWrap;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB9F0
     *         Name   -> Function /Script/UMG.TextBlock.GetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UTextBlock::GetText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.GetText");
        
        UTextBlock_GetText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB820
     *         Name   -> Function /Script/UMG.TextBlock.GetDynamicOutlineMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UTextBlock::GetDynamicOutlineMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.GetDynamicOutlineMaterial");
        
        UTextBlock_GetDynamicOutlineMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB7F0
     *         Name   -> Function /Script/UMG.TextBlock.GetDynamicFontMaterial
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UTextBlock::GetDynamicFontMaterial()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TextBlock.GetDynamicFontMaterial");
        
        UTextBlock_GetDynamicFontMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD760
     *         Name   -> Function /Script/UMG.Throbber.SetNumberOfPieces
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InNumberOfPieces                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UThrobber::SetNumberOfPieces(int32_t InNumberOfPieces)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Throbber.SetNumberOfPieces");
        
        UThrobber_SetNumberOfPieces_Params params {};
        params.InNumberOfPieces = InNumberOfPieces;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC760
     *         Name   -> Function /Script/UMG.Throbber.SetAnimateVertically
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInAnimateVertically                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UThrobber::SetAnimateVertically(bool bInAnimateVertically)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Throbber.SetAnimateVertically");
        
        UThrobber_SetAnimateVertically_Params params {};
        params.bInAnimateVertically = bInAnimateVertically;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC6D0
     *         Name   -> Function /Script/UMG.Throbber.SetAnimateOpacity
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInAnimateOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UThrobber::SetAnimateOpacity(bool bInAnimateOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Throbber.SetAnimateOpacity");
        
        UThrobber_SetAnimateOpacity_Params params {};
        params.bInAnimateOpacity = bInAnimateOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFC640
     *         Name   -> Function /Script/UMG.Throbber.SetAnimateHorizontally
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInAnimateHorizontally                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UThrobber::SetAnimateHorizontally(bool bInAnimateHorizontally)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Throbber.SetAnimateHorizontally");
        
        UThrobber_SetAnimateHorizontally_Params params {};
        params.bInAnimateHorizontally = bInAnimateHorizontally;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCB80
     *         Name   -> Function /Script/UMG.TileView.SetEntryWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewWidth                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTileView::SetEntryWidth(float NewWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TileView.SetEntryWidth");
        
        UTileView_SetEntryWidth_Params params {};
        params.NewWidth = NewWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCB00
     *         Name   -> Function /Script/UMG.TileView.SetEntryHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewHeight                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTileView::SetEntryHeight(float NewHeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TileView.SetEntryHeight");
        
        UTileView_SetEntryHeight_Params params {};
        params.NewHeight = NewHeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD140
     *         Name   -> Function /Script/UMG.TreeView.SetItemExpansion
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bExpandItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UTreeView::SetItemExpansion(CoreUObject::UObject* Item, bool bExpandItem)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TreeView.SetItemExpansion");
        
        UTreeView_SetItemExpansion_Params params {};
        params.Item = Item;
        params.bExpandItem = bExpandItem;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB6B0
     *         Name   -> Function /Script/UMG.TreeView.ExpandAll
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UTreeView::ExpandAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TreeView.ExpandAll");
        
        UTreeView_ExpandAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB690
     *         Name   -> Function /Script/UMG.TreeView.CollapseAll
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UTreeView::CollapseAll()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.TreeView.CollapseAll");
        
        UTreeView_CollapseAll_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDE00
     *         Name   -> Function /Script/UMG.UniformGridPanel.SetSlotPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InSlotPadding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridPanel::SetSlotPadding(const SlateCore::FMargin& InSlotPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridPanel.SetSlotPadding");
        
        UUniformGridPanel_SetSlotPadding_Params params {};
        params.InSlotPadding = InSlotPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD4A0
     *         Name   -> Function /Script/UMG.UniformGridPanel.SetMinDesiredSlotWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMinDesiredSlotWidth                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridPanel::SetMinDesiredSlotWidth(float InMinDesiredSlotWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridPanel.SetMinDesiredSlotWidth");
        
        UUniformGridPanel_SetMinDesiredSlotWidth_Params params {};
        params.InMinDesiredSlotWidth = InMinDesiredSlotWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFD420
     *         Name   -> Function /Script/UMG.UniformGridPanel.SetMinDesiredSlotHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMinDesiredSlotHeight                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridPanel::SetMinDesiredSlotHeight(float InMinDesiredSlotHeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridPanel.SetMinDesiredSlotHeight");
        
        UUniformGridPanel_SetMinDesiredSlotHeight_Params params {};
        params.InMinDesiredSlotHeight = InMinDesiredSlotHeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFB450
     *         Name   -> Function /Script/UMG.UniformGridPanel.AddChildToUniformGrid
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUniformGridSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUniformGridSlot* UUniformGridPanel::AddChildToUniformGrid(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridPanel.AddChildToUniformGrid");
        
        UUniformGridPanel_AddChildToUniformGrid_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFE0E0
     *         Name   -> Function /Script/UMG.UniformGridSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridSlot.SetVerticalAlignment");
        
        UUniformGridSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFDB00
     *         Name   -> Function /Script/UMG.UniformGridSlot.SetRow
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InRow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridSlot::SetRow(int32_t InRow)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridSlot.SetRow");
        
        UUniformGridSlot_SetRow_Params params {};
        params.InRow = InRow;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCF20
     *         Name   -> Function /Script/UMG.UniformGridSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridSlot.SetHorizontalAlignment");
        
        UUniformGridSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFCA00
     *         Name   -> Function /Script/UMG.UniformGridSlot.SetColumn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            InColumn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UUniformGridSlot::SetColumn(int32_t InColumn)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.UniformGridSlot.SetColumn");
        
        UUniformGridSlot_SetColumn_Params params {};
        params.InColumn = InColumn;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01000BD0
     *         Name   -> Function /Script/UMG.VerticalBox.AddChildToVerticalBox
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UVerticalBoxSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UVerticalBoxSlot* UVerticalBox::AddChildToVerticalBox(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VerticalBox.AddChildToVerticalBox");
        
        UVerticalBox_AddChildToVerticalBox_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEBA30
     *         Name   -> Function /Script/UMG.VerticalBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVerticalBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VerticalBoxSlot.SetVerticalAlignment");
        
        UVerticalBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB6F0
     *         Name   -> Function /Script/UMG.VerticalBoxSlot.SetSize
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::FSlateChildSize                               InSize                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVerticalBoxSlot::SetSize(const UMG::FSlateChildSize& InSize)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VerticalBoxSlot.SetSize");
        
        UVerticalBoxSlot_SetSize_Params params {};
        params.InSize = InSize;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEB3A0
     *         Name   -> Function /Script/UMG.VerticalBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVerticalBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VerticalBoxSlot.SetPadding");
        
        UVerticalBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEAC90
     *         Name   -> Function /Script/UMG.VerticalBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVerticalBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VerticalBoxSlot.SetHorizontalAlignment");
        
        UVerticalBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010059B0
     *         Name   -> Function /Script/UMG.Viewport.Spawn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::AActor*                                    ActorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* UViewport::Spawn(Engine::AActor* ActorClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.Spawn");
        
        UViewport_Spawn_Params params {};
        params.ActorClass = ActorClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010055F0
     *         Name   -> Function /Script/UMG.Viewport.SetViewRotation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FRotator                              Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UViewport::SetViewRotation(const CoreUObject::FRotator& Rotation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.SetViewRotation");
        
        UViewport_SetViewRotation_Params params {};
        params.Rotation = Rotation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005560
     *         Name   -> Function /Script/UMG.Viewport.SetViewLocation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UViewport::SetViewLocation(const CoreUObject::FVector& Location)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.SetViewLocation");
        
        UViewport_SetViewLocation_Params params {};
        params.Location = Location;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010035B0
     *         Name   -> Function /Script/UMG.Viewport.GetViewRotation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FRotator                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    CoreUObject::FRotator UViewport::GetViewRotation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.GetViewRotation");
        
        UViewport_GetViewRotation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010035F0
     *         Name   -> Function /Script/UMG.Viewport.GetViewportWorld
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UWorld*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UWorld* UViewport::GetViewportWorld()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.GetViewportWorld");
        
        UViewport_GetViewportWorld_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003570
     *         Name   -> Function /Script/UMG.Viewport.GetViewLocation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector UViewport::GetViewLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.Viewport.GetViewLocation");
        
        UViewport_GetViewLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003510
     *         Name   -> Function /Script/UMG.VisibilityBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         UMG::ESlateVisibility                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::ESlateVisibility UVisibilityBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.VisibilityBinding.GetValue");
        
        UVisibilityBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010034E0
     *         Name   -> Function /Script/UMG.WidgetAnimation.GetStartTime
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UWidgetAnimation::GetStartTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetAnimation.GetStartTime");
        
        UWidgetAnimation_GetStartTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002C90
     *         Name   -> Function /Script/UMG.WidgetAnimation.GetEndTime
     *         Flags  -> (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UWidgetAnimation::GetEndTime()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetAnimation.GetEndTime");
        
        UWidgetAnimation_GetEndTime_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003540
     *         Name   -> Function /Script/UMG.WidgetBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidgetBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBinding.GetValue");
        
        UWidgetBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01005AB0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.UnlockMouse
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_UnlockMouse(UMG::FEventReply* Reply)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.UnlockMouse");
        
        UWidgetBlueprintLibrary_UnlockMouse_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01005A40
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.Unhandled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_Unhandled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.Unhandled");
        
        UWidgetBlueprintLibrary_Unhandled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01005820
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarState
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      TitleBarContent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EWindowTitleBarMode                        Mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTitleBarDragEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bWindowButtonsVisible                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bTitleBarVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetWindowTitleBarState(UMG::UWidget* TitleBarContent, Engine::EWindowTitleBarMode Mode, bool bTitleBarDragEnabled, bool bWindowButtonsVisible, bool bTitleBarVisible)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarState");
        
        UWidgetBlueprintLibrary_SetWindowTitleBarState_Params params {};
        params.TitleBarContent = TitleBarContent;
        params.Mode = Mode;
        params.bTitleBarDragEnabled = bTitleBarDragEnabled;
        params.bWindowButtonsVisible = bWindowButtonsVisible;
        params.bTitleBarVisible = bTitleBarVisible;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005780
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarOnCloseClickedDelegate
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::UScriptDelegate                        Delegate                                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetWindowTitleBarOnCloseClickedDelegate(const BasicTypes::UScriptDelegate& Delegate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarOnCloseClickedDelegate");
        
        UWidgetBlueprintLibrary_SetWindowTitleBarOnCloseClickedDelegate_Params params {};
        params.Delegate = Delegate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01005700
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarCloseButtonActive
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bActive                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetWindowTitleBarCloseButtonActive(bool bActive)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetWindowTitleBarCloseButtonActive");
        
        UWidgetBlueprintLibrary_SetWindowTitleBarCloseButtonActive_Params params {};
        params.bActive = bActive;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01000C80
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetUserFocus
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      FocusWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInAllUsers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_SetUserFocus(UMG::FEventReply* Reply, UMG::UWidget* FocusWidget, bool bInAllUsers)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetUserFocus");
        
        UWidgetBlueprintLibrary_SetUserFocus_Params params {};
        params.FocusWidget = FocusWidget;
        params.bInAllUsers = bInAllUsers;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01004D00
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetMousePosition
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             NewMousePosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_SetMousePosition(UMG::FEventReply* Reply, const CoreUObject::FVector2D& NewMousePosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetMousePosition");
        
        UWidgetBlueprintLibrary_SetMousePosition_Params params {};
        params.NewMousePosition = NewMousePosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01004B60
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_UIOnlyEx
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      InWidgetToFocus                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EMouseLockMode                             InMouseLockMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetInputMode_UIOnlyEx(Engine::APlayerController* PlayerController, UMG::UWidget* InWidgetToFocus, Engine::EMouseLockMode InMouseLockMode)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_UIOnlyEx");
        
        UWidgetBlueprintLibrary_SetInputMode_UIOnlyEx_Params params {};
        params.PlayerController = PlayerController;
        params.InWidgetToFocus = InWidgetToFocus;
        params.InMouseLockMode = InMouseLockMode;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004A60
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_UIOnly
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      InWidgetToFocus                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLockMouseToViewport                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetInputMode_UIOnly(Engine::APlayerController* Target, UMG::UWidget* InWidgetToFocus, bool bLockMouseToViewport)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_UIOnly");
        
        UWidgetBlueprintLibrary_SetInputMode_UIOnly_Params params {};
        params.Target = Target;
        params.InWidgetToFocus = InWidgetToFocus;
        params.bLockMouseToViewport = bLockMouseToViewport;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010049F0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameOnly
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetInputMode_GameOnly(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameOnly");
        
        UWidgetBlueprintLibrary_SetInputMode_GameOnly_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010048B0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameAndUIEx
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      InWidgetToFocus                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::EMouseLockMode                             InMouseLockMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bHideCursorDuringCapture                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetInputMode_GameAndUIEx(Engine::APlayerController* PlayerController, UMG::UWidget* InWidgetToFocus, Engine::EMouseLockMode InMouseLockMode, bool bHideCursorDuringCapture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameAndUIEx");
        
        UWidgetBlueprintLibrary_SetInputMode_GameAndUIEx_Params params {};
        params.PlayerController = PlayerController;
        params.InWidgetToFocus = InWidgetToFocus;
        params.InMouseLockMode = InMouseLockMode;
        params.bHideCursorDuringCapture = bHideCursorDuringCapture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004770
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameAndUI
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      InWidgetToFocus                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bLockMouseToViewport                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bHideCursorDuringCapture                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetInputMode_GameAndUI(Engine::APlayerController* Target, UMG::UWidget* InWidgetToFocus, bool bLockMouseToViewport, bool bHideCursorDuringCapture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetInputMode_GameAndUI");
        
        UWidgetBlueprintLibrary_SetInputMode_GameAndUI_Params params {};
        params.Target = Target;
        params.InWidgetToFocus = InWidgetToFocus;
        params.bLockMouseToViewport = bLockMouseToViewport;
        params.bHideCursorDuringCapture = bHideCursorDuringCapture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004640
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetHardwareCursor
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::EMouseCursor                          CursorShape                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  CursorName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             HotSpot                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetBlueprintLibrary::STATIC_SetHardwareCursor(CoreUObject::UObject* WorldContextObject, CoreUObject::EMouseCursor CursorShape, const BasicTypes::FName& CursorName, const CoreUObject::FVector2D& HotSpot)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetHardwareCursor");
        
        UWidgetBlueprintLibrary_SetHardwareCursor_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.CursorShape = CursorShape;
        params.CursorName = CursorName;
        params.HotSpot = HotSpot;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01004620
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetFocusToGameViewport
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetFocusToGameViewport()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetFocusToGameViewport");
        
        UWidgetBlueprintLibrary_SetFocusToGameViewport_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004360
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetBrushResourceToTexture
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetBrushResourceToTexture(SlateCore::FSlateBrush* Brush, Engine::UTexture2D* Texture)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetBrushResourceToTexture");
        
        UWidgetBlueprintLibrary_SetBrushResourceToTexture_Params params {};
        params.Texture = Texture;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Brush != nullptr)
            *Brush = params.Brush;
    }

    /**
     * Function:
     *         RVA    -> 0x01004360
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.SetBrushResourceToMaterial
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInterface*                        Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_SetBrushResourceToMaterial(SlateCore::FSlateBrush* Brush, Engine::UMaterialInterface* Material)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.SetBrushResourceToMaterial");
        
        UWidgetBlueprintLibrary_SetBrushResourceToMaterial_Params params {};
        params.Material = Material;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Brush != nullptr)
            *Brush = params.Brush;
    }

    /**
     * Function:
     *         RVA    -> 0x01004280
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.RestorePreviousWindowTitleBarState
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_RestorePreviousWindowTitleBarState()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.RestorePreviousWindowTitleBarState");
        
        UWidgetBlueprintLibrary_RestorePreviousWindowTitleBarState_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010040F0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.ReleaseMouseCapture
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_ReleaseMouseCapture(UMG::FEventReply* Reply)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.ReleaseMouseCapture");
        
        UWidgetBlueprintLibrary_ReleaseMouseCapture_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01001000
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.ReleaseJoystickCapture
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bInAllJoysticks                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_ReleaseJoystickCapture(UMG::FEventReply* Reply, bool bInAllJoysticks)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.ReleaseJoystickCapture");
        
        UWidgetBlueprintLibrary_ReleaseJoystickCapture_Params params {};
        params.bInAllJoysticks = bInAllJoysticks;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.WidgetBlueprintLibrary.OnGameWindowCloseButtonClickedDelegate__DelegateSignature
     *         Flags  -> (Public, Delegate)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::OnGameWindowCloseButtonClickedDelegate__DelegateSignature()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.WidgetBlueprintLibrary.OnGameWindowCloseButtonClickedDelegate__DelegateSignature");
        
        UWidgetBlueprintLibrary_OnGameWindowCloseButtonClickedDelegate__DelegateSignature_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01004030
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.NoResourceBrush
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UWidgetBlueprintLibrary::STATIC_NoResourceBrush()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.NoResourceBrush");
        
        UWidgetBlueprintLibrary_NoResourceBrush_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003E80
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromTexture
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UTexture2D*                                Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UWidgetBlueprintLibrary::STATIC_MakeBrushFromTexture(Engine::UTexture2D* Texture, int32_t Width, int32_t Height)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromTexture");
        
        UWidgetBlueprintLibrary_MakeBrushFromTexture_Params params {};
        params.Texture = Texture;
        params.Width = Width;
        params.Height = Height;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003CD0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromMaterial
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::UMaterialInterface*                        Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UWidgetBlueprintLibrary::STATIC_MakeBrushFromMaterial(Engine::UMaterialInterface* Material, int32_t Width, int32_t Height)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromMaterial");
        
        UWidgetBlueprintLibrary_MakeBrushFromMaterial_Params params {};
        params.Material = Material;
        params.Width = Width;
        params.Height = Height;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003BB0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromAsset
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::USlateBrushAsset*                          BrushAsset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FSlateBrush                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FSlateBrush UWidgetBlueprintLibrary::STATIC_MakeBrushFromAsset(Engine::USlateBrushAsset* BrushAsset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.MakeBrushFromAsset");
        
        UWidgetBlueprintLibrary_MakeBrushFromAsset_Params params {};
        params.BrushAsset = BrushAsset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003A10
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.LockMouse
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      CapturingWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_LockMouse(UMG::FEventReply* Reply, UMG::UWidget* CapturingWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.LockMouse");
        
        UWidgetBlueprintLibrary_LockMouse_Params params {};
        params.CapturingWidget = CapturingWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003980
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.IsDragDropping
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetBlueprintLibrary::STATIC_IsDragDropping()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.IsDragDropping");
        
        UWidgetBlueprintLibrary_IsDragDropping_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003650
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.Handled
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_Handled()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.Handled");
        
        UWidgetBlueprintLibrary_Handled_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01003370
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetSafeZonePadding
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector4                              SafePadding                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             SafePaddingScale                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector4                              SpillOverPadding                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_GetSafeZonePadding(CoreUObject::UObject* WorldContextObject, CoreUObject::FVector4* SafePadding, CoreUObject::FVector2D* SafePaddingScale, CoreUObject::FVector4* SpillOverPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetSafeZonePadding");
        
        UWidgetBlueprintLibrary_GetSafeZonePadding_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (SafePadding != nullptr)
            *SafePadding = params.SafePadding;
        if (SafePaddingScale != nullptr)
            *SafePaddingScale = params.SafePaddingScale;
        if (SpillOverPadding != nullptr)
            *SpillOverPadding = params.SpillOverPadding;
    }

    /**
     * Function:
     *         RVA    -> 0x01003120
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetKeyEventFromAnalogInputEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FAnalogInputEvent                       Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FKeyEvent                               ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FKeyEvent UWidgetBlueprintLibrary::STATIC_GetKeyEventFromAnalogInputEvent(const SlateCore::FAnalogInputEvent& Event)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetKeyEventFromAnalogInputEvent");
        
        UWidgetBlueprintLibrary_GetKeyEventFromAnalogInputEvent_Params params {};
        params.Event = Event;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002FA0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromPointerEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FPointerEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FInputEvent                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FInputEvent UWidgetBlueprintLibrary::STATIC_GetInputEventFromPointerEvent(const SlateCore::FPointerEvent& Event)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromPointerEvent");
        
        UWidgetBlueprintLibrary_GetInputEventFromPointerEvent_Params params {};
        params.Event = Event;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002EC0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromNavigationEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FNavigationEvent                        Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FInputEvent                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FInputEvent UWidgetBlueprintLibrary::STATIC_GetInputEventFromNavigationEvent(const SlateCore::FNavigationEvent& Event)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromNavigationEvent");
        
        UWidgetBlueprintLibrary_GetInputEventFromNavigationEvent_Params params {};
        params.Event = Event;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002DA0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromKeyEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FKeyEvent                               Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FInputEvent                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FInputEvent UWidgetBlueprintLibrary::STATIC_GetInputEventFromKeyEvent(const SlateCore::FKeyEvent& Event)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromKeyEvent");
        
        UWidgetBlueprintLibrary_GetInputEventFromKeyEvent_Params params {};
        params.Event = Event;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002CC0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromCharacterEvent
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FCharacterEvent                         Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FInputEvent                             ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    SlateCore::FInputEvent UWidgetBlueprintLibrary::STATIC_GetInputEventFromCharacterEvent(const SlateCore::FCharacterEvent& Event)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetInputEventFromCharacterEvent");
        
        UWidgetBlueprintLibrary_GetInputEventFromCharacterEvent_Params params {};
        params.Event = Event;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002B00
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetDynamicMaterial
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UWidgetBlueprintLibrary::STATIC_GetDynamicMaterial(SlateCore::FSlateBrush* Brush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetDynamicMaterial");
        
        UWidgetBlueprintLibrary_GetDynamicMaterial_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Brush != nullptr)
            *Brush = params.Brush;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002AD0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetDragDroppingContent
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UDragDropOperation*                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UDragDropOperation* UWidgetBlueprintLibrary::STATIC_GetDragDroppingContent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetDragDroppingContent");
        
        UWidgetBlueprintLibrary_GetDragDroppingContent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002890
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResourceAsTexture2D
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UTexture2D*                                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTexture2D* UWidgetBlueprintLibrary::STATIC_GetBrushResourceAsTexture2D(const SlateCore::FSlateBrush& Brush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResourceAsTexture2D");
        
        UWidgetBlueprintLibrary_GetBrushResourceAsTexture2D_Params params {};
        params.Brush = Brush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002700
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResourceAsMaterial
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         Engine::UMaterialInterface*                        ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInterface* UWidgetBlueprintLibrary::STATIC_GetBrushResourceAsMaterial(const SlateCore::FSlateBrush& Brush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResourceAsMaterial");
        
        UWidgetBlueprintLibrary_GetBrushResourceAsMaterial_Params params {};
        params.Brush = Brush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002570
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResource
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             Brush                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::UObject*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::UObject* UWidgetBlueprintLibrary::STATIC_GetBrushResource(const SlateCore::FSlateBrush& Brush)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetBrushResource");
        
        UWidgetBlueprintLibrary_GetBrushResource_Params params {};
        params.Brush = Brush;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01002410
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetAllWidgetsWithInterface
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::IInterface*                           Interface                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<UMG::UUserWidget*>              FoundWidgets                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_GetAllWidgetsWithInterface(CoreUObject::UObject* WorldContextObject, CoreUObject::IInterface* Interface, BasicTypes::TArray<UMG::UUserWidget*>* FoundWidgets, bool TopLevelOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetAllWidgetsWithInterface");
        
        UWidgetBlueprintLibrary_GetAllWidgetsWithInterface_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Interface = Interface;
        params.TopLevelOnly = TopLevelOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FoundWidgets != nullptr)
            *FoundWidgets = params.FoundWidgets;
    }

    /**
     * Function:
     *         RVA    -> 0x010022B0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.GetAllWidgetsOfClass
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<UMG::UUserWidget*>              FoundWidgets                                               (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               TopLevelOnly                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_GetAllWidgetsOfClass(CoreUObject::UObject* WorldContextObject, BasicTypes::TArray<UMG::UUserWidget*>* FoundWidgets, UMG::UUserWidget* WidgetClass, bool TopLevelOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.GetAllWidgetsOfClass");
        
        UWidgetBlueprintLibrary_GetAllWidgetsOfClass_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.WidgetClass = WidgetClass;
        params.TopLevelOnly = TopLevelOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (FoundWidgets != nullptr)
            *FoundWidgets = params.FoundWidgets;
    }

    /**
     * Function:
     *         RVA    -> 0x010020B0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.EndDragDrop
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_EndDragDrop(UMG::FEventReply* Reply)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.EndDragDrop");
        
        UWidgetBlueprintLibrary_EndDragDrop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01001E40
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DrawTextFormatted
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::UFont*                                     Font                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            FontSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FName                                  FontTypeFace                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Tint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DrawTextFormatted(UMG::FPaintContext* Context, const BasicTypes::FText& Text, const CoreUObject::FVector2D& Position, Engine::UFont* Font, int32_t FontSize, const BasicTypes::FName& FontTypeFace, const CoreUObject::FLinearColor& Tint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DrawTextFormatted");
        
        UWidgetBlueprintLibrary_DrawTextFormatted_Params params {};
        params.Text = Text;
        params.Position = Position;
        params.Font = Font;
        params.FontSize = FontSize;
        params.FontTypeFace = FontTypeFace;
        params.Tint = Tint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x01001CC0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DrawText
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                inString                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Tint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DrawText(UMG::FPaintContext* Context, const BasicTypes::FString& inString, const CoreUObject::FVector2D& Position, const CoreUObject::FLinearColor& Tint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DrawText");
        
        UWidgetBlueprintLibrary_DrawText_Params params {};
        params.inString = inString;
        params.Position = Position;
        params.Tint = Tint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x01001B20
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DrawLines
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         BasicTypes::TArray<CoreUObject::FVector2D>         Points                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Tint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAntiAlias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DrawLines(UMG::FPaintContext* Context, BasicTypes::TArray<CoreUObject::FVector2D> Points, const CoreUObject::FLinearColor& Tint, bool bAntiAlias)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DrawLines");
        
        UWidgetBlueprintLibrary_DrawLines_Params params {};
        params.Points = Points;
        params.Tint = Tint;
        params.bAntiAlias = bAntiAlias;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x01001970
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DrawLine
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PositionA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PositionB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Tint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bAntiAlias                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DrawLine(UMG::FPaintContext* Context, const CoreUObject::FVector2D& PositionA, const CoreUObject::FVector2D& PositionB, const CoreUObject::FLinearColor& Tint, bool bAntiAlias)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DrawLine");
        
        UWidgetBlueprintLibrary_DrawLine_Params params {};
        params.PositionA = PositionA;
        params.PositionB = PositionB;
        params.Tint = Tint;
        params.bAntiAlias = bAntiAlias;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x010017C0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DrawBox
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         UMG::FPaintContext                                 Context                                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::USlateBrushAsset*                          Brush                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FLinearColor                          Tint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DrawBox(UMG::FPaintContext* Context, const CoreUObject::FVector2D& Position, const CoreUObject::FVector2D& Size, Engine::USlateBrushAsset* Brush, const CoreUObject::FLinearColor& Tint)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DrawBox");
        
        UWidgetBlueprintLibrary_DrawBox_Params params {};
        params.Position = Position;
        params.Size = Size;
        params.Brush = Brush;
        params.Tint = Tint;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Context != nullptr)
            *Context = params.Context;
    }

    /**
     * Function:
     *         RVA    -> 0x010017A0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DismissAllMenus
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_DismissAllMenus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DismissAllMenus");
        
        UWidgetBlueprintLibrary_DismissAllMenus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01001540
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DetectDragIfPressed
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         SlateCore::FPointerEvent                           PointerEvent                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      WidgetDetectingDrag                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         InputCore::FKey                                    DragKey                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_DetectDragIfPressed(const SlateCore::FPointerEvent& PointerEvent, UMG::UWidget* WidgetDetectingDrag, const InputCore::FKey& DragKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DetectDragIfPressed");
        
        UWidgetBlueprintLibrary_DetectDragIfPressed_Params params {};
        params.PointerEvent = PointerEvent;
        params.WidgetDetectingDrag = WidgetDetectingDrag;
        params.DragKey = DragKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01001310
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.DetectDrag
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      WidgetDetectingDrag                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         InputCore::FKey                                    DragKey                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_DetectDrag(UMG::FEventReply* Reply, UMG::UWidget* WidgetDetectingDrag, const InputCore::FKey& DragKey)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.DetectDrag");
        
        UWidgetBlueprintLibrary_DetectDrag_Params params {};
        params.WidgetDetectingDrag = WidgetDetectingDrag;
        params.DragKey = DragKey;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01001290
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.CreateDragDropOperation
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UDragDropOperation*                           OperationClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UDragDropOperation*                           ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UDragDropOperation* UWidgetBlueprintLibrary::STATIC_CreateDragDropOperation(UMG::UDragDropOperation* OperationClass)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.CreateDragDropOperation");
        
        UWidgetBlueprintLibrary_CreateDragDropOperation_Params params {};
        params.OperationClass = OperationClass;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010011A0
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.Create
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  WidgetType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::APlayerController*                         OwningPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UWidgetBlueprintLibrary::STATIC_Create(CoreUObject::UObject* WorldContextObject, UMG::UUserWidget* WidgetType, Engine::APlayerController* OwningPlayer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.Create");
        
        UWidgetBlueprintLibrary_Create_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.WidgetType = WidgetType;
        params.OwningPlayer = OwningPlayer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01001000
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.ClearUserFocus
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               bInAllUsers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_ClearUserFocus(UMG::FEventReply* Reply, bool bInAllUsers)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.ClearUserFocus");
        
        UWidgetBlueprintLibrary_ClearUserFocus_Params params {};
        params.bInAllUsers = bInAllUsers;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01000E60
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.CaptureMouse
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      CapturingWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_CaptureMouse(UMG::FEventReply* Reply, UMG::UWidget* CapturingWidget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.CaptureMouse");
        
        UWidgetBlueprintLibrary_CaptureMouse_Params params {};
        params.CapturingWidget = CapturingWidget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01000C80
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.CaptureJoystick
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::FEventReply                                   Reply                                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      CapturingWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bInAllJoysticks                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::FEventReply                                   ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    UMG::FEventReply UWidgetBlueprintLibrary::STATIC_CaptureJoystick(UMG::FEventReply* Reply, UMG::UWidget* CapturingWidget, bool bInAllJoysticks)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.CaptureJoystick");
        
        UWidgetBlueprintLibrary_CaptureJoystick_Params params {};
        params.CapturingWidget = CapturingWidget;
        params.bInAllJoysticks = bInAllJoysticks;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (Reply != nullptr)
            *Reply = params.Reply;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01000C60
     *         Name   -> Function /Script/UMG.WidgetBlueprintLibrary.CancelDragDrop
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetBlueprintLibrary::STATIC_CancelDragDrop()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetBlueprintLibrary.CancelDragDrop");
        
        UWidgetBlueprintLibrary_CancelDragDrop_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009380
     *         Name   -> Function /Script/UMG.WindowTitleBarAreaSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarAreaSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarAreaSlot.SetVerticalAlignment");
        
        UWindowTitleBarAreaSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009170
     *         Name   -> Function /Script/UMG.WindowTitleBarAreaSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarAreaSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarAreaSlot.SetPadding");
        
        UWindowTitleBarAreaSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008E40
     *         Name   -> Function /Script/UMG.WindowTitleBarAreaSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarAreaSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarAreaSlot.SetHorizontalAlignment");
        
        UWindowTitleBarAreaSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008EC0
     *         Name   -> Function /Script/UMG.WrapBox.SetInnerSlotPadding
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBox::SetInnerSlotPadding(const CoreUObject::FVector2D& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBox.SetInnerSlotPadding");
        
        UWrapBox_SetInnerSlotPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01007930
     *         Name   -> Function /Script/UMG.WrapBox.AddChildWrapBox
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Content                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWrapBoxSlot*                                 ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWrapBoxSlot* UWrapBox::AddChildWrapBox(UMG::UWidget* Content)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBox.AddChildWrapBox");
        
        UWrapBox_AddChildWrapBox_Params params {};
        params.Content = Content;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009C50
     *         Name   -> Function /Script/UMG.WrapBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBoxSlot.SetVerticalAlignment");
        
        UWrapBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009BC0
     *         Name   -> Function /Script/UMG.WrapBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBoxSlot.SetPadding");
        
        UWrapBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009B40
     *         Name   -> Function /Script/UMG.WrapBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBoxSlot.SetHorizontalAlignment");
        
        UWrapBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009AC0
     *         Name   -> Function /Script/UMG.WrapBoxSlot.SetFillSpanWhenLessThan
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InFillSpanWhenLessThan                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBoxSlot::SetFillSpanWhenLessThan(float InFillSpanWhenLessThan)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBoxSlot.SetFillSpanWhenLessThan");
        
        UWrapBoxSlot_SetFillSpanWhenLessThan_Params params {};
        params.InFillSpanWhenLessThan = InFillSpanWhenLessThan;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009A30
     *         Name   -> Function /Script/UMG.WrapBoxSlot.SetFillEmptySpace
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InbFillEmptySpace                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWrapBoxSlot::SetFillEmptySpace(bool InbFillEmptySpace)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WrapBoxSlot.SetFillEmptySpace");
        
        UWrapBoxSlot_SetFillEmptySpace_Params params {};
        params.InbFillEmptySpace = InbFillEmptySpace;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6C80
     *         Name   -> Function /Script/UMG.ScaleBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBoxSlot.SetVerticalAlignment");
        
        UScaleBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF49A0
     *         Name   -> Function /Script/UMG.ScaleBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBoxSlot.SetPadding");
        
        UScaleBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5DA0
     *         Name   -> Function /Script/UMG.ScaleBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBoxSlot.SetHorizontalAlignment");
        
        UScaleBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4F90
     *         Name   -> Function /Script/UMG.ScrollBar.SetState
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InOffsetFraction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              InThumbSizeFraction                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBar::SetState(float InOffsetFraction, float InThumbSizeFraction)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBar.SetState");
        
        UScrollBar_SetState_Params params {};
        params.InOffsetFraction = InOffsetFraction;
        params.InThumbSizeFraction = InThumbSizeFraction;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4D10
     *         Name   -> Function /Script/UMG.ScrollBox.SetScrollOffset
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              NewScrollOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetScrollOffset(float NewScrollOffset)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetScrollOffset");
        
        UScrollBox_SetScrollOffset_Params params {};
        params.NewScrollOffset = NewScrollOffset;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4C90
     *         Name   -> Function /Script/UMG.ScrollBox.SetScrollBarVisibility
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::ESlateVisibility                              NewScrollBarVisibility                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetScrollBarVisibility(UMG::ESlateVisibility NewScrollBarVisibility)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetScrollBarVisibility");
        
        UScrollBox_SetScrollBarVisibility_Params params {};
        params.NewScrollBarVisibility = NewScrollBarVisibility;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4D90
     *         Name   -> Function /Script/UMG.ScrollBox.SetScrollbarThickness
     *         Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             NewScrollbarThickness                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetScrollbarThickness(const CoreUObject::FVector2D& NewScrollbarThickness)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetScrollbarThickness");
        
        UScrollBox_SetScrollbarThickness_Params params {};
        params.NewScrollbarThickness = NewScrollbarThickness;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4890
     *         Name   -> Function /Script/UMG.ScrollBox.SetOrientation
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EOrientation                            NewOrientation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetOrientation(SlateCore::EOrientation NewOrientation)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetOrientation");
        
        UScrollBox_SetOrientation_Params params {};
        params.NewOrientation = NewOrientation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF41E0
     *         Name   -> Function /Script/UMG.ScrollBox.SetAlwaysShowScrollbar
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               NewAlwaysShowScrollbar                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetAlwaysShowScrollbar");
        
        UScrollBox_SetAlwaysShowScrollbar_Params params {};
        params.NewAlwaysShowScrollbar = NewAlwaysShowScrollbar;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4150
     *         Name   -> Function /Script/UMG.ScrollBox.SetAllowOverscroll
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               NewAllowOverscroll                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::SetAllowOverscroll(bool NewAllowOverscroll)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.SetAllowOverscroll");
        
        UScrollBox_SetAllowOverscroll_Params params {};
        params.NewAllowOverscroll = NewAllowOverscroll;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4050
     *         Name   -> Function /Script/UMG.ScrollBox.ScrollWidgetIntoView
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      WidgetToFind                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               AnimateScroll                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Slate::EDescendantScrollDestination                ScrollDestination                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBox::ScrollWidgetIntoView(UMG::UWidget* WidgetToFind, bool AnimateScroll, Slate::EDescendantScrollDestination ScrollDestination)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.ScrollWidgetIntoView");
        
        UScrollBox_ScrollWidgetIntoView_Params params {};
        params.WidgetToFind = WidgetToFind;
        params.AnimateScroll = AnimateScroll;
        params.ScrollDestination = ScrollDestination;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4030
     *         Name   -> Function /Script/UMG.ScrollBox.ScrollToStart
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UScrollBox::ScrollToStart()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.ScrollToStart");
        
        UScrollBox_ScrollToStart_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4010
     *         Name   -> Function /Script/UMG.ScrollBox.ScrollToEnd
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UScrollBox::ScrollToEnd()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.ScrollToEnd");
        
        UScrollBox_ScrollToEnd_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3680
     *         Name   -> Function /Script/UMG.ScrollBox.GetViewOffsetFraction
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UScrollBox::GetViewOffsetFraction()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.GetViewOffsetFraction");
        
        UScrollBox_GetViewOffsetFraction_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3650
     *         Name   -> Function /Script/UMG.ScrollBox.GetScrollOffset
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UScrollBox::GetScrollOffset()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBox.GetScrollOffset");
        
        UScrollBox_GetScrollOffset_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF53B0
     *         Name   -> Function /Script/UMG.ScrollBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBoxSlot.SetVerticalAlignment");
        
        UScrollBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4A30
     *         Name   -> Function /Script/UMG.ScrollBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBoxSlot.SetPadding");
        
        UScrollBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4470
     *         Name   -> Function /Script/UMG.ScrollBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScrollBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScrollBoxSlot.SetHorizontalAlignment");
        
        UScrollBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF5430
     *         Name   -> Function /Script/UMG.SizeBox.SetWidthOverride
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InWidthOverride                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetWidthOverride(float InWidthOverride)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetWidthOverride");
        
        USizeBox_SetWidthOverride_Params params {};
        params.InWidthOverride = InWidthOverride;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4810
     *         Name   -> Function /Script/UMG.SizeBox.SetMinDesiredWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMinDesiredWidth                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetMinDesiredWidth(float InMinDesiredWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetMinDesiredWidth");
        
        USizeBox_SetMinDesiredWidth_Params params {};
        params.InMinDesiredWidth = InMinDesiredWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4790
     *         Name   -> Function /Script/UMG.SizeBox.SetMinDesiredHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMinDesiredHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetMinDesiredHeight(float InMinDesiredHeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetMinDesiredHeight");
        
        USizeBox_SetMinDesiredHeight_Params params {};
        params.InMinDesiredHeight = InMinDesiredHeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4710
     *         Name   -> Function /Script/UMG.SizeBox.SetMaxDesiredWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMaxDesiredWidth                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetMaxDesiredWidth(float InMaxDesiredWidth)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetMaxDesiredWidth");
        
        USizeBox_SetMaxDesiredWidth_Params params {};
        params.InMaxDesiredWidth = InMaxDesiredWidth;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4690
     *         Name   -> Function /Script/UMG.SizeBox.SetMaxDesiredHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMaxDesiredHeight                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetMaxDesiredHeight(float InMaxDesiredHeight)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetMaxDesiredHeight");
        
        USizeBox_SetMaxDesiredHeight_Params params {};
        params.InMaxDesiredHeight = InMaxDesiredHeight;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4610
     *         Name   -> Function /Script/UMG.SizeBox.SetMaxAspectRatio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InMaxAspectRatio                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetMaxAspectRatio(float InMaxAspectRatio)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetMaxAspectRatio");
        
        USizeBox_SetMaxAspectRatio_Params params {};
        params.InMaxAspectRatio = InMaxAspectRatio;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4370
     *         Name   -> Function /Script/UMG.SizeBox.SetHeightOverride
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InHeightOverride                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBox::SetHeightOverride(float InHeightOverride)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.SetHeightOverride");
        
        USizeBox_SetHeightOverride_Params params {};
        params.InHeightOverride = InHeightOverride;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2FD0
     *         Name   -> Function /Script/UMG.SizeBox.ClearWidthOverride
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearWidthOverride()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearWidthOverride");
        
        USizeBox_ClearWidthOverride_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2FB0
     *         Name   -> Function /Script/UMG.SizeBox.ClearMinDesiredWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearMinDesiredWidth()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearMinDesiredWidth");
        
        USizeBox_ClearMinDesiredWidth_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2F90
     *         Name   -> Function /Script/UMG.SizeBox.ClearMinDesiredHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearMinDesiredHeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearMinDesiredHeight");
        
        USizeBox_ClearMinDesiredHeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2F70
     *         Name   -> Function /Script/UMG.SizeBox.ClearMaxDesiredWidth
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearMaxDesiredWidth()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearMaxDesiredWidth");
        
        USizeBox_ClearMaxDesiredWidth_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2F50
     *         Name   -> Function /Script/UMG.SizeBox.ClearMaxDesiredHeight
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearMaxDesiredHeight()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearMaxDesiredHeight");
        
        USizeBox_ClearMaxDesiredHeight_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2F30
     *         Name   -> Function /Script/UMG.SizeBox.ClearMaxAspectRatio
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearMaxAspectRatio()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearMaxAspectRatio");
        
        USizeBox_ClearMaxAspectRatio_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2F10
     *         Name   -> Function /Script/UMG.SizeBox.ClearHeightOverride
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void USizeBox::ClearHeightOverride()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBox.ClearHeightOverride");
        
        USizeBox_ClearHeightOverride_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE6C80
     *         Name   -> Function /Script/UMG.SizeBoxSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBoxSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBoxSlot.SetVerticalAlignment");
        
        USizeBoxSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4AC0
     *         Name   -> Function /Script/UMG.SizeBoxSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBoxSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBoxSlot.SetPadding");
        
        USizeBoxSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FE5DA0
     *         Name   -> Function /Script/UMG.SizeBoxSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USizeBoxSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SizeBoxSlot.SetHorizontalAlignment");
        
        USizeBoxSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3E90
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.ScreenToWidgetLocal
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             LocalCoordinate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlateBlueprintLibrary::STATIC_ScreenToWidgetLocal(CoreUObject::UObject* WorldContextObject, const SlateCore::FGeometry& Geometry, const CoreUObject::FVector2D& ScreenPosition, CoreUObject::FVector2D* LocalCoordinate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.ScreenToWidgetLocal");
        
        USlateBlueprintLibrary_ScreenToWidgetLocal_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Geometry = Geometry;
        params.ScreenPosition = ScreenPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LocalCoordinate != nullptr)
            *LocalCoordinate = params.LocalCoordinate;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3D90
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.ScreenToWidgetAbsolute
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             AbsoluteCoordinate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlateBlueprintLibrary::STATIC_ScreenToWidgetAbsolute(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& ScreenPosition, CoreUObject::FVector2D* AbsoluteCoordinate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.ScreenToWidgetAbsolute");
        
        USlateBlueprintLibrary_ScreenToWidgetAbsolute_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScreenPosition = ScreenPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (AbsoluteCoordinate != nullptr)
            *AbsoluteCoordinate = params.AbsoluteCoordinate;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3C90
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.ScreenToViewport
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ViewportPosition                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlateBlueprintLibrary::STATIC_ScreenToViewport(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& ScreenPosition, CoreUObject::FVector2D* ViewportPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.ScreenToViewport");
        
        USlateBlueprintLibrary_ScreenToViewport_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.ScreenPosition = ScreenPosition;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ViewportPosition != nullptr)
            *ViewportPosition = params.ViewportPosition;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3970
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.LocalToViewport
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             LocalCoordinate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PixelPosition                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ViewportPosition                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlateBlueprintLibrary::STATIC_LocalToViewport(CoreUObject::UObject* WorldContextObject, const SlateCore::FGeometry& Geometry, const CoreUObject::FVector2D& LocalCoordinate, CoreUObject::FVector2D* PixelPosition, CoreUObject::FVector2D* ViewportPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.LocalToViewport");
        
        USlateBlueprintLibrary_LocalToViewport_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.Geometry = Geometry;
        params.LocalCoordinate = LocalCoordinate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PixelPosition != nullptr)
            *PixelPosition = params.PixelPosition;
        if (ViewportPosition != nullptr)
            *ViewportPosition = params.ViewportPosition;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3870
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.LocalToAbsolute
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             LocalCoordinate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D USlateBlueprintLibrary::STATIC_LocalToAbsolute(const SlateCore::FGeometry& Geometry, const CoreUObject::FVector2D& LocalCoordinate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.LocalToAbsolute");
        
        USlateBlueprintLibrary_LocalToAbsolute_Params params {};
        params.Geometry = Geometry;
        params.LocalCoordinate = LocalCoordinate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3770
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.IsUnderLocation
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             AbsoluteCoordinate                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USlateBlueprintLibrary::STATIC_IsUnderLocation(const SlateCore::FGeometry& Geometry, const CoreUObject::FVector2D& AbsoluteCoordinate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.IsUnderLocation");
        
        USlateBlueprintLibrary_IsUnderLocation_Params params {};
        params.Geometry = Geometry;
        params.AbsoluteCoordinate = AbsoluteCoordinate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF3590
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.GetLocalSize
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D USlateBlueprintLibrary::STATIC_GetLocalSize(const SlateCore::FGeometry& Geometry)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.GetLocalSize");
        
        USlateBlueprintLibrary_GetLocalSize_Params params {};
        params.Geometry = Geometry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF32C0
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.GetAbsoluteSize
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D USlateBlueprintLibrary::STATIC_GetAbsoluteSize(const SlateCore::FGeometry& Geometry)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.GetAbsoluteSize");
        
        USlateBlueprintLibrary_GetAbsoluteSize_Params params {};
        params.Geometry = Geometry;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2FF0
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.EqualEqual_SlateBrush
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FSlateBrush                             A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::FSlateBrush                             B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool USlateBlueprintLibrary::STATIC_EqualEqual_SlateBrush(const SlateCore::FSlateBrush& A, const SlateCore::FSlateBrush& B)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.EqualEqual_SlateBrush");
        
        USlateBlueprintLibrary_EqualEqual_SlateBrush_Params params {};
        params.A = A;
        params.B = B;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2C80
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.AbsoluteToViewport
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             AbsoluteDesktopCoordinate                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             PixelPosition                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ViewportPosition                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USlateBlueprintLibrary::STATIC_AbsoluteToViewport(CoreUObject::UObject* WorldContextObject, const CoreUObject::FVector2D& AbsoluteDesktopCoordinate, CoreUObject::FVector2D* PixelPosition, CoreUObject::FVector2D* ViewportPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.AbsoluteToViewport");
        
        USlateBlueprintLibrary_AbsoluteToViewport_Params params {};
        params.WorldContextObject = WorldContextObject;
        params.AbsoluteDesktopCoordinate = AbsoluteDesktopCoordinate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (PixelPosition != nullptr)
            *PixelPosition = params.PixelPosition;
        if (ViewportPosition != nullptr)
            *ViewportPosition = params.ViewportPosition;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF2B80
     *         Name   -> Function /Script/UMG.SlateBlueprintLibrary.AbsoluteToLocal
     *         Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         SlateCore::FGeometry                               Geometry                                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             AbsoluteCoordinate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D USlateBlueprintLibrary::STATIC_AbsoluteToLocal(const SlateCore::FGeometry& Geometry, const CoreUObject::FVector2D& AbsoluteCoordinate)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SlateBlueprintLibrary.AbsoluteToLocal");
        
        USlateBlueprintLibrary_AbsoluteToLocal_Params params {};
        params.Geometry = Geometry;
        params.AbsoluteCoordinate = AbsoluteCoordinate;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFF80
     *         Name   -> Function /Script/UMG.MenuAnchor.ToggleOpen
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bFocusOnOpen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMenuAnchor::ToggleOpen(bool bFocusOnOpen)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.ToggleOpen");
        
        UMenuAnchor_ToggleOpen_Params params {};
        params.bFocusOnOpen = bFocusOnOpen;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFF50
     *         Name   -> Function /Script/UMG.MenuAnchor.ShouldOpenDueToClick
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMenuAnchor::ShouldOpenDueToClick()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.ShouldOpenDueToClick");
        
        UMenuAnchor_ShouldOpenDueToClick_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF8C0
     *         Name   -> Function /Script/UMG.MenuAnchor.Open
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bFocusMenu                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMenuAnchor::Open(bool bFocusMenu)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.Open");
        
        UMenuAnchor_Open_Params params {};
        params.bFocusMenu = bFocusMenu;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF7E0
     *         Name   -> Function /Script/UMG.MenuAnchor.IsOpen
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMenuAnchor::IsOpen()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.IsOpen");
        
        UMenuAnchor_IsOpen_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF730
     *         Name   -> Function /Script/UMG.MenuAnchor.HasOpenSubMenus
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UMenuAnchor::HasOpenSubMenus()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.HasOpenSubMenus");
        
        UMenuAnchor_HasOpenSubMenus_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF540
     *         Name   -> Function /Script/UMG.MenuAnchor.GetMenuPosition
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UMenuAnchor::GetMenuPosition()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.GetMenuPosition");
        
        UMenuAnchor_GetMenuPosition_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF2E0
     *         Name   -> Function /Script/UMG.MenuAnchor.Close
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UMenuAnchor::Close()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MenuAnchor.Close");
        
        UMenuAnchor_Close_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF4E20
     *         Name   -> Function /Script/UMG.SafeZone.SetSidesToPad
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               InPadLeft                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InPadRight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InPadTop                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               InPadBottom                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void USafeZone::SetSidesToPad(bool InPadLeft, bool InPadRight, bool InPadTop, bool InPadBottom)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.SafeZone.SetSidesToPad");
        
        USafeZone_SetSidesToPad_Params params {};
        params.InPadLeft = InPadLeft;
        params.InPadRight = InPadRight;
        params.InPadTop = InPadTop;
        params.InPadBottom = InPadBottom;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF52B0
     *         Name   -> Function /Script/UMG.ScaleBox.SetUserSpecifiedScale
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              InUserSpecifiedScale                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBox::SetUserSpecifiedScale(float InUserSpecifiedScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBox.SetUserSpecifiedScale");
        
        UScaleBox_SetUserSpecifiedScale_Params params {};
        params.InUserSpecifiedScale = InUserSpecifiedScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF50D0
     *         Name   -> Function /Script/UMG.ScaleBox.SetStretchDirection
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::EStretchDirection                           InStretchDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBox::SetStretchDirection(Slate::EStretchDirection InStretchDirection)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBox.SetStretchDirection");
        
        UScaleBox_SetStretchDirection_Params params {};
        params.InStretchDirection = InStretchDirection;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF5050
     *         Name   -> Function /Script/UMG.ScaleBox.SetStretch
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Slate::EStretch                                    InStretch                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBox::SetStretch(Slate::EStretch InStretch)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBox.SetStretch");
        
        UScaleBox_SetStretch_Params params {};
        params.InStretch = InStretch;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FF44F0
     *         Name   -> Function /Script/UMG.ScaleBox.SetIgnoreInheritedScale
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bInIgnoreInheritedScale                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UScaleBox::SetIgnoreInheritedScale(bool bInIgnoreInheritedScale)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.ScaleBox.SetIgnoreInheritedScale");
        
        UScaleBox_SetIgnoreInheritedScale_Params params {};
        params.bInIgnoreInheritedScale = bInIgnoreInheritedScale;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009400
     *         Name   -> Function /Script/UMG.WidgetComponent.SetWidget
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UUserWidget*                                  Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetWidget(UMG::UUserWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetWidget");
        
        UWidgetComponent_SetWidget_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009200
     *         Name   -> Function /Script/UMG.WidgetComponent.SetTintColorAndOpacity
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          NewTintColorAndOpacity                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetTintColorAndOpacity(const CoreUObject::FLinearColor& NewTintColorAndOpacity)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetTintColorAndOpacity");
        
        UWidgetComponent_SetTintColorAndOpacity_Params params {};
        params.NewTintColorAndOpacity = NewTintColorAndOpacity;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008FD0
     *         Name   -> Function /Script/UMG.WidgetComponent.SetOwnerPlayer
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         Engine::ULocalPlayer*                              LocalPlayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetOwnerPlayer(Engine::ULocalPlayer* LocalPlayer)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetOwnerPlayer");
        
        UWidgetComponent_SetOwnerPlayer_Params params {};
        params.LocalPlayer = LocalPlayer;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008F40
     *         Name   -> Function /Script/UMG.WidgetComponent.SetManuallyRedraw
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bUseManualRedraw                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetManuallyRedraw(bool bUseManualRedraw)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetManuallyRedraw");
        
        UWidgetComponent_SetManuallyRedraw_Params params {};
        params.bUseManualRedraw = bUseManualRedraw;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008CC0
     *         Name   -> Function /Script/UMG.WidgetComponent.SetDrawSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetDrawSize(const CoreUObject::FVector2D& Size)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetDrawSize");
        
        UWidgetComponent_SetDrawSize_Params params {};
        params.Size = Size;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008B80
     *         Name   -> Function /Script/UMG.WidgetComponent.SetBackgroundColor
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FLinearColor                          NewBackgroundColor                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetComponent::SetBackgroundColor(const CoreUObject::FLinearColor& NewBackgroundColor)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.SetBackgroundColor");
        
        UWidgetComponent_SetBackgroundColor_Params params {};
        params.NewBackgroundColor = NewBackgroundColor;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008910
     *         Name   -> Function /Script/UMG.WidgetComponent.RequestRedraw
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UWidgetComponent::RequestRedraw()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.RequestRedraw");
        
        UWidgetComponent_RequestRedraw_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01007F40
     *         Name   -> Function /Script/UMG.WidgetComponent.GetUserWidgetObject
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UUserWidget*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUserWidget* UWidgetComponent::GetUserWidgetObject()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.GetUserWidgetObject");
        
        UWidgetComponent_GetUserWidgetObject_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007F10
     *         Name   -> Function /Script/UMG.WidgetComponent.GetRenderTarget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UTextureRenderTarget2D*                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UTextureRenderTarget2D* UWidgetComponent::GetRenderTarget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.GetRenderTarget");
        
        UWidgetComponent_GetRenderTarget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007E30
     *         Name   -> Function /Script/UMG.WidgetComponent.GetOwnerPlayer
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::ULocalPlayer*                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::ULocalPlayer* UWidgetComponent::GetOwnerPlayer()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.GetOwnerPlayer");
        
        UWidgetComponent_GetOwnerPlayer_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007BE0
     *         Name   -> Function /Script/UMG.WidgetComponent.GetMaterialInstance
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::UMaterialInstanceDynamic*                  ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::UMaterialInstanceDynamic* UWidgetComponent::GetMaterialInstance()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.GetMaterialInstance");
        
        UWidgetComponent_GetMaterialInstance_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007A60
     *         Name   -> Function /Script/UMG.WidgetComponent.GetDrawSize
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidgetComponent::GetDrawSize()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetComponent.GetDrawSize");
        
        UWidgetComponent_GetDrawSize_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008C00
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.SetCustomHitResult
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         Engine::FHitResult                                 HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetInteractionComponent::SetCustomHitResult(const Engine::FHitResult& HitResult)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.SetCustomHitResult");
        
        UWidgetInteractionComponent_SetCustomHitResult_Params params {};
        params.HitResult = HitResult;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010089B0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.SendKeyChar
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                Characters                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRepeat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::SendKeyChar(const BasicTypes::FString& Characters, bool bRepeat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.SendKeyChar");
        
        UWidgetInteractionComponent_SendKeyChar_Params params {};
        params.Characters = Characters;
        params.bRepeat = bRepeat;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008930
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.ScrollWheel
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         float                                              ScrollDelta                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetInteractionComponent::ScrollWheel(float ScrollDelta)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.ScrollWheel");
        
        UWidgetInteractionComponent_ScrollWheel_Params params {};
        params.ScrollDelta = ScrollDelta;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010087B0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.ReleasePointerKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetInteractionComponent::ReleasePointerKey(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.ReleasePointerKey");
        
        UWidgetInteractionComponent_ReleasePointerKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010086B0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.ReleaseKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::ReleaseKey(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.ReleaseKey");
        
        UWidgetInteractionComponent_ReleaseKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010084A0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.PressPointerKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetInteractionComponent::PressPointerKey(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.PressPointerKey");
        
        UWidgetInteractionComponent_PressPointerKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008360
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.PressKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               bRepeat                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::PressKey(const InputCore::FKey& Key, bool bRepeat)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.PressKey");
        
        UWidgetInteractionComponent_PressKey_Params params {};
        params.Key = Key;
        params.bRepeat = bRepeat;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008260
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.PressAndReleaseKey
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         InputCore::FKey                                    Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::PressAndReleaseKey(const InputCore::FKey& Key)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.PressAndReleaseKey");
        
        UWidgetInteractionComponent_PressAndReleaseKey_Params params {};
        params.Key = Key;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008230
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.IsOverInteractableWidget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::IsOverInteractableWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.IsOverInteractableWidget");
        
        UWidgetInteractionComponent_IsOverInteractableWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008200
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.IsOverHitTestVisibleWidget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::IsOverHitTestVisibleWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.IsOverHitTestVisibleWidget");
        
        UWidgetInteractionComponent_IsOverHitTestVisibleWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010081D0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.IsOverFocusableWidget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetInteractionComponent::IsOverFocusableWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.IsOverFocusableWidget");
        
        UWidgetInteractionComponent_IsOverFocusableWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007AD0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.GetLastHitResult
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         Engine::FHitResult                                 ReturnValue                                                (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
     */
    Engine::FHitResult UWidgetInteractionComponent::GetLastHitResult()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.GetLastHitResult");
        
        UWidgetInteractionComponent_GetLastHitResult_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007AA0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.GetHoveredWidgetComponent
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidgetComponent*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidgetComponent* UWidgetInteractionComponent::GetHoveredWidgetComponent()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.GetHoveredWidgetComponent");
        
        UWidgetInteractionComponent_GetHoveredWidgetComponent_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010079C0
     *         Name   -> Function /Script/UMG.WidgetInteractionComponent.Get2DHitLocation
     *         Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidgetInteractionComponent::Get2DHitLocation()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetInteractionComponent.Get2DHitLocation");
        
        UWidgetInteractionComponent_Get2DHitLocation_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009790
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsVerticalBoxSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UVerticalBoxSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UVerticalBoxSlot* UWidgetLayoutLibrary::STATIC_SlotAsVerticalBoxSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsVerticalBoxSlot");
        
        UWidgetLayoutLibrary_SlotAsVerticalBoxSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009710
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsUniformGridSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UUniformGridSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UUniformGridSlot* UWidgetLayoutLibrary::STATIC_SlotAsUniformGridSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsUniformGridSlot");
        
        UWidgetLayoutLibrary_SlotAsUniformGridSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009690
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsOverlaySlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UOverlaySlot*                                 ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UOverlaySlot* UWidgetLayoutLibrary::STATIC_SlotAsOverlaySlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsOverlaySlot");
        
        UWidgetLayoutLibrary_SlotAsOverlaySlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009610
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsHorizontalBoxSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UHorizontalBoxSlot*                           ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UHorizontalBoxSlot* UWidgetLayoutLibrary::STATIC_SlotAsHorizontalBoxSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsHorizontalBoxSlot");
        
        UWidgetLayoutLibrary_SlotAsHorizontalBoxSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009590
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsGridSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UGridSlot*                                    ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UGridSlot* UWidgetLayoutLibrary::STATIC_SlotAsGridSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsGridSlot");
        
        UWidgetLayoutLibrary_SlotAsGridSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009510
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsCanvasSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UCanvasPanelSlot*                             ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UCanvasPanelSlot* UWidgetLayoutLibrary::STATIC_SlotAsCanvasSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsCanvasSlot");
        
        UWidgetLayoutLibrary_SlotAsCanvasSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009490
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.SlotAsBorderSlot
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UBorderSlot*                                  ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UBorderSlot* UWidgetLayoutLibrary::STATIC_SlotAsBorderSlot(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.SlotAsBorderSlot");
        
        UWidgetLayoutLibrary_SlotAsBorderSlot_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x010088A0
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.RemoveAllWidgets
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetLayoutLibrary::STATIC_RemoveAllWidgets(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.RemoveAllWidgets");
        
        UWidgetLayoutLibrary_RemoveAllWidgets_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008590
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.ProjectWorldLocationToWidgetPosition
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector                               WorldLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ScreenPosition                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetLayoutLibrary::STATIC_ProjectWorldLocationToWidgetPosition(Engine::APlayerController* PlayerController, const CoreUObject::FVector& WorldLocation, CoreUObject::FVector2D* ScreenPosition)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.ProjectWorldLocationToWidgetPosition");
        
        UWidgetLayoutLibrary_ProjectWorldLocationToWidgetPosition_Params params {};
        params.PlayerController = PlayerController;
        params.WorldLocation = WorldLocation;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (ScreenPosition != nullptr)
            *ScreenPosition = params.ScreenPosition;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008090
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetViewportWidgetGeometry
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FGeometry                               ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    SlateCore::FGeometry UWidgetLayoutLibrary::STATIC_GetViewportWidgetGeometry(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetViewportWidgetGeometry");
        
        UWidgetLayoutLibrary_GetViewportWidgetGeometry_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008000
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetViewportSize
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidgetLayoutLibrary::STATIC_GetViewportSize(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetViewportSize");
        
        UWidgetLayoutLibrary_GetViewportSize_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007F70
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetViewportScale
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    float UWidgetLayoutLibrary::STATIC_GetViewportScale(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetViewportScale");
        
        UWidgetLayoutLibrary_GetViewportScale_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007E60
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetPlayerScreenWidgetGeometry
     *         Flags  -> (Final, Native, Static, Public, BlueprintCallable)
     * Parameters:
     *         Engine::APlayerController*                         PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         SlateCore::FGeometry                               ReturnValue                                                (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     */
    SlateCore::FGeometry UWidgetLayoutLibrary::STATIC_GetPlayerScreenWidgetGeometry(Engine::APlayerController* PlayerController)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetPlayerScreenWidgetGeometry");
        
        UWidgetLayoutLibrary_GetPlayerScreenWidgetGeometry_Params params {};
        params.PlayerController = PlayerController;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007CE0
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionScaledByDPI
     *         Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
     * Parameters:
     *         Engine::APlayerController*                         Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              LocationX                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         float                                              LocationY                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool UWidgetLayoutLibrary::STATIC_GetMousePositionScaledByDPI(Engine::APlayerController* Player, float* LocationX, float* LocationY)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionScaledByDPI");
        
        UWidgetLayoutLibrary_GetMousePositionScaledByDPI_Params params {};
        params.Player = Player;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        if (LocationX != nullptr)
            *LocationX = params.LocationX;
        if (LocationY != nullptr)
            *LocationY = params.LocationY;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007C50
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionOnViewport
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::UObject*                              WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidgetLayoutLibrary::STATIC_GetMousePositionOnViewport(CoreUObject::UObject* WorldContextObject)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionOnViewport");
        
        UWidgetLayoutLibrary_GetMousePositionOnViewport_Params params {};
        params.WorldContextObject = WorldContextObject;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007C10
     *         Name   -> Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionOnPlatform
     *         Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
     * Parameters:
     *         CoreUObject::FVector2D                             ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::FVector2D UWidgetLayoutLibrary::STATIC_GetMousePositionOnPlatform()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetLayoutLibrary.GetMousePositionOnPlatform");
        
        UWidgetLayoutLibrary_GetMousePositionOnPlatform_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01008AF0
     *         Name   -> Function /Script/UMG.WidgetSwitcher.SetActiveWidgetIndex
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetSwitcher::SetActiveWidgetIndex(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.SetActiveWidgetIndex");
        
        UWidgetSwitcher_SetActiveWidgetIndex_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FFBEF0
     *         Name   -> Function /Script/UMG.WidgetSwitcher.SetActiveWidget
     *         Flags  -> (Native, Public, BlueprintCallable)
     * Parameters:
     *         UMG::UWidget*                                      Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetSwitcher::SetActiveWidget(UMG::UWidget* Widget)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.SetActiveWidget");
        
        UWidgetSwitcher_SetActiveWidget_Params params {};
        params.Widget = Widget;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008140
     *         Name   -> Function /Script/UMG.WidgetSwitcher.GetWidgetAtIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidgetSwitcher::GetWidgetAtIndex(int32_t Index)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.GetWidgetAtIndex");
        
        UWidgetSwitcher_GetWidgetAtIndex_Params params {};
        params.Index = Index;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007E00
     *         Name   -> Function /Script/UMG.WidgetSwitcher.GetNumWidgets
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UWidgetSwitcher::GetNumWidgets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.GetNumWidgets");
        
        UWidgetSwitcher_GetNumWidgets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007A30
     *         Name   -> Function /Script/UMG.WidgetSwitcher.GetActiveWidgetIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UWidgetSwitcher::GetActiveWidgetIndex()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.GetActiveWidgetIndex");
        
        UWidgetSwitcher_GetActiveWidgetIndex_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01007A00
     *         Name   -> Function /Script/UMG.WidgetSwitcher.GetActiveWidget
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         UMG::UWidget*                                      ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    UMG::UWidget* UWidgetSwitcher::GetActiveWidget()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcher.GetActiveWidget");
        
        UWidgetSwitcher_GetActiveWidget_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x01009280
     *         Name   -> Function /Script/UMG.WidgetSwitcherSlot.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetSwitcherSlot::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcherSlot.SetVerticalAlignment");
        
        UWidgetSwitcherSlot_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009050
     *         Name   -> Function /Script/UMG.WidgetSwitcherSlot.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetSwitcherSlot::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcherSlot.SetPadding");
        
        UWidgetSwitcherSlot_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008D40
     *         Name   -> Function /Script/UMG.WidgetSwitcherSlot.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWidgetSwitcherSlot::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WidgetSwitcherSlot.SetHorizontalAlignment");
        
        UWidgetSwitcherSlot_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01009300
     *         Name   -> Function /Script/UMG.WindowTitleBarArea.SetVerticalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EVerticalAlignment                      InVerticalAlignment                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarArea::SetVerticalAlignment(SlateCore::EVerticalAlignment InVerticalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarArea.SetVerticalAlignment");
        
        UWindowTitleBarArea_SetVerticalAlignment_Params params {};
        params.InVerticalAlignment = InVerticalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x010090E0
     *         Name   -> Function /Script/UMG.WindowTitleBarArea.SetPadding
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::FMargin                                 InPadding                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarArea::SetPadding(const SlateCore::FMargin& InPadding)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarArea.SetPadding");
        
        UWindowTitleBarArea_SetPadding_Params params {};
        params.InPadding = InPadding;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x01008DC0
     *         Name   -> Function /Script/UMG.WindowTitleBarArea.SetHorizontalAlignment
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         SlateCore::EHorizontalAlignment                    InHorizontalAlignment                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UWindowTitleBarArea::SetHorizontalAlignment(SlateCore::EHorizontalAlignment InHorizontalAlignment)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.WindowTitleBarArea.SetHorizontalAlignment");
        
        UWindowTitleBarArea_SetHorizontalAlignment_Params params {};
        params.InHorizontalAlignment = InHorizontalAlignment;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF700
     *         Name   -> Function /Script/UMG.MouseCursorBinding.GetValue
     *         Flags  -> (Final, Native, Public, Const)
     * Parameters:
     *         CoreUObject::EMouseCursor                          ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    CoreUObject::EMouseCursor UMouseCursorBinding::GetValue()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MouseCursorBinding.GetValue");
        
        UMouseCursorBinding_GetValue_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFDB0
     *         Name   -> Function /Script/UMG.MultiLineEditableText.SetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableText::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableText.SetText");
        
        UMultiLineEditableText_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFB90
     *         Name   -> Function /Script/UMG.MultiLineEditableText.SetIsReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bReadOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableText::SetIsReadOnly(bool bReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableText.SetIsReadOnly");
        
        UMultiLineEditableText_SetIsReadOnly_Params params {};
        params.bReadOnly = bReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.MultiLineEditableText.OnMultiLineEditableTextCommittedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::ETextCommit                             CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableText::OnMultiLineEditableTextCommittedEvent__DelegateSignature(const BasicTypes::FText& Text, SlateCore::ETextCommit CommitMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.MultiLineEditableText.OnMultiLineEditableTextCommittedEvent__DelegateSignature");
        
        UMultiLineEditableText_OnMultiLineEditableTextCommittedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        params.CommitMethod = CommitMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.MultiLineEditableText.OnMultiLineEditableTextChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableText::OnMultiLineEditableTextChangedEvent__DelegateSignature(const BasicTypes::FText& Text)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.MultiLineEditableText.OnMultiLineEditableTextChangedEvent__DelegateSignature");
        
        UMultiLineEditableText_OnMultiLineEditableTextChangedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF5B0
     *         Name   -> Function /Script/UMG.MultiLineEditableText.GetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMultiLineEditableText::GetText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableText.GetText");
        
        UMultiLineEditableText_GetText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFE80
     *         Name   -> Function /Script/UMG.MultiLineEditableTextBox.SetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InText                                                     (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableTextBox::SetText(const BasicTypes::FText& InText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableTextBox.SetText");
        
        UMultiLineEditableTextBox_SetText_Params params {};
        params.InText = InText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFC20
     *         Name   -> Function /Script/UMG.MultiLineEditableTextBox.SetIsReadOnly
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         bool                                               bReadOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableTextBox::SetIsReadOnly(bool bReadOnly)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableTextBox.SetIsReadOnly");
        
        UMultiLineEditableTextBox_SetIsReadOnly_Params params {};
        params.bReadOnly = bReadOnly;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEFAC0
     *         Name   -> Function /Script/UMG.MultiLineEditableTextBox.SetError
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  InError                                                    (Parm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableTextBox::SetError(const BasicTypes::FText& InError)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableTextBox.SetError");
        
        UMultiLineEditableTextBox_SetError_Params params {};
        params.InError = InError;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.MultiLineEditableTextBox.OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         SlateCore::ETextCommit                             CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableTextBox::OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature(const BasicTypes::FText& Text, SlateCore::ETextCommit CommitMethod)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.MultiLineEditableTextBox.OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature");
        
        UMultiLineEditableTextBox_OnMultiLineEditableTextBoxCommittedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        params.CommitMethod = CommitMethod;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x006628B0
     *         Name   -> DelegateFunction /Script/UMG.MultiLineEditableTextBox.OnMultiLineEditableTextBoxChangedEvent__DelegateSignature
     *         Flags  -> (MulticastDelegate, Public, Delegate, HasOutParms)
     * Parameters:
     *         BasicTypes::FText                                  Text                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UMultiLineEditableTextBox::OnMultiLineEditableTextBoxChangedEvent__DelegateSignature(const BasicTypes::FText& Text)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("DelegateFunction /Script/UMG.MultiLineEditableTextBox.OnMultiLineEditableTextBoxChangedEvent__DelegateSignature");
        
        UMultiLineEditableTextBox_OnMultiLineEditableTextBoxChangedEvent__DelegateSignature_Params params {};
        params.Text = Text;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x00FEF640
     *         Name   -> Function /Script/UMG.MultiLineEditableTextBox.GetText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UMultiLineEditableTextBox::GetText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/UMG.MultiLineEditableTextBox.GetText");
        
        UMultiLineEditableTextBox_GetText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
