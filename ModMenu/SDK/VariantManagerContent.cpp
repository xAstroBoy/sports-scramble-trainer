/**
 * ----------------------------------------
 * |        Generated By CheatGear        |
 * ----------------------------------------
 * | Game:    SportsScramble              |
 * | Version: 1                           |
 * | Date:    10/14/2024                  |
 * ----------------------------------------
 */

#include "pch.h"
#include <cstdint>
#include <vector>
#include <string>
#include <locale>
#include <unordered_set>
#include "Headers/Global_DEFINES.h"
#include "Headers/BasicTypes.h"
#include "Headers/CoreUObject_UFunction.h"
#include "Headers/VariantManagerContent_ENUMS.h"
#include "Headers/VariantManagerContent_PARAMS.h"
#include "Headers/VariantManagerContent_ULevelVariantSets.h"
#include "Headers/VariantManagerContent_ALevelVariantSetsActor.h"
#include "Headers/VariantManagerContent_UPropertyValue.h"
#include "Headers/VariantManagerContent_UPropertyValueMaterial.h"
#include "Headers/VariantManagerContent_UPropertyValueTransform.h"
#include "Headers/VariantManagerContent_UPropertyValueVisibility.h"
#include "Headers/VariantManagerContent_UVariant.h"
#include "Headers/VariantManagerContent_UVariantObjectBinding.h"
#include "Headers/VariantManagerContent_UVariantSet.h"

#ifdef _MSC_VER
    #pragma pack(push, 0x01)
#endif

namespace CG::VariantManagerContent
{
    // --------------------------------------------------
    // # Structs functions
    // --------------------------------------------------
    /**
     * Function:
     *         RVA    -> 0x0023FAD0
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSets.GetVariantSet
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            VariantSetIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VariantManagerContent::UVariantSet*                ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    VariantManagerContent::UVariantSet* ULevelVariantSets::GetVariantSet(int32_t VariantSetIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSets.GetVariantSet");
        
        ULevelVariantSets_GetVariantSet_Params params {};
        params.VariantSetIndex = VariantSetIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FA10
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSets.GetNumVariantSets
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t ULevelVariantSets::GetNumVariantSets()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSets.GetNumVariantSets");
        
        ULevelVariantSets_GetNumVariantSets_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FDA0
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSetsActor.SwitchOnVariantByName
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FString                                VariantSetName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         BasicTypes::FString                                VariantName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ALevelVariantSetsActor::SwitchOnVariantByName(const BasicTypes::FString& VariantSetName, const BasicTypes::FString& VariantName)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSetsActor.SwitchOnVariantByName");
        
        ALevelVariantSetsActor_SwitchOnVariantByName_Params params {};
        params.VariantSetName = VariantSetName;
        params.VariantName = VariantName;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FCE0
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSetsActor.SwitchOnVariantByIndex
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            VariantSetIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         int32_t                                            VariantIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         bool                                               ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    bool ALevelVariantSetsActor::SwitchOnVariantByIndex(int32_t VariantSetIndex, int32_t VariantIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSetsActor.SwitchOnVariantByIndex");
        
        ALevelVariantSetsActor_SwitchOnVariantByIndex_Params params {};
        params.VariantSetIndex = VariantSetIndex;
        params.VariantIndex = VariantIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FC40
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSetsActor.SetLevelVariantSets
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         VariantManagerContent::ULevelVariantSets*          InVariantSets                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void ALevelVariantSetsActor::SetLevelVariantSets(VariantManagerContent::ULevelVariantSets* InVariantSets)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSetsActor.SetLevelVariantSets");
        
        ALevelVariantSetsActor_SetLevelVariantSets_Params params {};
        params.InVariantSets = InVariantSets;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F940
     *         Name   -> Function /Script/VariantManagerContent.LevelVariantSetsActor.GetLevelVariantSets
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         bool                                               bLoad                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VariantManagerContent::ULevelVariantSets*          ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    VariantManagerContent::ULevelVariantSets* ALevelVariantSetsActor::GetLevelVariantSets(bool bLoad)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.LevelVariantSetsActor.GetLevelVariantSets");
        
        ALevelVariantSetsActor_GetLevelVariantSets_Params params {};
        params.bLoad = bLoad;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FCC0
     *         Name   -> Function /Script/VariantManagerContent.Variant.SwitchOn
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         void                                               ReturnValue
     */
    void UVariant::SwitchOn()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.Variant.SwitchOn");
        
        UVariant_SwitchOn_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FB60
     *         Name   -> Function /Script/VariantManagerContent.Variant.SetDisplayText
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  NewDisplayText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVariant::SetDisplayText(const BasicTypes::FText& NewDisplayText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.Variant.SetDisplayText");
        
        UVariant_SetDisplayText_Params params {};
        params.NewDisplayText = NewDisplayText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F9E0
     *         Name   -> Function /Script/VariantManagerContent.Variant.GetNumActors
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UVariant::GetNumActors()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.Variant.GetNumActors");
        
        UVariant_GetNumActors_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F8B0
     *         Name   -> Function /Script/VariantManagerContent.Variant.GetDisplayText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UVariant::GetDisplayText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.Variant.GetDisplayText");
        
        UVariant_GetDisplayText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F820
     *         Name   -> Function /Script/VariantManagerContent.Variant.GetActor
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ActorIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         Engine::AActor*                                    ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    Engine::AActor* UVariant::GetActor(int32_t ActorIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.Variant.GetActor");
        
        UVariant_GetActor_Params params {};
        params.ActorIndex = ActorIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FB60
     *         Name   -> Function /Script/VariantManagerContent.VariantSet.SetDisplayText
     *         Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
     * Parameters:
     *         BasicTypes::FText                                  NewDisplayText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
     *         void                                               ReturnValue
     */
    void UVariantSet::SetDisplayText(const BasicTypes::FText& NewDisplayText)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.VariantSet.SetDisplayText");
        
        UVariantSet_SetDisplayText_Params params {};
        params.NewDisplayText = NewDisplayText;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
    }

    /**
     * Function:
     *         RVA    -> 0x0023FA40
     *         Name   -> Function /Script/VariantManagerContent.VariantSet.GetVariant
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            VariantIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     *         VariantManagerContent::UVariant*                   ReturnValue                                                (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    VariantManagerContent::UVariant* UVariantSet::GetVariant(int32_t VariantIndex)
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.VariantSet.GetVariant");
        
        UVariantSet_GetVariant_Params params {};
        params.VariantIndex = VariantIndex;
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F9E0
     *         Name   -> Function /Script/VariantManagerContent.VariantSet.GetNumVariants
     *         Flags  -> (Final, Native, Public, BlueprintCallable)
     * Parameters:
     *         int32_t                                            ReturnValue                                                (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
     */
    int32_t UVariantSet::GetNumVariants()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.VariantSet.GetNumVariants");
        
        UVariantSet_GetNumVariants_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

    /**
     * Function:
     *         RVA    -> 0x0023F8B0
     *         Name   -> Function /Script/VariantManagerContent.VariantSet.GetDisplayText
     *         Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
     * Parameters:
     *         BasicTypes::FText                                  ReturnValue                                                (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
     */
    BasicTypes::FText UVariantSet::GetDisplayText()
    {
        static CoreUObject::UFunction* fn = nullptr;
        if (!fn)
            fn = CoreUObject::UObject::FindObject<CoreUObject::UFunction>("Function /Script/VariantManagerContent.VariantSet.GetDisplayText");
        
        UVariantSet_GetDisplayText_Params params {};
        
        auto flags = fn->FunctionFlags;
        CoreUObject::UObject::ProcessEvent(fn, &params);
        fn->FunctionFlags = flags;
        
        return params.ReturnValue;
    }

}

#ifdef _MSC_VER
    #pragma pack(pop)
#endif
